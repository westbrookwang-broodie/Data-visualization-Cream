/**
 * tdesign v1.3.1
 * (c) 2023 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-9ddd4050.mjs';
import { _ as _typeof } from '../_chunks/dep-dbb72607.mjs';
import { defineComponent, ref, onMounted, computed, createVNode, Fragment, createTextVNode } from 'vue';
import { BacktopIcon } from 'tdesign-icons-vue-next';
import { scrollTo } from '../utils/dom.mjs';
import '../hooks/index.mjs';
import { useGlobalIcon } from '../hooks/useGlobalIcon.mjs';
import props from './props.mjs';
import { usePrefixClass } from '../hooks/useConfig.mjs';
import { useConfig } from '../config-provider/useConfig.mjs';
import { useContent } from '../hooks/tnode.mjs';
import { useChildSlots } from '../hooks/slot.mjs';
import '../_chunks/dep-bec45e18.mjs';
import '../_chunks/dep-81ef22a5.mjs';
import '../_chunks/dep-339a814a.mjs';
import '../_chunks/dep-0f434994.mjs';
import '../_chunks/dep-f5c677eb.mjs';
import '../_chunks/dep-546c20ab.mjs';
import '../_chunks/dep-14b6ba18.mjs';
import '../_chunks/dep-ed4e2839.mjs';
import '../utils/easing.mjs';
import '../hooks/icon.mjs';
import '../hooks/useCommonClassName.mjs';
import '../hooks/useDefaultValue.mjs';
import '../_chunks/dep-62d92cbc.mjs';
import '../_chunks/dep-cb8e09e3.mjs';
import '../_chunks/dep-7c35655e.mjs';
import '../_chunks/dep-c6a9d3e7.mjs';
import '../hooks/useDestroyOnClose.mjs';
import '../hooks/useKeepAnimation.mjs';
import '../_chunks/dep-f4a1f294.mjs';
import '../_chunks/dep-c9ce648e.mjs';
import '../_chunks/dep-4d256b91.mjs';
import '../_chunks/dep-0d7bf0e3.mjs';
import '../_chunks/dep-201da76e.mjs';
import '../_chunks/dep-e62c24d1.mjs';
import '../_chunks/dep-fe69e368.mjs';
import '../_chunks/dep-976f9516.mjs';
import '../_chunks/dep-11e36026.mjs';
import '../_chunks/dep-428963eb.mjs';
import '../_chunks/dep-019ee94c.mjs';
import '../_chunks/dep-3d1dcd03.mjs';
import '../_chunks/dep-72f2a0b4.mjs';
import '../_chunks/dep-56623c1f.mjs';
import '../_chunks/dep-99aaf398.mjs';
import '../_chunks/dep-9e4f2d05.mjs';
import '../_chunks/dep-2351c759.mjs';
import '../_chunks/dep-2d971205.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';
import '../_chunks/dep-3be1a481.mjs';
import '../_chunks/dep-b76005d0.mjs';
import '../hooks/useRipple.mjs';
import '../utils/set-style.mjs';
import '../hooks/useVirtualScroll.mjs';
import '../hooks/useVModel.mjs';
import '../_chunks/dep-c19618d4.mjs';
import '../_chunks/dep-cd3b0fa6.mjs';
import '../_chunks/dep-f694a61e.mjs';
import '../_chunks/dep-d96da68c.mjs';
import '../config-provider/type.mjs';
import '../_chunks/dep-ac072285.mjs';
import '../_chunks/dep-8b01f133.mjs';
import '../_chunks/dep-80f4d76a.mjs';
import '../_chunks/dep-59f92248.mjs';
import '../utils/render-tnode.mjs';
import '../_chunks/dep-094ccbd7.mjs';

var _BackTop = defineComponent({
  name: "TBackTop",
  props: props,
  setup: function setup(props2) {
    var visible = ref(false);
    var containerRef = ref(null);
    var componentName = usePrefixClass("back-top");
    var _useConfig = useConfig("alert"),
      classPrefix = _useConfig.classPrefix;
    var _useGlobalIcon = useGlobalIcon({
        BacktopIcon: BacktopIcon
      }),
      BacktopIcon$1 = _useGlobalIcon.BacktopIcon;
    var renderContent = useContent();
    var getContainer = function getContainer(container) {
      if (typeof container === "string" && (typeof document === "undefined" ? "undefined" : _typeof(document)) !== void 0) {
        if (container === "body") {
          return document;
        }
        return document.querySelector(container);
      }
      if (typeof container === "function") {
        return container();
      }
      return null;
    };
    onMounted(function () {
      containerRef.value = getContainer(props2.container);
      var visibleHeight;
      if (typeof props2.visibleHeight === "string") {
        visibleHeight = Number(props2.visibleHeight.replace("px", ""));
      } else {
        visibleHeight = props2.visibleHeight;
      }
      if (visibleHeight === 0) {
        visible.value = true;
        return;
      }
      var scrollDOM;
      if (containerRef.value.scrollTop === void 0) {
        scrollDOM = document.documentElement;
      } else {
        scrollDOM = containerRef.value;
      }
      containerRef.value.onscroll = function () {
        var scrollTop = scrollDOM.scrollTop;
        if (scrollTop >= visibleHeight) {
          visible.value = true;
          containerRef.value.onscroll = null;
        }
      };
    });
    return function () {
      var theme = props2.theme,
        shape = props2.shape,
        size = props2.size,
        target = props2.target,
        duration = props2.duration,
        offset = props2.offset,
        container = props2.container;
      var getChild = useChildSlots();
      var children = getChild();
      if (children.length < 1) children = null;
      var cls = computed(function () {
        var _ref;
        return _ref = {}, _defineProperty(_ref, componentName.value, true), _defineProperty(_ref, "".concat(componentName.value, "--theme-").concat(theme), true), _defineProperty(_ref, "".concat(componentName.value, "--").concat(shape), true), _defineProperty(_ref, "".concat(componentName.value, "--show"), visible.value), _defineProperty(_ref, "".concat(classPrefix.value, "-size-s"), size === "small"), _defineProperty(_ref, "".concat(classPrefix.value, "-size-m"), size === "medium"), _ref;
      });
      var defaultContent = createVNode(Fragment, null, [createVNode(BacktopIcon$1, {
        "class": "".concat(componentName.value, "__icon"),
        "size": "24"
      }, null), createVNode("span", {
        "class": "".concat(componentName.value, "__text")
      }, [createTextVNode("TOP")])]);
      var getBackTo = function getBackTo() {
        if (target === container) return 0;
        if (target === "body") return 0;
        if (!target) return 0;
        var targetNode = getContainer(target);
        if (!targetNode) return 0;
        var y = targetNode.getBoundingClientRect().y;
        return y;
      };
      var handleClick = function handleClick(e) {
        var _props2$onClick;
        var y = getBackTo();
        scrollTo(y, {
          container: containerRef.value,
          duration: duration
        });
        (_props2$onClick = props2.onClick) === null || _props2$onClick === void 0 ? void 0 : _props2$onClick.call(props2, {
          e: e
        });
      };
      var positionStyle = computed(function () {
        return {
          insetInlineEnd: offset[0],
          insetBlockEnd: offset[1]
        };
      });
      return createVNode("button", {
        "type": "button",
        "class": cls.value,
        "style": positionStyle.value,
        "onClick": handleClick
      }, [renderContent("content", "default", defaultContent)]);
    };
  }
});

export { _BackTop as default };
//# sourceMappingURL=back-top.mjs.map
