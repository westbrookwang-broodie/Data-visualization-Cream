{"version":3,"file":"upload.mjs","sources":["../../src/upload/upload.tsx"],"sourcesContent":["import { computed, defineComponent } from 'vue';\nimport { UploadIcon } from 'tdesign-icons-vue-next';\nimport props from './props';\nimport NormalFile from './themes/normal-file';\nimport DraggerFile from './themes/dragger-file';\nimport ImageCard from './themes/image-card';\nimport MultipleFlowList from './themes/multiple-flow-list';\nimport useUpload from './hooks/useUpload';\nimport Button from '../button';\nimport { CommonDisplayFileProps, UploadProps } from './interface';\nimport { UploadDragEvents } from './hooks/useDrag';\nimport CustomFile from './themes/custom-file';\nimport { useContent, useTNodeJSX } from '../hooks/tnode';\nimport { useFormDisabled } from '../form/hooks';\n\nexport default defineComponent({\n  name: 'TUpload',\n\n  props,\n\n  setup(props: UploadProps, { slots, expose }) {\n    const renderContent = useContent();\n    const renderTNodeJSX = useTNodeJSX();\n    const {\n      locale,\n      classPrefix,\n      triggerUploadText,\n      toUploadFiles,\n      displayFiles,\n      uploadValue,\n      sizeOverLimitMessage,\n      uploading,\n      tipsClasses,\n      errorClasses,\n      placeholderClass,\n      inputRef,\n      onInnerRemove,\n      uploadFiles,\n      onNormalFileChange,\n      onDragFileChange,\n      triggerUpload,\n      cancelUpload,\n    } = useUpload(props);\n    const disabled = useFormDisabled();\n\n    expose({\n      upload: inputRef.value,\n      uploading,\n      triggerUpload,\n      uploadFiles,\n      cancelUpload,\n    });\n\n    const renderTrigger = () => {\n      const getDefaultTrigger = () => {\n        if (props.theme === 'file-input') {\n          return (\n            <Button disabled={disabled.value} variant=\"outline\" {...props.triggerButtonProps}>\n              {triggerUploadText.value}\n            </Button>\n          );\n        }\n        return (\n          <Button disabled={disabled.value} variant=\"outline\" icon={() => <UploadIcon />} {...props.triggerButtonProps}>\n            {triggerUploadText.value}\n          </Button>\n        );\n      };\n      return (\n        renderContent('default', 'trigger', {\n          params: { dragActive: false, files: uploadValue.value },\n        }) || getDefaultTrigger()\n      );\n    };\n\n    const commonDisplayFileProps = computed<CommonDisplayFileProps>(() => ({\n      files: uploadValue.value,\n      toUploadFiles: toUploadFiles.value,\n      displayFiles: displayFiles.value,\n      theme: props.theme,\n      placeholder: props.placeholder,\n      disabled: disabled.value,\n      tips: props.tips,\n      status: props.status,\n      sizeOverLimitMessage: sizeOverLimitMessage.value,\n      uploading: uploading.value,\n      classPrefix: classPrefix.value,\n      tipsClasses,\n      errorClasses,\n      placeholderClass,\n      locale: locale.value,\n      autoUpload: props.autoUpload,\n      abridgeName: props.abridgeName,\n      showUploadProgress: props.showUploadProgress,\n      fileListDisplay: props.fileListDisplay,\n      onRemove: onInnerRemove,\n    }));\n\n    const dragProps: UploadDragEvents = {\n      onDragFileChange,\n      onDragenter: props.onDragenter,\n      onDragleave: props.onDragleave,\n      onDrop: props.onDrop,\n    };\n\n    const getNormalFileNode = () => (\n      <NormalFile\n        {...commonDisplayFileProps.value}\n        multiple={props.multiple}\n        v-slots={{\n          fileListDisplay: slots.fileListDisplay,\n          'file-list-display': slots['file-list-display'],\n        }}\n      >\n        <div class={`${classPrefix.value}-upload__trigger`} onClick={triggerUpload}>\n          {renderTrigger()}\n        </div>\n      </NormalFile>\n    );\n\n    const getSingleFileDraggerUploadNode = () => (\n      <DraggerFile\n        {...commonDisplayFileProps.value}\n        dragEvents={dragProps}\n        trigger={props.trigger}\n        cancelUpload={cancelUpload}\n        triggerUpload={triggerUpload}\n        uploadFiles={uploadFiles}\n        onCancelUpload={props.onCancelUpload}\n        v-slots={{\n          fileListDisplay: slots.fileListDisplay,\n          'file-list-display': slots['file-list-display'],\n        }}\n      />\n    );\n\n    const getImageCardUploadNode = () => (\n      <ImageCard\n        {...commonDisplayFileProps.value}\n        multiple={props.multiple}\n        max={props.max}\n        showUploadProgress={props.showUploadProgress}\n        triggerUpload={triggerUpload}\n        uploadFiles={uploadFiles}\n        cancelUpload={cancelUpload}\n        onPreview={props.onPreview}\n      />\n    );\n\n    const getFlowListNode = () => (\n      <MultipleFlowList\n        {...commonDisplayFileProps.value}\n        isBatchUpload={props.isBatchUpload}\n        draggable={props.draggable}\n        dragEvents={dragProps}\n        uploadFiles={uploadFiles}\n        cancelUpload={cancelUpload}\n        onPreview={props.onPreview}\n        v-slots={{\n          fileListDisplay: slots.fileListDisplay,\n          'file-list-display': slots['file-list-display'],\n        }}\n      >\n        <div class={`${classPrefix.value}-upload__trigger`} onClick={triggerUpload}>\n          {!props.draggable && renderTrigger()}\n        </div>\n      </MultipleFlowList>\n    );\n\n    const getCustomFile = () => (\n      <CustomFile\n        {...commonDisplayFileProps.value}\n        draggable={props.draggable}\n        dragContent={props.dragContent}\n        dragEvents={dragProps}\n        triggerUpload={triggerUpload}\n        trigger={props.trigger}\n        childrenNode={slots.default}\n        v-slots={{\n          dragContent: slots.dragContent,\n          'drag-content': slots['drag-content'],\n          trigger: slots.trigger,\n        }}\n      >\n        {renderTrigger()}\n      </CustomFile>\n    );\n\n    return () => (\n      <div class={`${classPrefix.value}-upload`}>\n        <input\n          ref={inputRef}\n          type=\"file\"\n          disabled={disabled.value}\n          onChange={onNormalFileChange}\n          multiple={props.multiple}\n          accept={props.accept}\n          hidden\n          {...(props.inputAttributes ? { ...props.inputAttributes } : {})}\n        />\n        {['file', 'file-input'].includes(props.theme) && !props.draggable && getNormalFileNode()}\n        {['file', 'image'].includes(props.theme) && props.draggable && getSingleFileDraggerUploadNode()}\n        {props.theme === 'image' && !props.draggable && getImageCardUploadNode()}\n        {['image-flow', 'file-flow'].includes(props.theme) && getFlowListNode()}\n        {props.theme === 'custom' && getCustomFile()}\n\n        {Boolean(props.tips || slots.tips) && (\n          <small class={[tipsClasses, { [`${classPrefix.value}-upload__tips-${props.status}`]: props.status }]}>\n            {renderTNodeJSX('tips')}\n          </small>\n        )}\n      </div>\n    );\n  },\n});\n"],"names":["defineComponent","name","props","setup","slots","_ref","expose","renderContent","useContent","renderTNodeJSX","useTNodeJSX","_useUpload","useUpload","locale","classPrefix","triggerUploadText","toUploadFiles","displayFiles","uploadValue","sizeOverLimitMessage","uploading","tipsClasses","errorClasses","placeholderClass","inputRef","onInnerRemove","uploadFiles","onNormalFileChange","onDragFileChange","triggerUpload","cancelUpload","disabled","useFormDisabled","upload","value","renderTrigger","getDefaultTrigger","theme","_createVNode","Button","_mergeProps","triggerButtonProps","_default","icon","UploadIcon","params","dragActive","files","commonDisplayFileProps","computed","placeholder","tips","status","autoUpload","abridgeName","showUploadProgress","fileListDisplay","onRemove","dragProps","onDragenter","onDragleave","onDrop","getNormalFileNode","NormalFile","multiple","concat","getSingleFileDraggerUploadNode","DraggerFile","trigger","onCancelUpload","getImageCardUploadNode","ImageCard","max","onPreview","getFlowListNode","MultipleFlowList","isBatchUpload","draggable","getCustomFile","CustomFile","dragContent","accept","inputAttributes","_objectSpread","includes","Boolean","_defineProperty"],"mappings":"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"}