{"version":3,"file":"dragger-file.mjs","sources":["../../../src/upload/themes/dragger-file.tsx"],"sourcesContent":["import { defineComponent, toRefs, PropType, ref, computed, h } from 'vue';\nimport {\n  CheckCircleFilledIcon as TdCheckCircleFilledIcon,\n  ErrorCircleFilledIcon as TdErrorCircleFilledIcon,\n} from 'tdesign-icons-vue-next';\nimport { abridgeName, getFileSizeText } from '../../_common/js/upload/utils';\nimport { TdUploadProps, UploadFile } from '../type';\nimport Button from '../../button';\nimport { CommonDisplayFileProps } from '../interface';\nimport { commonProps } from '../constants';\nimport useCommonClassName from '../../hooks/useCommonClassName';\nimport TLoading from '../../loading';\nimport useDrag, { UploadDragEvents } from '../hooks/useDrag';\nimport useGlobalIcon from '../../hooks/useGlobalIcon';\nimport ImageViewer from '../../image-viewer';\nimport { useTNodeJSX } from '../../hooks';\nimport { UploadConfig } from '../../config-provider';\n\nexport interface DraggerProps extends CommonDisplayFileProps {\n  trigger?: TdUploadProps['trigger'];\n  triggerUpload?: (e: MouseEvent) => void;\n  uploadFiles?: (toFiles?: UploadFile[]) => void;\n  cancelUpload?: (context: { e: MouseEvent; file: UploadFile }) => void;\n  dragEvents: UploadDragEvents;\n}\n\nexport default defineComponent({\n  name: 'UploadDraggerFile',\n\n  props: {\n    ...commonProps,\n    trigger: Function as PropType<DraggerProps['trigger']>,\n    triggerUpload: Function as PropType<DraggerProps['triggerUpload']>,\n    uploadFiles: Function as PropType<DraggerProps['uploadFiles']>,\n    cancelUpload: Function as PropType<DraggerProps['cancelUpload']>,\n    dragEvents: Object as PropType<DraggerProps['dragEvents']>,\n  },\n\n  setup(props, { slots }) {\n    const { displayFiles, disabled } = toRefs(props);\n    const locale = computed(() => props.locale as UploadConfig);\n\n    const renderTNodeJSX = useTNodeJSX();\n\n    const { sizeClassNames } = useCommonClassName();\n    const uploadPrefix = `${props.classPrefix}-upload`;\n\n    const drag = useDrag(props.dragEvents);\n    const { dragActive } = drag;\n\n    const draggerFileRef = ref();\n\n    const classes = computed(() => [\n      `${uploadPrefix}__dragger`,\n      { [`${uploadPrefix}__dragger-center`]: !displayFiles.value[0] },\n      { [`${uploadPrefix}__dragger-error`]: displayFiles.value[0]?.status === 'fail' },\n    ]);\n\n    const { CheckCircleFilledIcon, ErrorCircleFilledIcon } = useGlobalIcon({\n      CheckCircleFilledIcon: TdCheckCircleFilledIcon,\n      ErrorCircleFilledIcon: TdErrorCircleFilledIcon,\n    });\n\n    const renderImage = () => {\n      if (!props.displayFiles.length) return;\n      const file = displayFiles.value[0];\n      if (!file) return null;\n      const url = file?.url || file?.response?.url;\n      return (\n        <div class={`${uploadPrefix}__dragger-img-wrap`}>\n          {url && (\n            <ImageViewer images={[url]} trigger={(h, { open }: any) => <img src={url} onClick={open} />}></ImageViewer>\n          )}\n        </div>\n      );\n    };\n\n    const renderUploading = () => {\n      if (!props.displayFiles.length) return;\n      const file = displayFiles.value[0];\n      if (!file) return null;\n      if (file?.status === 'progress') {\n        return (\n          <div class={`${uploadPrefix}__single-progress`}>\n            <TLoading />\n            <span class={`${uploadPrefix}__single-percent`}>{file.percent}%</span>\n          </div>\n        );\n      }\n    };\n\n    const renderMainPreview = () => {\n      const file = displayFiles.value[0];\n      const fileName = props.abridgeName ? abridgeName(file.name, ...props.abridgeName) : file.name;\n\n      const fileInfo = [\n        <div class={`${uploadPrefix}__dragger-text`} key=\"info\">\n          <span class={`${uploadPrefix}__single-name`}>{fileName}</span>\n          {file.status === 'progress' && renderUploading()}\n          {file.status === 'success' && <CheckCircleFilledIcon />}\n          {file.status === 'fail' && <ErrorCircleFilledIcon />}\n        </div>,\n        <small class={`${sizeClassNames.small}`} key=\"size\">\n          {locale.value.file.fileSizeText}：{getFileSizeText(file.size)}\n        </small>,\n        <small class={`${sizeClassNames.small}`} key=\"time\">\n          {locale.value.file.fileOperationDateText}：{file.uploadTime || '-'}\n        </small>,\n      ];\n      return (\n        <div class={`${uploadPrefix}__dragger-progress`}>\n          {props.theme === 'image' && renderImage()}\n          <div class={`${uploadPrefix}__dragger-progress-info`}>\n            {renderTNodeJSX('fileListDisplay', { params: { files: props.displayFiles } }) || fileInfo}\n\n            <div class={`${uploadPrefix}__dragger-btns`}>\n              {['progress', 'waiting'].includes(file.status) && !disabled.value && (\n                <Button\n                  theme=\"primary\"\n                  variant=\"text\"\n                  class={`${uploadPrefix}__dragger-progress-cancel`}\n                  onClick={(e: MouseEvent) =>\n                    props.cancelUpload?.({\n                      e,\n                      file: props.toUploadFiles[0] || props.files[0],\n                    })\n                  }\n                >\n                  {locale.value?.cancelUploadText}\n                </Button>\n              )}\n              {!props.autoUpload && file.status === 'waiting' && (\n                <Button\n                  theme=\"primary\"\n                  variant=\"text\"\n                  disabled={disabled.value}\n                  onClick={() => props.uploadFiles?.()}\n                  class={`${uploadPrefix}__dragger-upload-btn`}\n                >\n                  {locale.value.triggerUploadText.normal}\n                </Button>\n              )}\n            </div>\n            {['fail', 'success'].includes(file?.status) && !disabled.value && (\n              <div class={`${uploadPrefix}__dragger-btns`}>\n                <Button\n                  theme=\"primary\"\n                  variant=\"text\"\n                  disabled={disabled.value}\n                  class={`${uploadPrefix}__dragger-progress-cancel`}\n                  onClick={props.triggerUpload}\n                >\n                  {locale.value.triggerUploadText.reupload}\n                </Button>\n                <Button\n                  theme=\"danger\"\n                  variant=\"text\"\n                  disabled={disabled.value}\n                  class={`${uploadPrefix}__dragger-delete-btn`}\n                  onClick={(e: MouseEvent) => props.onRemove({ e, index: 0, file })}\n                >\n                  {locale.value.triggerUploadText.delete}\n                </Button>\n              </div>\n            )}\n          </div>\n        </div>\n      );\n    };\n\n    const renderDefaultDragElement = () => {\n      const unActiveElement = (\n        <div>\n          <span class={`${uploadPrefix}--highlight`}>{locale.value.triggerUploadText?.normal}</span>\n          <span>&nbsp;&nbsp;/&nbsp;&nbsp;{locale.value.dragger.draggingText}</span>\n        </div>\n      );\n      const activeElement = <div>{locale.value.dragger.dragDropText}</div>;\n      return dragActive.value ? activeElement : unActiveElement;\n    };\n\n    const getContent = () => {\n      const file = displayFiles.value[0];\n      if (file && (['progress', 'success', 'fail', 'waiting'].includes(file.status) || !file.status)) {\n        return renderMainPreview();\n      }\n      return (\n        <div class={`${uploadPrefix}__trigger`} onClick={props.triggerUpload}>\n          {slots.default?.() || renderDefaultDragElement()}\n        </div>\n      );\n    };\n\n    return () => (\n      <div\n        ref={draggerFileRef}\n        class={classes.value}\n        onDrop={drag.handleDrop}\n        onDragenter={drag.handleDragenter}\n        onDragover={drag.handleDragover}\n        onDragleave={drag.handleDragleave}\n      >\n        {props.trigger?.(h, { files: displayFiles.value, dragActive: dragActive.value }) || getContent()}\n      </div>\n    );\n  },\n});\n"],"names":["defineComponent","name","props","_objectSpread","commonProps","trigger","Function","triggerUpload","uploadFiles","cancelUpload","dragEvents","Object","setup","_ref","slots","_toRefs","toRefs","displayFiles","disabled","locale","computed","renderTNodeJSX","useTNodeJSX","_useCommonClassName","useCommonClassName","sizeClassNames","uploadPrefix","concat","classPrefix","drag","useDrag","dragActive","draggerFileRef","ref","classes","_displayFiles$value$","_defineProperty","value","status","_useGlobalIcon","useGlobalIcon","CheckCircleFilledIcon","TdCheckCircleFilledIcon","ErrorCircleFilledIcon","TdErrorCircleFilledIcon","renderImage","_file$response","length","file","url","response","_createVNode","ImageViewer","h","_ref4","open","renderUploading","TLoading","percent","renderMainPreview","_locale$value","fileName","abridgeName","apply","fileInfo","small","fileSizeText","getFileSizeText","size","fileOperationDateText","uploadTime","theme","params","files","includes","Button","onClick","e","_props$cancelUpload","call","toUploadFiles","_default","cancelUploadText","autoUpload","_props$uploadFiles","triggerUploadText","normal","reupload","onRemove","index","renderDefaultDragElement","_locale$value$trigger","unActiveElement","dragger","draggingText","activeElement","dragDropText","getContent","_slots$default","_props$trigger","handleDrop","handleDragenter","handleDragover","handleDragleave"],"mappings":"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"}