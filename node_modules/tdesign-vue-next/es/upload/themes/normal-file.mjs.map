{"version":3,"file":"normal-file.mjs","sources":["../../../src/upload/themes/normal-file.tsx"],"sourcesContent":["import { defineComponent, toRefs, computed } from 'vue';\nimport {\n  CloseIcon as TdCloseIcon,\n  TimeFilledIcon as TdTimeFilledIcon,\n  CheckCircleFilledIcon as TdCheckCircleFilledIcon,\n  ErrorCircleFilledIcon as TdErrorCircleFilledIcon,\n  CloseCircleFilledIcon as TdCloseCircleFilledIcon,\n} from 'tdesign-icons-vue-next';\nimport TLoading from '../../loading';\nimport Link from '../../link';\nimport { useTNodeJSX } from '../../hooks/tnode';\nimport { UploadFile } from '../type';\nimport { abridgeName } from '../../_common/js/upload/utils';\nimport { useGlobalIcon } from '../../hooks/useGlobalIcon';\nimport { CommonDisplayFileProps } from '../interface';\nimport { commonProps } from '../constants';\nimport { UploadConfig } from '../../config-provider';\n\nexport interface NormalFileProps extends CommonDisplayFileProps {\n  multiple: boolean;\n}\n\nconst NormalFile = defineComponent({\n  name: 'UploadNormalFile',\n\n  props: {\n    multiple: Boolean,\n    ...commonProps,\n  },\n\n  setup(props, { slots }) {\n    const { theme, disabled, classPrefix } = toRefs(props);\n\n    const locale = computed(() => props.locale as UploadConfig);\n\n    const { CloseIcon, TimeFilledIcon, CheckCircleFilledIcon, ErrorCircleFilledIcon, CloseCircleFilledIcon } =\n      useGlobalIcon({\n        CloseIcon: TdCloseIcon,\n        TimeFilledIcon: TdTimeFilledIcon,\n        CheckCircleFilledIcon: TdCheckCircleFilledIcon,\n        ErrorCircleFilledIcon: TdErrorCircleFilledIcon,\n        CloseCircleFilledIcon: TdCloseCircleFilledIcon,\n      });\n\n    const renderTNodeJSX = useTNodeJSX();\n\n    const uploadPrefix = `${classPrefix.value}-upload`;\n\n    const renderProgress = (percent: number) => (\n      <div class={`${uploadPrefix}__single-progress`}>\n        <TLoading />\n        <span class={`${uploadPrefix}__single-percent`}>{percent || 0}%</span>\n      </div>\n    );\n\n    // 文本型预览\n    const renderFilePreviewAsText = (files: UploadFile[]) => {\n      if (theme.value !== 'file') return null;\n      if (!props.multiple && files[0]?.status === 'fail' && props.autoUpload) {\n        return null;\n      }\n      return files.map((file, index) => {\n        const fileName = props.abridgeName && file.name ? abridgeName(file.name, ...props.abridgeName) : file.name;\n        return (\n          <div\n            class={`${uploadPrefix}__single-display-text ${uploadPrefix}__display-text--margin`}\n            key={file.name + index + file.percent + file.status}\n          >\n            {file.url ? (\n              <Link href={file.url} target=\"_blank\" hover=\"color\" size=\"small\" class={`${uploadPrefix}__single-name`}>\n                {fileName}\n              </Link>\n            ) : (\n              <span class={`${uploadPrefix}__single-name`}>{fileName}</span>\n            )}\n            {file.status === 'fail' && (\n              <div class={`${uploadPrefix}__flow-status ${uploadPrefix}__file-fail`}>\n                <ErrorCircleFilledIcon />\n              </div>\n            )}\n            {file.status === 'waiting' && (\n              <div class={`${uploadPrefix}__flow-status ${uploadPrefix}__file-waiting`}>\n                <TimeFilledIcon />\n              </div>\n            )}\n            {file.status === 'progress' && renderProgress(file.percent)}\n            {!disabled.value && file.status !== 'progress' && (\n              <CloseIcon\n                class={`${uploadPrefix}__icon-delete`}\n                onClick={({ e }: { e: MouseEvent }) => props.onRemove({ e, file, index })}\n              />\n            )}\n          </div>\n        );\n      });\n    };\n\n    // 输入框型预览\n    const renderFilePreviewAsInput = () => {\n      if (theme.value !== 'file-input') return;\n      const file = props.displayFiles[0] || [];\n      const inputTextClass = [\n        `${classPrefix.value}-input__inner`,\n        { [`${uploadPrefix}__placeholder`]: !props.displayFiles[0] },\n      ];\n      const disabledClass = disabled.value ? `${classPrefix.value}-is-disabled` : '';\n      const fileName =\n        props.abridgeName?.length && file?.name ? abridgeName(file.name, ...props.abridgeName) : file?.name;\n      return (\n        <div class={`${uploadPrefix}__single-input-preview ${classPrefix.value}-input ${disabledClass}`}>\n          <div class={inputTextClass}>\n            <span\n              class={[\n                `${uploadPrefix}__single-input-text`,\n                { [props.placeholderClass]: props.placeholder && !file?.name },\n              ]}\n            >\n              {file?.name ? fileName : props.placeholder}\n            </span>\n            {file?.status === 'progress' && renderProgress(file.percent)}\n            {file?.status === 'waiting' && (\n              <TimeFilledIcon class={`${uploadPrefix}__status-icon ${uploadPrefix}__file-waiting`} />\n            )}\n            {file.status === 'success' && <CheckCircleFilledIcon class={`${uploadPrefix}__status-icon`} />}\n            {file?.name && file.status === 'fail' && (\n              <ErrorCircleFilledIcon class={`${uploadPrefix}__status-icon ${uploadPrefix}__file-fail`} />\n            )}\n            {Boolean(!disabled.value && file.name) && (\n              <CloseCircleFilledIcon\n                class={`${uploadPrefix}__single-input-clear`}\n                onClick={({ e }: { e: MouseEvent }) => props.onRemove({ e, file, index: 0 })}\n              />\n            )}\n          </div>\n        </div>\n      );\n    };\n\n    return () => {\n      const classes = [`${uploadPrefix}__single`, `${uploadPrefix}__single-${theme.value}`];\n      const fileListDisplay = renderTNodeJSX('fileListDisplay', { params: { files: props.displayFiles } });\n      const { displayFiles } = props;\n      return (\n        <div class={classes}>\n          {theme.value === 'file-input' && renderFilePreviewAsInput()}\n\n          {slots.default?.()}\n\n          {theme.value === 'file' && props.placeholder && !displayFiles[0] && (\n            <small class={[props.tipsClasses, props.placeholderClass]}>{props.placeholder}</small>\n          )}\n\n          {fileListDisplay || renderFilePreviewAsText(displayFiles)}\n\n          {props.sizeOverLimitMessage && <small class={props.errorClasses}>{props.sizeOverLimitMessage}</small>}\n\n          {/* 单文件上传失败要显示失败的原因 */}\n          {!props.multiple && displayFiles[0]?.status === 'fail' && theme.value === 'file' ? (\n            <small class={[props.errorClasses, props.placeholderClass]}>\n              {displayFiles[0].response?.error || locale.value.progress.failText}\n            </small>\n          ) : null}\n        </div>\n      );\n    };\n  },\n});\n\nexport default NormalFile;\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","NormalFile","defineComponent","name","props","_objectSpread","multiple","Boolean","commonProps","setup","_ref","slots","_toRefs","toRefs","theme","disabled","classPrefix","locale","computed","_useGlobalIcon","useGlobalIcon","CloseIcon","TdCloseIcon","TimeFilledIcon","TdTimeFilledIcon","CheckCircleFilledIcon","TdCheckCircleFilledIcon","ErrorCircleFilledIcon","TdErrorCircleFilledIcon","CloseCircleFilledIcon","TdCloseCircleFilledIcon","renderTNodeJSX","useTNodeJSX","uploadPrefix","concat","value","renderProgress","percent","_createVNode","TLoading","renderFilePreviewAsText","files","_files$","status","autoUpload","map","file","index","fileName","abridgeName","apply","_toConsumableArray","url","Link","_default","onClick","_ref2","e","onRemove","renderFilePreviewAsInput","_props$abridgeName","displayFiles","inputTextClass","_defineProperty","disabledClass","length","placeholderClass","placeholder","_ref5","_slots$default","_displayFiles$","_displayFiles$0$respo","classes","fileListDisplay","params","tipsClasses","sizeOverLimitMessage","errorClasses","response","error","progress","failText"],"mappings":"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"}