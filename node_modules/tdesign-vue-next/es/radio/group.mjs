/**
 * tdesign v1.3.1
 * (c) 2023 tdesign
 * @license MIT
 */

import { _ as _asyncToGenerator, r as regenerator } from '../_chunks/dep-cc784903.mjs';
import { _ as _slicedToArray } from '../_chunks/dep-7856a613.mjs';
import { _ as _defineProperty } from '../_chunks/dep-9ddd4050.mjs';
import { defineComponent, toRefs, ref, computed, watch, nextTick, onMounted, onUnmounted, provide, reactive, createVNode, h } from 'vue';
import { i as isString_1 } from '../_chunks/dep-81ef22a5.mjs';
import { i as isNumber_1 } from '../_chunks/dep-d60edf68.mjs';
import { i as isNil_1 } from '../_chunks/dep-4eb965c3.mjs';
import props from './radio-group-props.mjs';
import _Radio from './radio.mjs';
import { RadioGroupInjectionKey } from './constants.mjs';
import { usePrefixClass, useCommonClassName } from '../hooks/useConfig.mjs';
import useVModel from '../hooks/useVModel.mjs';
import { useTNodeDefault } from '../hooks/tnode.mjs';
import useKeyboard from './useKeyboard.mjs';
import { i as isFunction_1 } from '../_chunks/dep-14b6ba18.mjs';
import { useMutationObserver } from '../watermark/hooks.mjs';
import '../_chunks/dep-dbb72607.mjs';
import '../_chunks/dep-bec45e18.mjs';
import '../_chunks/dep-e827c721.mjs';
import '../_chunks/dep-339a814a.mjs';
import '../_chunks/dep-0f434994.mjs';
import '../_chunks/dep-f5c677eb.mjs';
import '../_chunks/dep-546c20ab.mjs';
import '../_chunks/dep-89c2d338.mjs';
import '../utils/helper.mjs';
import '../_chunks/dep-5ff2a750.mjs';
import '../_chunks/dep-ac072285.mjs';
import '../_chunks/dep-7c35655e.mjs';
import '../_chunks/dep-c6a9d3e7.mjs';
import '../_chunks/dep-8b01f133.mjs';
import '../_chunks/dep-80f4d76a.mjs';
import '../_chunks/dep-59f92248.mjs';
import '../_chunks/dep-cb8e09e3.mjs';
import '../_chunks/dep-dea8521c.mjs';
import '../_chunks/dep-e442c09f.mjs';
import './props.mjs';
import '../form/hooks.mjs';
import '../config-provider/useConfig.mjs';
import '../_chunks/dep-c19618d4.mjs';
import '../_chunks/dep-cd3b0fa6.mjs';
import '../_chunks/dep-c9ce648e.mjs';
import '../_chunks/dep-4d256b91.mjs';
import '../_chunks/dep-0d7bf0e3.mjs';
import '../_chunks/dep-201da76e.mjs';
import '../_chunks/dep-ed4e2839.mjs';
import '../_chunks/dep-e62c24d1.mjs';
import '../_chunks/dep-fe69e368.mjs';
import '../_chunks/dep-976f9516.mjs';
import '../_chunks/dep-11e36026.mjs';
import '../_chunks/dep-428963eb.mjs';
import '../_chunks/dep-019ee94c.mjs';
import '../_chunks/dep-3d1dcd03.mjs';
import '../_chunks/dep-72f2a0b4.mjs';
import '../_chunks/dep-56623c1f.mjs';
import '../_chunks/dep-f694a61e.mjs';
import '../_chunks/dep-d96da68c.mjs';
import '../_chunks/dep-f4a1f294.mjs';
import '../_chunks/dep-99aaf398.mjs';
import '../_chunks/dep-9e4f2d05.mjs';
import '../_chunks/dep-2351c759.mjs';
import '../_chunks/dep-2d971205.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';
import '../_chunks/dep-3be1a481.mjs';
import '../_chunks/dep-b76005d0.mjs';
import '../config-provider/type.mjs';
import '../_chunks/dep-62d92cbc.mjs';
import '../utils/render-tnode.mjs';
import '../_chunks/dep-094ccbd7.mjs';
import '../utils/dom.mjs';
import '../utils/easing.mjs';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var _Group = defineComponent({
  name: "TRadioGroup",
  props: _objectSpread({}, props),
  setup: function setup(props2) {
    var _toRefs = toRefs(props2),
      value = _toRefs.value,
      modelValue = _toRefs.modelValue;
    var _useVModel = useVModel(value, modelValue, props2.defaultValue, props2.onChange),
      _useVModel2 = _slicedToArray(_useVModel, 2),
      innerValue = _useVModel2[0],
      setInnerValue = _useVModel2[1];
    var radioGroupRef = ref();
    var radioBtnName = usePrefixClass("radio-button");
    var _useCommonClassName = useCommonClassName(),
      STATUS = _useCommonClassName.STATUS,
      SIZE = _useCommonClassName.SIZE;
    useKeyboard(radioGroupRef, setInnerValue);
    var checkedClassName = computed(function () {
      return ".".concat(radioBtnName.value, ".").concat(STATUS.value.checked);
    });
    var barStyle = ref({
      width: "0px",
      left: "0px"
    });
    var calcDefaultBarStyle = function calcDefaultBarStyle() {
      var div = document.createElement("div");
      div.setAttribute("style", "position: absolute; visibility: hidden;");
      div.appendChild(radioGroupRef.value.cloneNode(true));
      document.body.appendChild(div);
      var defaultCheckedRadio = div.querySelector(checkedClassName.value);
      var offsetWidth = defaultCheckedRadio.offsetWidth,
        offsetLeft = defaultCheckedRadio.offsetLeft;
      barStyle.value = {
        width: "".concat(offsetWidth, "px"),
        left: "".concat(offsetLeft, "px")
      };
      document.body.removeChild(div);
    };
    var calcBarStyle = function calcBarStyle() {
      if (props2.variant === "outline") return;
      var checkedRadio = radioGroupRef.value.querySelector(checkedClassName.value);
      if (!checkedRadio) {
        barStyle.value = {
          width: "0px",
          left: "0px"
        };
        return;
      }
      var offsetWidth = checkedRadio.offsetWidth,
        offsetLeft = checkedRadio.offsetLeft;
      if (!offsetWidth) {
        calcDefaultBarStyle();
      } else {
        barStyle.value = {
          width: "".concat(offsetWidth, "px"),
          left: "".concat(offsetLeft, "px")
        };
      }
    };
    var observerReturn;
    watch(innerValue, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regenerator.mark(function _callee() {
      return regenerator.wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return nextTick();
          case 2:
            calcBarStyle();
          case 3:
          case "end":
            return _context.stop();
        }
      }, _callee);
    })));
    onMounted(function () {
      calcBarStyle();
      var checkedRadioLabel = radioGroupRef.value.querySelector("".concat(checkedClassName.value, " .").concat(radioBtnName.value, "__label"));
      if (checkedRadioLabel) {
        observerReturn = useMutationObserver(checkedRadioLabel, function (mutations) {
          mutations.forEach(function (mutation) {
            if (mutation.type === "characterData") {
              calcBarStyle();
            }
          });
        }, {
          attributes: true,
          childList: true,
          characterData: true,
          subtree: true
        });
      }
    });
    onUnmounted(function () {
      var _observerReturn;
      (_observerReturn = observerReturn) === null || _observerReturn === void 0 ? void 0 : _observerReturn.stop();
    });
    var _toRefs2 = toRefs(props2),
      name = _toRefs2.name,
      disabled = _toRefs2.disabled;
    provide(RadioGroupInjectionKey, reactive({
      name: name,
      disabled: disabled,
      value: innerValue,
      allowUncheck: props2.allowUncheck,
      setValue: setInnerValue
    }));
    var radioGroupName = usePrefixClass("radio-group");
    var renderSlot = useTNodeDefault();
    var renderBlock = function renderBlock() {
      if (props2.variant.includes("filled") && !isNil_1(innerValue.value)) return createVNode("div", {
        "style": barStyle.value,
        "class": "".concat(radioGroupName.value, "__bg-block")
      }, null);
    };
    var renderOptions = function renderOptions() {
      var _props2$options;
      return (_props2$options = props2.options) === null || _props2$options === void 0 ? void 0 : _props2$options.map(function (option) {
        var opt = option;
        if (isNumber_1(option) || isString_1(option)) {
          opt = {
            value: option,
            label: option.toString()
          };
        }
        return createVNode(_Radio, {
          "key": "radio-group-options-".concat(opt.value, "-").concat(Math.random()),
          "name": props2.name,
          "checked": innerValue.value === opt.value,
          "disabled": "disabled" in opt ? opt.disabled : props2.disabled,
          "value": opt.value
        }, {
          "default": function _default() {
            return [isFunction_1(opt.label) ? opt.label(h) : opt.label];
          }
        });
      });
    };
    var groupClass = computed(function () {
      var _ref2;
      return ["".concat(radioGroupName.value), SIZE.value[props2.size], (_ref2 = {}, _defineProperty(_ref2, "".concat(radioGroupName.value, "__outline"), props2.variant === "outline"), _defineProperty(_ref2, "".concat(radioGroupName.value, "--filled"), props2.variant.includes("filled")), _defineProperty(_ref2, "".concat(radioGroupName.value, "--primary-filled"), props2.variant === "primary-filled"), _ref2)];
    });
    return function () {
      return createVNode("div", {
        "ref": radioGroupRef,
        "class": groupClass.value
      }, [renderSlot("default") || renderOptions(), renderBlock()]);
    };
  }
});

export { _Group as default };
//# sourceMappingURL=group.mjs.map
