{"version":3,"file":"tabs.mjs","sources":["../../src/tabs/tabs.tsx"],"sourcesContent":["import { ComponentPublicInstance, defineComponent, provide, Ref, toRefs } from 'vue';\nimport TTabPanel from './tab-panel';\nimport TTabNav from './tab-nav';\nimport { TabValue, TdTabsProps } from './type';\nimport props from './props';\n\nimport { useTNodeJSX } from '../hooks/tnode';\nimport { usePrefixClass } from '../hooks/useConfig';\nimport useVModel from '../hooks/useVModel';\nimport isArray from 'lodash/isArray';\n\nexport interface InjectTabs {\n  value: Ref<TabValue>;\n}\n\nexport default defineComponent({\n  name: 'TTabs',\n\n  props,\n\n  setup(props) {\n    const COMPONENT_NAME = usePrefixClass('tabs');\n    const classPrefix = usePrefixClass();\n    const renderTNodeJSX = useTNodeJSX();\n\n    const { value, modelValue } = toRefs(props);\n    const [tabValue, setTabValue] = useVModel(value, modelValue, props.defaultValue || '', props.onChange);\n\n    provide<InjectTabs>('tabs', { value: tabValue });\n\n    // methods\n    const onTabAdd = (context: { e: MouseEvent }) => {\n      props.onAdd?.({ e: context.e });\n    };\n    const onTabChange = (value: TabValue) => {\n      setTabValue(value);\n    };\n    const onTabRemove = ({ e, value, index }: Parameters<TdTabsProps['onRemove']>[0]) => {\n      props.onRemove({ value, index, e });\n    };\n\n    // render\n    const getSlotPanels = () => {\n      let content = renderTNodeJSX('default');\n      if (!content) return [];\n      content = content\n        .map((item: ComponentPublicInstance) => {\n          if (item.children && isArray(item.children)) return item.children;\n          return item;\n        })\n        .flat()\n        .filter((item: ComponentPublicInstance) => {\n          return item.type.name === 'TTabPanel';\n        });\n\n      return content;\n    };\n    const renderHeader = () => {\n      const panels = (props.list?.length ? props.list : getSlotPanels()) || [];\n      const panelsData = panels.map((item: ComponentPublicInstance) => {\n        const selfItem = item;\n\n        if (item.props) {\n          Object.keys(item.props).forEach((key) => {\n            selfItem[key] = item.props[key];\n          });\n        }\n\n        return selfItem;\n      });\n      const tabNavProps = {\n        theme: props.theme,\n        value: tabValue.value,\n        size: props.size,\n        disabled: props.disabled,\n        placement: props.placement,\n        addable: props.addable,\n        panels: panelsData,\n        dragSort: props.dragSort,\n      };\n      return (\n        <div\n          class={{\n            [`${classPrefix.value}-tabs__header`]: true,\n            [`${classPrefix.value}-is-${props.placement}`]: true,\n          }}\n        >\n          <TTabNav\n            {...tabNavProps}\n            onDragSort={props.onDragSort}\n            onChange={onTabChange}\n            onAdd={onTabAdd}\n            onRemove={onTabRemove}\n          />\n        </div>\n      );\n    };\n    const renderContent = () => {\n      const panels = getSlotPanels();\n      if (props.list?.length) {\n        return props.list.map((item) => <TTabPanel {...item} onRemove={onTabRemove} />);\n      }\n      if (panels && panels.length) {\n        return <div class={[`${classPrefix.value}-tabs__content`]}>{panels}</div>;\n      }\n    };\n\n    return () => {\n      return (\n        <div class={[COMPONENT_NAME.value]}>\n          {props.placement !== 'bottom' ? [renderHeader(), renderContent()] : [renderContent(), renderHeader()]}\n        </div>\n      );\n    };\n  },\n});\n"],"names":["defineComponent","name","props","setup","COMPONENT_NAME","usePrefixClass","classPrefix","renderTNodeJSX","useTNodeJSX","_toRefs","toRefs","value","modelValue","_useVModel","useVModel","defaultValue","onChange","_useVModel2","_slicedToArray","tabValue","setTabValue","provide","onTabAdd","context","_props2$onAdd","onAdd","e","onTabChange","onTabRemove","index","onRemove","getSlotPanels","content","map","item","children","isArray","flat","filter","type","renderHeader","_props2$list","_ref2","panels","list","length","panelsData","selfItem","Object","keys","forEach","key","tabNavProps","theme","size","disabled","placement","addable","dragSort","_createVNode","_defineProperty","concat","TTabNav","_mergeProps","onDragSort","renderContent","_props2$list2","TTabPanel"],"mappings":"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"}