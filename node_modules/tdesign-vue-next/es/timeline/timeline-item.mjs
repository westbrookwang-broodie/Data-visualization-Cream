/**
 * tdesign v1.3.1
 * (c) 2023 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-9ddd4050.mjs';
import { defineComponent, inject, createVNode } from 'vue';
import TimeLineItemProps from './time-line-item-props.mjs';
import { usePrefixClass } from '../hooks/useConfig.mjs';
import { useContent, useTNodeJSX } from '../hooks/tnode.mjs';
import { TimelineInjectKey, DEFAULT_PROVIDER } from './hooks.mjs';
import { Loading } from '../loading/index.mjs';
import '../_chunks/dep-dbb72607.mjs';
import '../config-provider/useConfig.mjs';
import '../_chunks/dep-14b6ba18.mjs';
import '../_chunks/dep-bec45e18.mjs';
import '../_chunks/dep-339a814a.mjs';
import '../_chunks/dep-ed4e2839.mjs';
import '../_chunks/dep-c19618d4.mjs';
import '../_chunks/dep-cd3b0fa6.mjs';
import '../_chunks/dep-c9ce648e.mjs';
import '../_chunks/dep-4d256b91.mjs';
import '../_chunks/dep-0d7bf0e3.mjs';
import '../_chunks/dep-201da76e.mjs';
import '../_chunks/dep-e62c24d1.mjs';
import '../_chunks/dep-fe69e368.mjs';
import '../_chunks/dep-976f9516.mjs';
import '../_chunks/dep-11e36026.mjs';
import '../_chunks/dep-546c20ab.mjs';
import '../_chunks/dep-0f434994.mjs';
import '../_chunks/dep-f5c677eb.mjs';
import '../_chunks/dep-428963eb.mjs';
import '../_chunks/dep-019ee94c.mjs';
import '../_chunks/dep-3d1dcd03.mjs';
import '../_chunks/dep-72f2a0b4.mjs';
import '../_chunks/dep-56623c1f.mjs';
import '../_chunks/dep-f694a61e.mjs';
import '../_chunks/dep-d96da68c.mjs';
import '../_chunks/dep-81ef22a5.mjs';
import '../_chunks/dep-f4a1f294.mjs';
import '../_chunks/dep-99aaf398.mjs';
import '../_chunks/dep-9e4f2d05.mjs';
import '../_chunks/dep-2351c759.mjs';
import '../_chunks/dep-2d971205.mjs';
import '../_common/js/global-config/default-config.mjs';
import '../_common/js/global-config/locale/zh_CN.mjs';
import '../_chunks/dep-3be1a481.mjs';
import '../_chunks/dep-b76005d0.mjs';
import '../config-provider/type.mjs';
import '../_chunks/dep-ac072285.mjs';
import '../_chunks/dep-7c35655e.mjs';
import '../_chunks/dep-c6a9d3e7.mjs';
import '../_chunks/dep-8b01f133.mjs';
import '../_chunks/dep-80f4d76a.mjs';
import '../_chunks/dep-59f92248.mjs';
import '../_chunks/dep-cb8e09e3.mjs';
import '../_chunks/dep-62d92cbc.mjs';
import '../utils/render-tnode.mjs';
import '../_chunks/dep-094ccbd7.mjs';
import '../loading/directive.mjs';
import '../loading/plugin.mjs';
import '../loading/loading.mjs';
import '../_chunks/dep-7856a613.mjs';
import '../_chunks/dep-e827c721.mjs';
import '../loading/icon/gradient.mjs';
import '../_common/js/loading/circle-adapter.mjs';
import '../_common/js/utils/set-style.mjs';
import '../_common/js/utils/helper.mjs';
import '../_chunks/dep-89c2d338.mjs';
import '../_chunks/dep-5ff2a750.mjs';
import '../_chunks/dep-e442c09f.mjs';
import '../_chunks/dep-dea8521c.mjs';
import '../_chunks/dep-d60edf68.mjs';
import '../utils/dom.mjs';
import '../utils/easing.mjs';
import '../loading/props.mjs';
import '../hooks/useTeleport.mjs';
import '../utils/withInstall.mjs';
import './style/css.mjs';
import '../loading/type.mjs';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var DEFAULT_THEME = ["default", "primary", "success", "warning", "error"];
var _TimelineItem = defineComponent({
  name: "TTimelineItem",
  props: _objectSpread(_objectSpread({}, TimeLineItemProps), {}, {
    index: {
      type: Number
    }
  }),
  setup: function setup(props) {
    var COMPONENT_NAME = usePrefixClass("timeline-item");
    var TimelineProvider = inject(TimelineInjectKey, DEFAULT_PROVIDER);
    var renderContent = useContent();
    var renderTNodeJSX = useTNodeJSX();
    var getPositionClassName = function getPositionClassName(index) {
      var _props$labelAlign;
      var _TimelineProvider$val = TimelineProvider.value,
        layout = _TimelineProvider$val.layout,
        renderAlign = _TimelineProvider$val.renderAlign;
      var timelineItemAlign = (_props$labelAlign = props.labelAlign) !== null && _props$labelAlign !== void 0 ? _props$labelAlign : renderAlign;
      var left = layout === "horizontal" ? "top" : "left";
      var right = layout === "horizontal" ? "bottom" : "right";
      if (timelineItemAlign === "alternate") {
        return index % 2 === 0 ? "".concat(COMPONENT_NAME.value, "-").concat(left) : "".concat(COMPONENT_NAME.value, "-").concat(right);
      }
      if (timelineItemAlign === "left" || timelineItemAlign === "top") {
        return "".concat(COMPONENT_NAME.value, "-").concat(left);
      }
      if (timelineItemAlign === "right" || timelineItemAlign === "bottom") {
        return "".concat(COMPONENT_NAME.value, "-").concat(right);
      }
      return "";
    };
    return function () {
      var _ref, _ref2;
      var _TimelineProvider$val2 = TimelineProvider.value,
        mode = _TimelineProvider$val2.mode,
        theme = _TimelineProvider$val2.theme,
        itemsStatus = _TimelineProvider$val2.itemsStatus,
        reverse = _TimelineProvider$val2.reverse;
      var loading = props.loading,
        dotColor = props.dotColor,
        index = props.index;
      var labelNode = renderTNodeJSX("label");
      var dotElement = renderTNodeJSX("dot");
      var dotContentClass = "".concat(COMPONENT_NAME.value, "__dot-content");
      if (dotElement !== null && dotElement !== void 0 && dotElement.props) {
        var _dotElement$props;
        var classes = dotElement === null || dotElement === void 0 ? void 0 : (_dotElement$props = dotElement.props) === null || _dotElement$props === void 0 ? void 0 : _dotElement$props["class"];
        dotElement.props["class"] = classes ? [dotContentClass, classes].join(" ") : dotContentClass;
      }
      return createVNode("li", {
        "class": ["".concat(COMPONENT_NAME.value), "".concat(getPositionClassName(props.index))]
      }, [mode === "alternate" && labelNode && createVNode("div", {
        "class": ["".concat(COMPONENT_NAME.value, "__label"), "".concat(COMPONENT_NAME.value, "__label--").concat(mode)]
      }, [labelNode]), createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__wrapper")
      }, [createVNode("div", {
        "class": (_ref = {}, _defineProperty(_ref, "".concat(COMPONENT_NAME.value, "__dot"), true), _defineProperty(_ref, "".concat(COMPONENT_NAME.value, "__dot--custom"), !!dotElement || !dotElement && loading), _defineProperty(_ref, "".concat(COMPONENT_NAME.value, "__dot--").concat(dotColor), DEFAULT_THEME.includes(dotColor)), _ref),
        "style": {
          borderColor: !DEFAULT_THEME.includes(dotColor) && dotColor
        }
      }, [!dotElement && loading && createVNode(Loading, {
        "size": "12px",
        "class": dotContentClass
      }, null), dotElement]), createVNode("div", {
        "class": (_ref2 = {}, _defineProperty(_ref2, "".concat(COMPONENT_NAME.value, "__tail"), true), _defineProperty(_ref2, "".concat(COMPONENT_NAME.value, "__tail--theme-").concat(theme), true), _defineProperty(_ref2, "".concat(COMPONENT_NAME.value, "__tail--status-").concat(itemsStatus[index]), reverse), _ref2)
      }, null)]), createVNode("div", {
        "class": "".concat(COMPONENT_NAME.value, "__content")
      }, [renderContent("default", "content"), mode === "same" && labelNode && createVNode("div", {
        "class": ["".concat(COMPONENT_NAME.value, "__label"), "".concat(COMPONENT_NAME.value, "__label--").concat(mode)]
      }, [labelNode])])]);
    };
  }
});

export { _TimelineItem as default };
//# sourceMappingURL=timeline-item.mjs.map
