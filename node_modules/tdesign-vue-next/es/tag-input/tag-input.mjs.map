{"version":3,"file":"tag-input.mjs","sources":["../../src/tag-input/tag-input.tsx"],"sourcesContent":["import { defineComponent, computed, toRefs, ref, nextTick, reactive } from 'vue';\nimport { CloseCircleFilledIcon as TdCloseCircleFilledIcon } from 'tdesign-icons-vue-next';\nimport TInput, { InputValue, TdInputProps } from '../input';\nimport { TdTagInputProps } from './type';\nimport props from './props';\nimport { renderTNodeJSX } from '../utils/render-tnode';\nimport { useConfig } from '../config-provider/useConfig';\nimport { usePrefixClass } from '../hooks/useConfig';\nimport { useGlobalIcon } from '../hooks/useGlobalIcon';\nimport useTagScroll from './hooks/useTagScroll';\nimport useTagList from './useTagList';\nimport useHover from './hooks/useHover';\nimport useDefault from '../hooks/useDefaultValue';\nimport useDragSorter from './hooks/useDragSorter';\nimport isArray from 'lodash/isArray';\n\nconst useComponentClassName = () => {\n  return {\n    NAME_CLASS: usePrefixClass('tag-input'),\n    CLEAR_CLASS: usePrefixClass('tag-input__suffix-clear'),\n    BREAK_LINE_CLASS: usePrefixClass('tag-input--break-line'),\n  };\n};\n\nexport default defineComponent({\n  name: 'TTagInput',\n\n  props: { ...props },\n\n  setup(props: TdTagInputProps) {\n    const { NAME_CLASS, CLEAR_CLASS, BREAK_LINE_CLASS } = useComponentClassName();\n    const { CloseCircleFilledIcon } = useGlobalIcon({ CloseCircleFilledIcon: TdCloseCircleFilledIcon });\n\n    const { inputValue, inputProps } = toRefs(props);\n    const [tInputValue, setTInputValue] = useDefault(\n      inputValue,\n      props.defaultInputValue,\n      props.onInputChange,\n      'inputValue',\n    );\n    const { excessTagsDisplayType, readonly, disabled, clearable, placeholder } = toRefs(props);\n    const { isHover, addHover, cancelHover } = useHover({\n      readonly: props.readonly,\n      disabled: props.disabled,\n      onMouseenter: props.onMouseenter,\n      onMouseleave: props.onMouseleave,\n    });\n    const isComposition = ref(false);\n    const { classPrefix } = useConfig();\n    // 这里不需要响应式，因此直接传递参数\n    const { getDragProps } = useDragSorter({\n      ...props,\n      sortOnDraggable: props.dragSort,\n      onDragOverCheck: {\n        x: true,\n        targetClassNameRegExp: new RegExp(`^${classPrefix.value}-tag`),\n      },\n    });\n    const { scrollToRight, onWheel, scrollToRightOnEnter, scrollToLeftOnLeave, tagInputRef } = useTagScroll(props);\n    // handle tag add and remove\n    // 需要响应式，为了尽量的和 react 版本做法相同，这里进行响应式处理\n    const { tagValue, onInnerEnter, onInputBackspaceKeyUp, onInputBackspaceKeyDown, clearAll, renderLabel, onClose } =\n      useTagList(\n        reactive({\n          ...toRefs(props),\n          getDragProps,\n        }),\n      );\n\n    const classes = computed(() => {\n      const isEmpty = !(isArray(tagValue.value) && tagValue.value.length);\n      return [\n        NAME_CLASS.value,\n        {\n          [BREAK_LINE_CLASS.value]: excessTagsDisplayType.value === 'break-line',\n          [`${classPrefix.value}-is-empty`]: isEmpty,\n          [`${classPrefix.value}-tag-input--with-tag`]: !isEmpty,\n        },\n      ];\n    });\n\n    const tagInputPlaceholder = computed(() => (!tagValue.value?.length ? placeholder.value : ''));\n\n    const showClearIcon = computed(() =>\n      Boolean(\n        !readonly.value &&\n          !disabled.value &&\n          clearable.value &&\n          isHover.value &&\n          (tagValue.value?.length || tInputValue.value),\n      ),\n    );\n\n    const onInputEnter = (value: InputValue, context: { e: KeyboardEvent }) => {\n      // 阻止 Enter 默认行为，避免在 Form 中触发 submit 事件\n      context.e?.preventDefault?.();\n      setTInputValue('', { e: context.e, trigger: 'enter' });\n      !isComposition.value && onInnerEnter(value, context);\n      nextTick(() => {\n        scrollToRight();\n        isComposition.value = false;\n      });\n    };\n\n    const onInputCompositionstart = (value: InputValue, context: { e: CompositionEvent }) => {\n      isComposition.value = true;\n      inputProps.value?.onCompositionstart?.(value, context);\n    };\n\n    const onInputCompositionend = (value: InputValue, context: { e: CompositionEvent }) => {\n      isComposition.value = false;\n      inputProps.value?.onCompositionend?.(value, context);\n    };\n\n    const onClick: TdInputProps['onClick'] = (ctx) => {\n      tagInputRef.value.focus();\n      props.onClick?.(ctx);\n    };\n\n    const onClearClick = (context: { e: MouseEvent }) => {\n      clearAll(context);\n      setTInputValue('', { e: context.e, trigger: 'clear' });\n      props.onClear?.(context);\n    };\n\n    return {\n      CLEAR_CLASS,\n      CloseCircleFilledIcon,\n      tagValue,\n      tInputValue,\n      isHover,\n      tagInputPlaceholder,\n      showClearIcon,\n      tagInputRef,\n      classPrefix,\n      setTInputValue,\n      addHover,\n      cancelHover,\n      onInputEnter,\n      onInnerEnter,\n      onInputBackspaceKeyUp,\n      onInputBackspaceKeyDown,\n      renderLabel,\n      onWheel,\n      scrollToRightOnEnter,\n      scrollToLeftOnLeave,\n      onClick,\n      onClearClick,\n      onClose,\n      onInputCompositionstart,\n      onInputCompositionend,\n      classes,\n    };\n  },\n\n  render() {\n    const { CloseCircleFilledIcon } = this;\n    const suffixIconNode = this.showClearIcon ? (\n      <CloseCircleFilledIcon class={this.CLEAR_CLASS} onClick={this.onClearClick} />\n    ) : (\n      renderTNodeJSX(this, 'suffixIcon')\n    );\n    const suffixClass = `${this.classPrefix}-tag-input__with-suffix-icon`;\n    if (suffixIconNode && !this.classes.includes(suffixClass)) {\n      this.classes.push(suffixClass);\n    }\n    // 自定义 Tag 节点\n    const displayNode = renderTNodeJSX(this, 'valueDisplay', {\n      params: {\n        value: this.tagValue,\n        onClose: (index: number, item: any) => this.onClose({ index, item }),\n      },\n    });\n    // 左侧文本\n    const label = renderTNodeJSX(this, 'label', { silent: true });\n    return (\n      <TInput\n        ref=\"tagInputRef\"\n        v-slots={{\n          suffix: this.$slots.suffix,\n        }}\n        readonly={this.readonly}\n        value={this.tInputValue}\n        autoWidth={true} // 控制input_inner的宽度 设置为true让内部input不会提前换行\n        size={this.size}\n        disabled={this.disabled}\n        label={() => this.renderLabel({ displayNode, label })}\n        class={this.classes}\n        tips={this.tips}\n        status={this.status}\n        placeholder={this.tagInputPlaceholder}\n        suffix={this.suffix}\n        suffixIcon={() => suffixIconNode}\n        showInput={\n          !(this.inputProps as TdTagInputProps['inputProps'])?.readonly || !this.tagValue || !this.tagValue?.length\n        }\n        keepWrapperWidth={!this.autoWidth}\n        onWheel={this.onWheel}\n        onChange={(val, context) => {\n          this.setTInputValue(val, { ...context, trigger: 'input' });\n        }}\n        onPaste={this.onPaste}\n        onEnter={this.onInputEnter}\n        onKeyup={this.onInputBackspaceKeyUp}\n        onKeydown={this.onInputBackspaceKeyDown}\n        onMouseenter={(context: { e: MouseEvent }) => {\n          this.addHover(context);\n          this.scrollToRightOnEnter();\n        }}\n        onMouseleave={(context: { e: MouseEvent }) => {\n          this.cancelHover(context);\n          this.scrollToLeftOnLeave();\n        }}\n        onFocus={(inputValue: InputValue, context: { e: MouseEvent }) => {\n          this.onFocus?.(this.tagValue, { e: context.e, inputValue });\n        }}\n        onBlur={(inputValue: InputValue, context: { e: MouseEvent }) => {\n          this.setTInputValue('', { e: context.e, trigger: 'blur' });\n          this.onBlur?.(this.tagValue, { e: context.e, inputValue: '' });\n        }}\n        onClick={this.onClick}\n        onCompositionstart={this.onInputCompositionstart}\n        onCompositionend={this.onInputCompositionend}\n        {...(this.inputProps as TdTagInputProps['inputProps'])}\n      />\n    );\n  },\n});\n"],"names":["useComponentClassName","NAME_CLASS","usePrefixClass","CLEAR_CLASS","BREAK_LINE_CLASS","defineComponent","name","props","_objectSpread","setup","_useComponentClassNam","_useGlobalIcon","useGlobalIcon","CloseCircleFilledIcon","TdCloseCircleFilledIcon","_toRefs","toRefs","inputValue","inputProps","_useDefault","useDefault","defaultInputValue","onInputChange","_useDefault2","_slicedToArray","tInputValue","setTInputValue","_toRefs2","excessTagsDisplayType","readonly","disabled","clearable","placeholder","_useHover","useHover","onMouseenter","onMouseleave","isHover","addHover","cancelHover","isComposition","ref","_useConfig","useConfig","classPrefix","_useDragSorter","useDragSorter","sortOnDraggable","dragSort","onDragOverCheck","x","targetClassNameRegExp","RegExp","concat","value","getDragProps","_useTagScroll","useTagScroll","scrollToRight","onWheel","scrollToRightOnEnter","scrollToLeftOnLeave","tagInputRef","_useTagList","useTagList","reactive","tagValue","onInnerEnter","onInputBackspaceKeyUp","onInputBackspaceKeyDown","clearAll","renderLabel","onClose","classes","computed","_ref","isEmpty","isArray","length","_defineProperty","tagInputPlaceholder","_tagValue$value","showClearIcon","_tagValue$value2","Boolean","onInputEnter","context","_context$e","_context$e$preventDef","e","preventDefault","call","trigger","nextTick","onInputCompositionstart","_inputProps$value","_inputProps$value$onC","onCompositionstart","onInputCompositionend","_inputProps$value2","_inputProps$value2$on","onCompositionend","onClick","ctx","_props2$onClick","focus","onClearClick","_props2$onClear","onClear","render","_this","_this$inputProps","_this$tagValue","suffixIconNode","_createVNode","renderTNodeJSX","suffixClass","includes","push","displayNode","params","index","item","label","silent","TInput","_mergeProps","size","tips","status","suffix","suffixIcon","autoWidth","onChange","val","onPaste","onFocus","_this$onFocus","onBlur","_this$onBlur","$slots"],"mappings":"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"}