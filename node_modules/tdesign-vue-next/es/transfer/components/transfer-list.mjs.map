{"version":3,"file":"transfer-list.mjs","sources":["../../../src/transfer/components/transfer-list.tsx"],"sourcesContent":["import { defineComponent, VNode, PropType, ref, computed, watch } from 'vue';\nimport {\n  EmptyType,\n  SearchEvent,\n  SearchOption,\n  TransferValue,\n  TdTransferProps,\n  TransferListType,\n  TransferItemOption,\n} from '../interface';\nimport { PageInfo, TdPaginationProps, Pagination } from '../../pagination';\nimport { Checkbox as TCheckbox, CheckboxGroup as TCheckboxGroup, CheckboxProps } from '../../checkbox';\nimport { getLefCount, getDataValues } from '../utils';\nimport Search from './transfer-search';\nimport { useTNodeDefault } from '../../hooks/tnode';\n\nimport { useConfig, usePrefixClass } from '../../hooks/useConfig';\nimport isString from 'lodash/isString';\n\nconst props = {\n  checkboxProps: {\n    type: Object as PropType<CheckboxProps>,\n    default: () => ({}),\n  },\n  dataSource: {\n    type: Array as PropType<Array<TransferItemOption>>,\n    default(): Array<TransferItemOption> {\n      return [];\n    },\n  },\n  listType: {\n    type: String as PropType<TransferListType>,\n    default: 'target',\n  },\n  title: {\n    type: [String, Function],\n  },\n  checkedValue: {\n    type: Array as PropType<Array<TransferValue>>,\n    default(): Array<TransferValue> {\n      return [];\n    },\n  },\n  disabled: {\n    type: Boolean,\n    default: false,\n  },\n  search: {\n    type: [Boolean, Object] as PropType<SearchOption>,\n    default: false,\n  },\n  transferItem: Function as PropType<TdTransferProps['transferItem']>,\n  empty: {\n    type: [Function, String] as PropType<EmptyType>,\n  },\n  pagination: [Boolean, Object],\n  footer: [Function, String],\n  checkAll: Boolean,\n  isTreeMode: {\n    type: Boolean as PropType<boolean>,\n    default: false,\n  },\n  onCheckedChange: Function as PropType<(event: Array<TransferValue>) => void>,\n  onPageChange: Function,\n  onScroll: Function,\n  onSearch: Function,\n};\n\nexport default defineComponent({\n  name: 'TTransferList',\n  props: { ...props },\n  setup(props) {\n    const classPrefix = usePrefixClass();\n    const { t, globalConfig } = useConfig('transfer');\n    // 搜索框输入内容\n    const filterValue = ref('');\n    // 用于兼容处理 Pagination 的非受控属性（非受控属性仅有 change 事件变化，无 props 变化，因此只需监听事件）\n    const defaultCurrent = ref(1);\n    // 用于兼容处理 Pagination 的非受控属性\n    const defaultPageSize = ref(0);\n\n    const currentPage = computed(() => {\n      const pagination = props.pagination as any;\n      return pagination?.current || defaultCurrent.value || pagination?.defaultCurrent;\n    });\n    const pageSize = computed(() => {\n      const pagination = props.pagination as any;\n      return pagination?.pageSize || defaultPageSize.value || pagination?.defaultPageSize;\n    });\n    const filteredData = computed(() => {\n      return props.dataSource.filter((item: TransferItemOption) => {\n        const label = item && item.label.toString();\n        return label.toLowerCase().indexOf(filterValue.value.toLowerCase()) > -1;\n      });\n    });\n\n    const pageTotal = computed(() => {\n      return (filteredData.value && filteredData.value.length) || 0;\n    });\n\n    const curPageData = computed(() => {\n      let pageData = filteredData.value;\n      if (!props.pagination) return pageData;\n      if (pageSize.value === 0) return pageData;\n      const startIndex = (currentPage.value - 1) * pageSize.value;\n      const endIndex = currentPage.value * pageSize.value;\n      pageData = pageData.slice(startIndex, endIndex);\n      return pageData;\n    });\n    const paginationProps = computed(() => {\n      const defaultPaginationProps: TdPaginationProps = {\n        size: 'small',\n        theme: 'simple',\n        totalContent: false,\n        pageSizeOptions: [],\n      };\n      return typeof props.pagination === 'object'\n        ? {\n            ...defaultPaginationProps,\n            ...props.pagination,\n            current: currentPage.value,\n            total: pageTotal.value,\n            pageSize: pageSize.value,\n          }\n        : {};\n    });\n\n    const isAllChecked = computed(() => {\n      const allValue = getDataValues(props.dataSource, [], { isTreeMode: props.isTreeMode, include: false });\n\n      return (\n        props.checkedValue.length > 0 &&\n        (props.isTreeMode\n          ? allValue.every((item) => props.checkedValue.includes(item))\n          : (props.search ? filteredData.value : props.dataSource).every(\n              (item: TransferItemOption) => item.disabled || props.checkedValue.includes(item.value),\n            ))\n      );\n    });\n    const indeterminate = computed(() => {\n      return !isAllChecked.value && props.checkedValue.length > 0;\n    });\n\n    const totalCount = computed(() => {\n      return getLefCount(props.dataSource);\n    });\n\n    watch(totalCount, (val) => {\n      if (val <= (currentPage.value - 1) * pageSize.value) {\n        const lastPage = Math.ceil(val / pageSize.value);\n        defaultCurrent.value = lastPage;\n      }\n    });\n\n    const handlePaginationChange = (pageInfo: PageInfo) => {\n      props.onPageChange?.(pageInfo);\n      defaultCurrent.value = pageInfo.current;\n      defaultPageSize.value = pageInfo.pageSize;\n    };\n    const handleCheckedChange = (val: Array<TransferValue>) => {\n      props.onCheckedChange?.(val);\n    };\n    const handleCheckedAllChange = (checked: boolean) => {\n      if (checked) {\n        const allValue = getDataValues(props.search ? filteredData.value : props.dataSource, [], {\n          isTreeMode: props.isTreeMode,\n          include: false,\n        });\n        handleCheckedChange(allValue);\n      } else {\n        handleCheckedChange([]);\n      }\n    };\n    const scroll = (e: Event) => {\n      props.onScroll?.(e);\n    };\n    const handleSearch = (e: any) => {\n      const event: SearchEvent = {\n        query: e.value,\n        type: props.listType as TransferListType,\n        e: e.e,\n        trigger: e.trigger,\n      };\n      filterValue.value = e.value;\n      props.onSearch?.(event);\n    };\n    const renderTNodeJSX = useTNodeDefault();\n    const renderTitle = () => {\n      const defaultNode = props.title && isString(props.title) ? <template>{props.title}</template> : null;\n      const titleNode = renderTNodeJSX('title', {\n        defaultNode,\n        params: {\n          type: props.listType,\n        },\n      });\n      return <span>{titleNode}</span>;\n    };\n    const renderContent = () => {\n      const defaultNode = (\n        <TCheckboxGroup value={props.checkedValue} onChange={handleCheckedChange}>\n          {curPageData.value.map((item, index) => (\n            <TCheckbox\n              disabled={props.disabled || item.disabled}\n              value={item.value}\n              needRipple={true}\n              class={[\n                `${classPrefix.value}-transfer__list-item`,\n                props.checkedValue.includes(item.value) ? `${classPrefix.value}-is-checked` : '',\n              ]}\n              key={item.key}\n              {...props.checkboxProps}\n            >\n              {renderTNodeJSX('transferItem', {\n                defaultNode: <span>{item.label}</span>,\n                params: { data: item.data, index, type: props.listType },\n              })}\n            </TCheckbox>\n          ))}\n        </TCheckboxGroup>\n      );\n      return (\n        <div class={`${classPrefix.value}-transfer__list-content narrow-scrollbar`} onScroll={scroll}>\n          {renderTNodeJSX('tree', {\n            defaultNode,\n            params: {\n              data: curPageData.value,\n              value: props.checkedValue,\n              onChange: handleCheckedChange,\n            },\n          })}\n        </div>\n      );\n    };\n    const renderEmpty = () => {\n      const empty = props.empty || t(globalConfig.value.empty);\n      const defaultNode: VNode = isString(empty) ? <span>{empty}</span> : null;\n      return (\n        <div class={`${classPrefix.value}-transfer__empty`}>\n          {renderTNodeJSX('empty', {\n            defaultNode,\n            params: {\n              type: props.listType,\n            },\n          })}\n        </div>\n      );\n    };\n    const renderFooter = () => {\n      const defaultNode = isString(props.footer) ? (\n        <div class={`${classPrefix.value}-transfer__footer`}>{props.footer}</div>\n      ) : null;\n      return renderTNodeJSX('footer', {\n        defaultNode,\n        params: {\n          type: props.listType,\n        },\n      });\n    };\n\n    return () => (\n      <div class={`${classPrefix.value}-transfer__list ${classPrefix.value}-transfer__list-${props.listType}`}>\n        <div class={`${classPrefix.value}-transfer__list-header`}>\n          <div>\n            {props.checkAll && (\n              <TCheckbox\n                disabled={props.disabled || !props.dataSource.length}\n                checked={isAllChecked.value}\n                indeterminate={indeterminate.value}\n                onChange={handleCheckedAllChange}\n              />\n            )}\n            <span>\n              {t(globalConfig.value.title, {\n                checked: props.checkedValue.length,\n                total: totalCount.value,\n              })}\n            </span>\n          </div>\n          {renderTitle()}\n        </div>\n        <div\n          class={[\n            `${classPrefix.value}-transfer__list-body`,\n            props.search ? `${classPrefix.value}-transfer__list--with-search` : '',\n          ]}\n        >\n          {props.search && (\n            <Search\n              searchValue={filterValue.value}\n              placeholder={t(globalConfig.value.placeholder)}\n              onChange={handleSearch}\n              disabled={props.disabled}\n              search={props.search}\n            />\n          )}\n          {curPageData.value.length > 0 ? renderContent() : renderEmpty()}\n        </div>\n        {props.pagination && pageSize.value > 0 && pageTotal.value > 0 && (\n          <div class={`${classPrefix.value}-transfer__list-pagination`}>\n            <Pagination {...paginationProps.value} onChange={handlePaginationChange} />\n          </div>\n        )}\n        {renderFooter()}\n      </div>\n    );\n  },\n});\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","props","checkboxProps","type","_default","dataSource","Array","listType","String","title","Function","checkedValue","disabled","Boolean","search","transferItem","empty","pagination","footer","checkAll","isTreeMode","onCheckedChange","onPageChange","onScroll","onSearch","defineComponent","name","_objectSpread","setup","classPrefix","usePrefixClass","_useConfig","useConfig","t","globalConfig","filterValue","ref","defaultCurrent","defaultPageSize","currentPage","computed","current","value","pageSize","filteredData","filter","item","label","toLowerCase","indexOf","pageTotal","length","curPageData","pageData","startIndex","endIndex","slice","paginationProps","defaultPaginationProps","size","theme","totalContent","pageSizeOptions","_typeof","total","isAllChecked","allValue","getDataValues","include","every","includes","indeterminate","totalCount","getLefCount","watch","val","lastPage","Math","ceil","handlePaginationChange","pageInfo","_props2$onPageChange","handleCheckedChange","_props2$onCheckedChan","handleCheckedAllChange","checked","scroll","e","_props2$onScroll","handleSearch","_props2$onSearch","event","query","trigger","renderTNodeJSX","useTNodeDefault","renderTitle","defaultNode","isString","_createVNode","titleNode","params","renderContent","_slot2","TCheckboxGroup","map","index","concat","key","_slot","data","onChange","renderEmpty","renderFooter","TCheckbox","placeholder"],"mappings":"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"}