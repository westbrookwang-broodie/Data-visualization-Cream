{"version":3,"file":"useDraggable.mjs","sources":["../../../src/tree/hooks/useDraggable.ts"],"sourcesContent":["import { ref, toRefs, inject } from 'vue';\nimport throttle from 'lodash/throttle';\nimport { TreeNode } from '../../_common/js/tree/tree-node';\nimport { DropPosition } from '../interface';\nimport { dragInjectKey } from '../constants';\n\nexport default function useDraggable(props: { nodeRef: HTMLElement | undefined; node: TreeNode }) {\n  const { nodeRef, node } = toRefs(props);\n  const onDrag = inject(dragInjectKey);\n\n  const isDragOver = ref(false);\n  const isDragging = ref(false);\n  const dropPosition = ref<DropPosition>(0);\n\n  const updateDropPosition = throttle((e: DragEvent) => {\n    if (typeof window === 'undefined') return;\n    if (!nodeRef.value) return;\n\n    const rect = nodeRef.value.getBoundingClientRect();\n    const offsetY = window.pageYOffset + rect.top;\n    const { pageY } = e;\n    const gapHeight = rect.height / 4;\n    const diff = pageY - offsetY;\n\n    // 其实三元可行\n    if (diff < gapHeight) {\n      dropPosition.value = -1;\n    } else if (diff < rect.height - gapHeight) {\n      dropPosition.value = 0;\n    } else {\n      dropPosition.value = 1;\n    }\n  });\n\n  const setDragStatus = (status: 'dragStart' | 'dragOver' | 'dragLeave' | 'dragEnd' | 'drop', e: DragEvent) => {\n    switch (status) {\n      case 'dragStart':\n        isDragging.value = true;\n        dropPosition.value = 0;\n        onDrag.onDragStart?.({ node: node.value, e });\n        e.dataTransfer.effectAllowed = 'move';\n        break;\n      case 'dragEnd':\n        isDragging.value = false;\n        isDragOver.value = false;\n        dropPosition.value = 0;\n        updateDropPosition.cancel();\n        onDrag.onDragEnd?.({ node: node.value, e });\n        break;\n      case 'dragOver':\n        isDragOver.value = true;\n        updateDropPosition(e);\n        onDrag.onDragOver?.({ node: node.value, e });\n        break;\n      case 'dragLeave':\n        isDragOver.value = false;\n        dropPosition.value = 0;\n        updateDropPosition.cancel();\n        onDrag.onDragLeave?.({ node: node.value, e });\n        break;\n      case 'drop':\n        onDrag.onDrop?.({ node: node.value, dropPosition: dropPosition.value, e });\n        isDragOver.value = false;\n        updateDropPosition.cancel();\n        break;\n      default:\n        break;\n    }\n  };\n\n  return {\n    isDragOver,\n    isDragging,\n    dropPosition,\n    setDragStatus,\n  };\n}\n"],"names":["useDraggable","props","_toRefs","toRefs","nodeRef","node","onDrag","inject","dragInjectKey","isDragOver","ref","isDragging","dropPosition","updateDropPosition","throttle","e","window","value","rect","getBoundingClientRect","offsetY","pageYOffset","top","pageY","gapHeight","height","diff","setDragStatus","status","_onDrag$onDragStart","_onDrag$onDragEnd","_onDrag$onDragOver","_onDrag$onDragLeave","_onDrag$onDrop","onDragStart","call","dataTransfer","effectAllowed","cancel","onDragEnd","onDragOver","onDragLeave","onDrop"],"mappings":"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"}