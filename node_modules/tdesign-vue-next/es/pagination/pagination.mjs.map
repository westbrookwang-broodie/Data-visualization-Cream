{"version":3,"file":"pagination.mjs","sources":["../../node_modules/lodash/isNaN.js","../../src/pagination/pagination.tsx"],"sourcesContent":["var isNumber = require('./isNumber');\n\n/**\n * Checks if `value` is `NaN`.\n *\n * **Note:** This method is based on\n * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n * `undefined` and other non-number values.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n * @example\n *\n * _.isNaN(NaN);\n * // => true\n *\n * _.isNaN(new Number(NaN));\n * // => true\n *\n * isNaN(undefined);\n * // => true\n *\n * _.isNaN(undefined);\n * // => false\n */\nfunction isNaN(value) {\n  // An `NaN` primitive is the only value that is not equal to itself.\n  // Perform the `toStringTag` check first to avoid errors with some\n  // ActiveX objects in IE.\n  return isNumber(value) && value != +value;\n}\n\nmodule.exports = isNaN;\n","import { defineComponent, computed, ref, watch, toRefs } from 'vue';\nimport isNaN from 'lodash/isNaN';\nimport {\n  PageFirstIcon as TdPageFirstIcon,\n  PageLastIcon as TdPageLastIcon,\n  ChevronLeftIcon as TdChevronLeftIcon,\n  ChevronRightIcon as TdChevronRightIcon,\n  ChevronLeftDoubleIcon as TdChevronLeftDoubleIcon,\n  ChevronRightDoubleIcon as TdChevronRightDoubleIcon,\n  EllipsisIcon as TdEllipsisIcon,\n} from 'tdesign-icons-vue-next';\nimport { TdPaginationProps } from '../pagination/type';\nimport { useConfig, usePrefixClass } from '../hooks/useConfig';\nimport { useGlobalIcon } from '../hooks/useGlobalIcon';\nimport TInputNumber from '../input-number';\nimport { Option, Select } from '../select';\nimport TInputAdornment from '../input-adornment';\nimport props from './props';\nimport usePaginationClasses from './usePaginationClasses';\nimport useMoreAction from './useMoreAction';\nimport useVModel from '../hooks/useVModel';\nimport useDefaultValue from '../hooks/useDefaultValue';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport isObject from 'lodash/isObject';\n\nconst min = 1;\n\nexport default defineComponent({\n  name: 'TPagination',\n  props,\n\n  setup(props: TdPaginationProps) {\n    const { modelValue, pageSize, current } = toRefs(props);\n    const renderTNodeJSX = useTNodeJSX();\n    const [innerCurrent, setInnerCurrent] = useVModel(\n      current,\n      modelValue,\n      props.defaultCurrent,\n      props.onCurrentChange,\n      'current',\n    );\n\n    const [innerPageSize, setInnerPageSize] = useDefaultValue(\n      pageSize,\n      props.defaultPageSize,\n      props.onPageSizeChange,\n      'pageSize',\n    );\n\n    const { t, globalConfig } = useConfig('pagination');\n    const COMPONENT_NAME = usePrefixClass('pagination');\n    const {\n      PageFirstIcon,\n      PageLastIcon,\n      ChevronLeftIcon,\n      ChevronRightIcon,\n      ChevronLeftDoubleIcon,\n      ChevronRightDoubleIcon,\n      EllipsisIcon,\n    } = useGlobalIcon({\n      PageFirstIcon: TdPageFirstIcon,\n      PageLastIcon: TdPageLastIcon,\n      ChevronLeftIcon: TdChevronLeftIcon,\n      ChevronRightIcon: TdChevronRightIcon,\n      ChevronLeftDoubleIcon: TdChevronLeftDoubleIcon,\n      ChevronRightDoubleIcon: TdChevronRightDoubleIcon,\n      EllipsisIcon: TdEllipsisIcon,\n    });\n\n    const { pageCount, ...CLASS_MAP } = usePaginationClasses(props, innerCurrent, innerPageSize, COMPONENT_NAME);\n\n    const { prevMore, isPrevMoreShow, curPageLeftCount, nextMore, isNextMoreShow, curPageRightCount } = useMoreAction(\n      props,\n      pageCount,\n      innerCurrent,\n    );\n\n    const jumpIndex = ref(innerCurrent.value);\n\n    const isFolded = computed(() => pageCount.value > props.maxPageBtn);\n\n    const sizeOptions = computed<Array<{ label: string; value: number }>>(() => {\n      const pageSizeOptions = props.pageSizeOptions as TdPaginationProps['pageSizeOptions'];\n      const options = pageSizeOptions.map((option) =>\n        isObject(option)\n          ? option\n          : {\n              label: t(globalConfig.value.itemsPerPage, { size: option }),\n              value: Number(option),\n            },\n      );\n      return options.sort((a, b) => a.value - b.value);\n    });\n\n    const isMidEllipsis = computed(() => {\n      return props.pageEllipsisMode === 'mid';\n    });\n\n    const pages = computed(() => {\n      const array = [];\n      let start;\n      let end;\n\n      if (isFolded.value) {\n        if (isPrevMoreShow.value && isNextMoreShow.value) {\n          start = innerCurrent.value - curPageLeftCount.value;\n          end = innerCurrent.value + curPageRightCount.value;\n        } else {\n          const foldedStart = isMidEllipsis.value ? 2 : 1;\n          const foldedEnd = isMidEllipsis.value ? pageCount.value - 1 : pageCount.value;\n          start = isPrevMoreShow.value ? pageCount.value - props.foldedMaxPageBtn + 1 : foldedStart;\n          end = isPrevMoreShow.value ? foldedEnd : props.foldedMaxPageBtn;\n        }\n      } else {\n        start = 1;\n        end = pageCount.value;\n      }\n\n      for (let i = start; i <= end; i++) {\n        array.push(i);\n      }\n      return array;\n    });\n\n    // 如果页面总数发生变化并当前页数大于总页数则重置为1\n    watch(\n      () => pageCount.value,\n      () => {\n        if (innerCurrent.value > pageCount.value) innerCurrent.value = 1;\n      },\n    );\n    watch(\n      () => innerCurrent.value,\n      (val) => (jumpIndex.value = val),\n    );\n\n    const toPage: (pageIndex: number, isTriggerChange?: boolean) => void = (pageIndex, isTriggerChange) => {\n      if (props.disabled) {\n        return;\n      }\n      let current = pageIndex;\n      if (pageIndex < min) {\n        current = min;\n      } else if (pageIndex > pageCount.value) {\n        current = pageCount.value;\n      }\n      if (innerCurrent.value !== current) {\n        const prev = innerCurrent.value;\n        const pageInfo = {\n          current,\n          previous: prev,\n          pageSize: innerPageSize.value,\n        };\n        if (isTriggerChange !== false) {\n          props.onChange?.(pageInfo);\n        }\n        setInnerCurrent(current, pageInfo);\n      }\n    };\n\n    const handlePageChange = (type: string) => {\n      const pageChangeMap = {\n        prevPage: () => toPage(innerCurrent.value - 1),\n        nextPage: () => toPage(innerCurrent.value + 1),\n        prevMorePage: () => toPage(innerCurrent.value - props.foldedMaxPageBtn),\n        nextMorePage: () => toPage(innerCurrent.value + props.foldedMaxPageBtn),\n      };\n\n      pageChangeMap[type]();\n    };\n\n    const onSelectorChange: (e: string) => void = (e) => {\n      if (props.disabled) {\n        return;\n      }\n      const pageSize: number = parseInt(e, 10);\n      let pageCount = 1;\n      if (pageSize > 0) {\n        pageCount = Math.ceil(props.total / pageSize);\n      }\n\n      let isIndexChange = false;\n\n      if (innerCurrent.value > pageCount) {\n        isIndexChange = true;\n      }\n\n      /**\n       * 分页大小变化事件\n       * @param {Number} pageSize 分页大小\n       * @param {Number} index 当前页\n       */\n      const pageInfo = {\n        current: isIndexChange ? pageCount : innerCurrent.value,\n        previous: innerCurrent.value,\n        pageSize,\n      };\n      props.onChange?.(pageInfo);\n      setInnerPageSize(pageSize, pageInfo);\n      if (isIndexChange) {\n        toPage(pageCount, false);\n      }\n    };\n\n    const onJumperChange = (val: number) => {\n      const currentIndex = Math.trunc(+val);\n      if (isNaN(currentIndex)) return;\n      jumpIndex.value = currentIndex;\n      toPage(currentIndex);\n    };\n\n    return () => {\n      const { total, pageSizeOptions, size, disabled, showPageSize } = props;\n      if (pageCount.value < 1) return null;\n\n      const Jumper = (\n        <div class={CLASS_MAP.jumperClass.value}>\n          {t(globalConfig.value.jumpTo)}\n          <TInputAdornment append={`/ ${pageCount.value} ${t(globalConfig.value.page)}`}>\n            <TInputNumber\n              class={CLASS_MAP.jumperInputClass.value}\n              v-model={jumpIndex.value}\n              onBlur={onJumperChange}\n              onEnter={onJumperChange}\n              max={pageCount.value}\n              min={min}\n              size={size}\n              disabled={disabled}\n              theme=\"normal\"\n              placeholder=\"\"\n            />\n          </TInputAdornment>\n        </div>\n      );\n\n      return (\n        <div class={CLASS_MAP.paginationClass.value}>\n          {/* 数据统计区 */}\n          {renderTNodeJSX(\n            'totalContent',\n            <div class={CLASS_MAP.totalClass.value}>{t(globalConfig.value.total, { total })}</div>,\n          )}\n\n          {/* 分页器 */}\n          {showPageSize && pageSizeOptions.length > 0 && (\n            <Select\n              size={size}\n              value={innerPageSize}\n              disabled={disabled}\n              class={CLASS_MAP.sizerClass.value}\n              autoWidth={true}\n              onChange={onSelectorChange}\n              {...props.selectProps}\n            >\n              {sizeOptions.value.map((item, index) => (\n                <Option value={item.value} label={item.label} key={index} />\n              ))}\n            </Select>\n          )}\n          {/* 首页按钮 */}\n          {props.showFirstAndLastPageBtn ? (\n            <div\n              class={CLASS_MAP.preBtnClass.value}\n              onClick={() => toPage(1)}\n              disabled={props.disabled || props.current === min}\n            >\n              <PageFirstIcon />\n            </div>\n          ) : null}\n          {/* 向前按钮 */}\n          {props.showPreviousAndNextBtn ? (\n            <div\n              class={CLASS_MAP.preBtnClass.value}\n              onClick={() => handlePageChange('prevPage')}\n              disabled={disabled || innerCurrent.value === min}\n            >\n              <ChevronLeftIcon />\n            </div>\n          ) : null}\n          {/* 常规版 */}\n          {props.showPageNumber && props.theme === 'default' ? (\n            <ul class={CLASS_MAP.btnWrapClass.value}>\n              {isFolded.value && isMidEllipsis.value && (\n                <li class={CLASS_MAP.getButtonClass(1)} onClick={() => toPage(min)}>\n                  {min}\n                </li>\n              )}\n              {isFolded.value && isPrevMoreShow.value && isMidEllipsis.value ? (\n                <li\n                  class={CLASS_MAP.btnMoreClass.value}\n                  onClick={() => handlePageChange('prevMorePage')}\n                  onMouseOver={() => (prevMore.value = true)}\n                  onMouseOut={() => (prevMore.value = false)}\n                >\n                  {prevMore.value ? <ChevronLeftDoubleIcon /> : <EllipsisIcon />}\n                </li>\n              ) : null}\n              {pages.value.map((i) => (\n                <li class={CLASS_MAP.getButtonClass(i)} key={i} onClick={() => toPage(i)}>\n                  {i}\n                </li>\n              ))}\n              {isFolded.value && isNextMoreShow.value && isMidEllipsis.value ? (\n                <li\n                  class={CLASS_MAP.btnMoreClass.value}\n                  onClick={() => handlePageChange('nextMorePage')}\n                  onMouseOver={() => (nextMore.value = true)}\n                  onMouseOut={() => (nextMore.value = false)}\n                >\n                  {nextMore.value ? <ChevronRightDoubleIcon /> : <EllipsisIcon />}\n                </li>\n              ) : null}\n              {isFolded.value && isMidEllipsis.value ? (\n                <li class={CLASS_MAP.getButtonClass(pageCount.value)} onClick={() => toPage(pageCount.value)}>\n                  {pageCount.value}\n                </li>\n              ) : null}\n            </ul>\n          ) : null}\n          {/* 极简版 */}\n          {props.theme === 'simple' && Jumper}\n          {/* 向后按钮 */}\n          {props.showPreviousAndNextBtn ? (\n            <div\n              class={CLASS_MAP.nextBtnClass.value}\n              onClick={() => handlePageChange('nextPage')}\n              disabled={disabled || innerCurrent.value === pageCount.value}\n            >\n              <ChevronRightIcon />\n            </div>\n          ) : null}\n          {/* 尾页按钮 */}\n          {props.showFirstAndLastPageBtn ? (\n            <div\n              class={CLASS_MAP.nextBtnClass.value}\n              onClick={() => toPage(pageCount.value)}\n              disabled={disabled || innerCurrent.value === pageCount.value}\n            >\n              <PageLastIcon />\n            </div>\n          ) : null}\n          {/* 快速跳转 */}\n          {props.theme === 'default' && props.showJumper && Jumper}\n        </div>\n      );\n    };\n  },\n});\n"],"names":["isNumber","require$$0","isNaN","value","_isNaN","_isSlot","s","Object","prototype","toString","call","_isVNode","min","defineComponent","name","props","setup","_toRefs","toRefs","modelValue","pageSize","current","renderTNodeJSX","useTNodeJSX","_useVModel","useVModel","defaultCurrent","onCurrentChange","_useVModel2","_slicedToArray","innerCurrent","setInnerCurrent","_useDefaultValue","useDefaultValue","defaultPageSize","onPageSizeChange","_useDefaultValue2","innerPageSize","setInnerPageSize","_useConfig","useConfig","t","globalConfig","COMPONENT_NAME","usePrefixClass","_useGlobalIcon","useGlobalIcon","PageFirstIcon","TdPageFirstIcon","PageLastIcon","TdPageLastIcon","ChevronLeftIcon","TdChevronLeftIcon","ChevronRightIcon","TdChevronRightIcon","ChevronLeftDoubleIcon","TdChevronLeftDoubleIcon","ChevronRightDoubleIcon","TdChevronRightDoubleIcon","EllipsisIcon","TdEllipsisIcon","_usePaginationClasses","usePaginationClasses","pageCount","CLASS_MAP","_objectWithoutProperties","_excluded","_useMoreAction","useMoreAction","prevMore","isPrevMoreShow","curPageLeftCount","nextMore","isNextMoreShow","curPageRightCount","jumpIndex","ref","isFolded","computed","maxPageBtn","sizeOptions","pageSizeOptions","options","map","option","isObject","label","itemsPerPage","size","Number","sort","a","b","isMidEllipsis","pageEllipsisMode","pages","array","start","end","foldedStart","foldedEnd","foldedMaxPageBtn","i","push","watch","val","toPage","pageIndex","isTriggerChange","disabled","prev","pageInfo","previous","_props2$onChange","onChange","handlePageChange","type","pageChangeMap","prevPage","nextPage","prevMorePage","nextMorePage","onSelectorChange","e","_props2$onChange2","parseInt","Math","ceil","total","isIndexChange","onJumperChange","currentIndex","trunc","_slot","showPageSize","Jumper","_createVNode","jumperClass","jumpTo","TInputAdornment","concat","page","jumperInputClass","onUpdateModelValue","$event","paginationClass","totalClass","length","sizerClass","selectProps","item","index","Option","showFirstAndLastPageBtn","preBtnClass","onClick","showPreviousAndNextBtn","showPageNumber","theme","btnWrapClass","getButtonClass","btnMoreClass","onMouseOver","onMouseOut","nextBtnClass","showJumper"],"mappings":"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"}