{"version":3,"file":"utils.mjs","sources":["../../src/image-viewer/utils.ts"],"sourcesContent":["import isString from 'lodash/isString';\nimport isArray from 'lodash/isArray';\n\nimport { TdImageViewerProps, ImageInfo } from './type';\n\nexport const downloadFile = function (imgSrc: string) {\n  const image = new Image();\n  const name = imgSrc?.split?.('/').pop() || Math.random().toString(32).slice(2);\n\n  image.setAttribute('crossOrigin', 'anonymous');\n\n  image.onload = () => {\n    const canvas = document.createElement('canvas');\n    canvas.width = image.width;\n    canvas.height = image.height;\n\n    const context = canvas.getContext('2d');\n    context.drawImage(image, 0, 0, image.width, image.height);\n    canvas.toBlob((blob) => {\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.download = name;\n      a.href = url;\n      a.click();\n      a.remove();\n      URL.revokeObjectURL(url);\n    });\n  };\n  image.src = imgSrc;\n};\n\nconst isImageInfo = (image: string | ImageInfo): image is ImageInfo => {\n  return !isString(image);\n};\n\nexport const formatImages = (images: TdImageViewerProps['images']): ImageInfo[] => {\n  if (!isArray(images)) return [];\n  return images.map((item) => {\n    if (isImageInfo(item)) {\n      return {\n        download: true,\n        thumbnail: item.mainImage,\n        ...item,\n      };\n    }\n    return {\n      mainImage: item,\n      thumbnail: item,\n      download: true,\n    };\n  });\n};\n\nexport const getOverlay = (props: TdImageViewerProps) => {\n  if (props.showOverlay !== undefined) {\n    return props.showOverlay;\n  }\n  return props.mode === 'modal';\n};\n"],"names":["downloadFile","imgSrc","_imgSrc$split","image","Image","name","split","call","pop","Math","random","toString","slice","setAttribute","onload","canvas","document","createElement","width","height","context","getContext","drawImage","toBlob","blob","url","URL","createObjectURL","a","download","href","click","remove","revokeObjectURL","src","isImageInfo","isString","formatImages","images","isArray","map","item","_objectSpread","thumbnail","mainImage","getOverlay","props","showOverlay","mode"],"mappings":"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"}