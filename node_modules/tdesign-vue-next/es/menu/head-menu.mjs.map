{"version":3,"file":"head-menu.mjs","sources":["../../src/menu/head-menu.tsx"],"sourcesContent":["import {\n  defineComponent,\n  computed,\n  provide,\n  ref,\n  reactive,\n  watch,\n  onMounted,\n  watchEffect,\n  toRefs,\n  h,\n  VNode,\n  Component,\n} from 'vue';\nimport { EllipsisIcon } from 'tdesign-icons-vue-next';\nimport isFunction from 'lodash/isFunction';\nimport isArray from 'lodash/isArray';\n\nimport log from '../_common/js/log/log';\nimport props from './head-menu-props';\nimport { MenuValue } from './type';\nimport { TdMenuInterface, TdOpenType } from './const';\nimport { Tabs, TabPanel } from '../tabs';\nimport Submenu from './submenu';\nimport VMenu from './v-menu';\nimport { usePrefixClass } from '../hooks/useConfig';\nimport useVModel from '../hooks/useVModel';\nimport useDefaultValue from '../hooks/useDefaultValue';\n\nexport default defineComponent({\n  name: 'THeadMenu',\n  props: { ...props },\n  setup(props, ctx) {\n    const classPrefix = usePrefixClass();\n    watchEffect(() => {\n      if (ctx.slots.options) {\n        log.warnOnce('TMenu', '`options` slot is going to be deprecated, please use `operations` for slot instead.');\n      }\n    });\n    const { value, modelValue, expanded } = toRefs(props);\n    const [activeValue, setActiveValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n    const [expandValues, setExpanded] = useDefaultValue(expanded, props.defaultExpanded, props.onExpand, 'expanded');\n    const activeValues = ref([]);\n    const theme = computed(() => props.theme);\n    const menuClass = computed(() => [\n      `${classPrefix.value}-menu`,\n      `${classPrefix.value}-head-menu`,\n      `${classPrefix.value}-menu--${props.theme}`,\n    ]);\n    const mode = ref(props.expandType);\n    const submenu = reactive([]);\n    const vMenu = new VMenu({ isMutex: true, expandValues: expandValues.value });\n\n    provide<TdMenuInterface>('TdMenu', {\n      mode,\n      theme,\n      vMenu,\n      isHead: true,\n      expandValues,\n      activeValue,\n      activeValues,\n      select: (value: MenuValue) => {\n        setActiveValue(value);\n      },\n      open: (value: MenuValue, type: TdOpenType) => {\n        const expanded = [...expandValues.value];\n        const index = expanded.indexOf(value);\n\n        if (mode.value === 'popup') {\n          if (type === 'add') {\n            if (index === -1) {\n              // 可能初始expanded里包含了该value\n              expanded.push(value);\n            }\n          } else if (type === 'remove') {\n            expanded.splice(index, 1);\n          }\n        } else if (mode.value === 'normal' && value !== undefined) {\n          expanded.splice(0, 1);\n          if (index === -1) {\n            expanded.push(value);\n          }\n        }\n        setExpanded(expanded);\n      },\n    });\n\n    // methods\n    const handleTabChange = (value: MenuValue) => {\n      setActiveValue(value);\n    };\n\n    const handleSubmenuExpand = (value: MenuValue) => {\n      const ans = vMenu.getChild(value);\n      submenu.length = 0;\n      submenu.push(...ans);\n    };\n\n    // watch\n    watch(expandValues, (value) => {\n      if (mode.value === 'normal') {\n        handleSubmenuExpand(value[0]);\n      }\n    });\n    const updateActiveValues = (value: MenuValue) => {\n      activeValues.value = vMenu.select(value);\n    };\n    watch(activeValue, updateActiveValues);\n    watch(\n      () => props.expandType,\n      (value) => {\n        mode.value = value;\n      },\n    );\n\n    onMounted(() => {\n      activeValues.value = vMenu.select(activeValue.value);\n      if (expandValues.value?.length > 0) {\n        handleSubmenuExpand(expandValues.value[0]); // 顶部导航只能同时展开一个子菜单\n      }\n    });\n    // setup返回的render函数中无法访问methods属性中的类容，移动此方法到setup中\n    const renderNormalSubmenu = () => {\n      if (submenu.length === 0) return null;\n      return (\n        <ul class={[`${classPrefix.value}-head-menu__submenu`, `${classPrefix.value}-submenu`]}>\n          {\n            <Tabs value={activeValue.value} onChange={handleTabChange}>\n              {submenu.map((item) => (\n                <TabPanel value={item.value} label={item.vnode()[0]?.children} />\n              ))}\n            </Tabs>\n          }\n        </ul>\n      );\n    };\n\n    const menuRef = ref<HTMLUListElement>();\n    const innerRef = ref<HTMLDivElement>();\n    const logoRef = ref<HTMLDivElement>();\n    const operationRef = ref<HTMLDivElement>();\n\n    const getComputedCss = (el: Element, cssProperty: keyof CSSStyleDeclaration) =>\n      getComputedStyle(el)[cssProperty] ?? '';\n\n    const getComputedCssValue = (el: Element, cssProperty: keyof CSSStyleDeclaration) =>\n      Number.parseInt(String(getComputedCss(el, cssProperty)), 10);\n\n    const calcMenuWidth = () => {\n      const menuPaddingLeft = getComputedCssValue(menuRef.value, 'paddingLeft');\n      const menuPaddingRight = getComputedCssValue(menuRef.value, 'paddingRight');\n      let totalWidth = innerRef.value.clientWidth;\n      if (logoRef.value) {\n        const logoMarginLeft = getComputedCssValue(logoRef.value, 'marginLeft');\n        const logoMarginRight = getComputedCssValue(logoRef.value, 'marginRight');\n        totalWidth = totalWidth - logoRef.value.offsetWidth - logoMarginLeft - logoMarginRight;\n      }\n\n      if (operationRef.value) {\n        const operationMarginLeft = getComputedCssValue(operationRef.value, 'marginLeft');\n        const operationMarginRight = getComputedCssValue(operationRef.value, 'marginRight');\n        totalWidth = totalWidth - operationRef.value.offsetWidth - operationMarginLeft - operationMarginRight;\n      }\n\n      return totalWidth - menuPaddingLeft - menuPaddingRight;\n    };\n\n    const formatContent = () => {\n      let slot = ctx.slots.default?.() || ctx.slots.content?.() || [];\n\n      if (menuRef.value && innerRef.value) {\n        const validNodes = Array.from(menuRef.value.childNodes ?? []).filter(\n          (item) => item.nodeName !== '#text' || item.nodeValue,\n        ) as HTMLElement[];\n\n        const menuWidth = calcMenuWidth();\n        const menuItemMinWidth = 104;\n\n        let remainWidth = menuWidth;\n        let sliceIndex = validNodes.length;\n\n        for (let index = 0; index < validNodes.length; index++) {\n          const element = validNodes[index];\n          remainWidth -= element.offsetWidth || 0;\n          if (remainWidth < menuItemMinWidth) {\n            sliceIndex = index;\n            break;\n          }\n        }\n\n        const defaultSlot = slot.slice(0, sliceIndex);\n        const subMore = slot.slice(sliceIndex);\n\n        if (subMore.length) {\n          slot = defaultSlot.concat(\n            <Submenu expandType=\"popup\" title={() => <EllipsisIcon />}>\n              {subMore}\n            </Submenu>,\n          );\n        }\n      }\n      return slot;\n    };\n\n    const initVMenu = (slots: VNode[], parentValue?: string) => {\n      slots.forEach((node) => {\n        const nodeValue = node.props?.value;\n        if ((node.type as Component)?.name === 'TSubmenu' || (node.type as Component)?.name === 'TMenuItem') {\n          vMenu.add({ value: nodeValue, parent: parentValue, vnode: (node.children as any).default });\n        }\n        if (isFunction((node.children as any)?.default)) {\n          initVMenu((node.children as any).default(), nodeValue);\n          return;\n        }\n        if (isArray(node.children)) {\n          initVMenu(node.children as VNode[], nodeValue);\n        }\n      });\n    };\n    initVMenu(ctx.slots.default?.() || ctx.slots.content?.() || []);\n\n    return () => {\n      const logo = props.logo?.(h) || ctx.slots.logo?.();\n      const operations = props.operations?.(h) || ctx.slots.operations?.() || ctx.slots.options?.();\n      const content = formatContent();\n\n      return (\n        <div class={menuClass.value}>\n          <div class={`${classPrefix.value}-head-menu__inner`} ref={innerRef}>\n            {logo && (\n              <div class={`${classPrefix.value}-menu__logo`} ref={logoRef}>\n                {logo}\n              </div>\n            )}\n            <ul class={`${classPrefix.value}-menu`} ref={menuRef}>\n              {content}\n            </ul>\n            {operations && (\n              <div class={`${classPrefix.value}-menu__operations`} ref={operationRef}>\n                {operations}\n              </div>\n            )}\n          </div>\n          {mode.value === 'normal' && renderNormalSubmenu()}\n        </div>\n      );\n    };\n  },\n});\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","defineComponent","name","props","_objectSpread","setup","ctx","_ctx$slots$default2","_ctx$slots3","_ctx$slots$content2","_ctx$slots4","classPrefix","usePrefixClass","watchEffect","slots","options","log","warnOnce","_toRefs","toRefs","value","modelValue","expanded","_useVModel","useVModel","defaultValue","onChange","_useVModel2","_slicedToArray","activeValue","setActiveValue","_useDefaultValue","useDefaultValue","defaultExpanded","onExpand","_useDefaultValue2","expandValues","setExpanded","activeValues","ref","theme","computed","menuClass","concat","mode","expandType","submenu","reactive","vMenu","VMenu","isMutex","provide","isHead","select","open","type","_toConsumableArray","index","indexOf","push","splice","handleTabChange","handleSubmenuExpand","ans","getChild","length","apply","watch","updateActiveValues","onMounted","_expandValues$value","renderNormalSubmenu","_slot","_createVNode","map","item","_item$vnode$","TabPanel","vnode","children","_default","menuRef","innerRef","logoRef","operationRef","getComputedCss","el","cssProperty","getComputedStyle","_getComputedStyle$css","getComputedCssValue","Number","parseInt","String","calcMenuWidth","menuPaddingLeft","menuPaddingRight","totalWidth","clientWidth","logoMarginLeft","logoMarginRight","offsetWidth","operationMarginLeft","operationMarginRight","formatContent","_ctx$slots$default","_ctx$slots","_ctx$slots$content","_ctx$slots2","slot","content","_menuRef$value$childN","validNodes","Array","from","childNodes","filter","nodeName","nodeValue","menuWidth","menuItemMinWidth","remainWidth","sliceIndex","element","defaultSlot","slice","subMore","Submenu","title","EllipsisIcon","initVMenu","parentValue","forEach","node","_node$props","_node$type","_node$type2","_node$children","add","parent","isFunction","isArray","_props2$logo","_ctx$slots$logo","_ctx$slots5","_props2$operations","_ctx$slots$operations","_ctx$slots6","_ctx$slots$options","_ctx$slots7","logo","h","operations"],"mappings":"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"}