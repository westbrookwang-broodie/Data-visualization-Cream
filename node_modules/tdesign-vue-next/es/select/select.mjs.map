{"version":3,"file":"select.mjs","sources":["../../src/select/select.tsx"],"sourcesContent":["import { defineComponent, provide, computed, toRefs, watch, ref, nextTick } from 'vue';\nimport picker from 'lodash/pick';\nimport isArray from 'lodash/isArray';\nimport isFunction from 'lodash/isFunction';\nimport debounce from 'lodash/debounce';\nimport cloneDeep from 'lodash/cloneDeep';\nimport get from 'lodash/get';\nimport intersection from 'lodash/intersection';\n\nimport FakeArrow from '../common-components/fake-arrow';\nimport SelectInput from '../select-input';\nimport SelectPanel from './select-panel';\n\nimport props from './props';\nimport { TdSelectProps, SelectValue } from './type';\nimport { PopupVisibleChangeContext } from '../popup';\n\n// hooks\nimport { useFormDisabled } from '../form/hooks';\nimport useDefaultValue from '../hooks/useDefaultValue';\nimport useVModel from '../hooks/useVModel';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport { useConfig, usePrefixClass } from '../hooks/useConfig';\nimport { selectInjectKey, getSingleContent, getMultipleContent, getNewMultipleValue } from './helper';\nimport { useSelectOptions } from './hooks/useSelectOptions';\n\nexport default defineComponent({\n  name: 'TSelect',\n  props: { ...props },\n  setup(props: TdSelectProps, { slots }) {\n    const classPrefix = usePrefixClass();\n    const disabled = useFormDisabled();\n    const renderTNodeJSX = useTNodeJSX();\n    const COMPONENT_NAME = usePrefixClass('select');\n    const { globalConfig, t } = useConfig('select');\n    const { popupVisible, inputValue, modelValue, value } = toRefs(props);\n    const [orgValue, setOrgValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n    const selectPanelRef = ref(null);\n    const selectInputRef = ref(null);\n    const keys = computed(() => ({\n      label: props.keys?.label || 'label',\n      value: props.keys?.value || 'value',\n    }));\n    const { options, optionsMap, optionsList, optionsCache } = useSelectOptions(props, keys);\n\n    // 内部数据,格式化过的\n    const innerValue = computed(() => {\n      if (orgValue.value === undefined) {\n        return props.multiple ? [] : undefined;\n      }\n      if (props.valueType === 'object') {\n        return !props.multiple\n          ? orgValue.value[keys.value.value]\n          : (orgValue.value as SelectValue[]).map((option) => option[keys.value.value]);\n      }\n      return orgValue.value;\n    });\n    const setInnerValue: TdSelectProps['onChange'] = (newVal: SelectValue | SelectValue[], e) => {\n      if (props.valueType === 'object') {\n        const { value, label } = keys.value;\n        const getOption = (val: SelectValue) => {\n          if (val === undefined) {\n            return undefined;\n          }\n          const option = optionsMap.value.get(val);\n          return {\n            [value]: get(option, value),\n            [label]: get(option, label),\n          };\n        };\n        newVal = props.multiple ? (newVal as SelectValue[]).map((val) => getOption(val)) : getOption(newVal);\n      }\n      if (newVal === orgValue.value) return;\n      setOrgValue(newVal, { selectedOptions: getSelectedOptions(newVal), trigger: e.trigger, e: e.e });\n    };\n\n    const [innerInputValue, setInputValue] = useDefaultValue(\n      inputValue,\n      props.defaultInputValue,\n      props.onInputChange,\n      'inputValue',\n    );\n    const [innerPopupVisible, setInnerPopupVisible] = useDefaultValue(\n      popupVisible,\n      false,\n      (visible: boolean, context: PopupVisibleChangeContext) => {\n        props.onPopupVisibleChange?.(visible, context);\n      },\n      'popupVisible',\n    );\n\n    const placeholderText = computed(\n      () =>\n        ((!props.multiple && innerPopupVisible.value && getSingleContent(innerValue.value, optionsMap)) ||\n          props.placeholder) ??\n        t(globalConfig.value.placeholder),\n    );\n\n    // selectInput 展示值\n    const displayText = computed(() =>\n      props.multiple\n        ? getMultipleContent(innerValue.value as SelectValue[], optionsMap)\n        : getSingleContent(innerValue.value, optionsMap),\n    );\n\n    // valueDisplayParams参数\n    const valueDisplayParams = computed(() => {\n      const val =\n        props.multiple && isArray(innerValue.value)\n          ? (innerValue.value as SelectValue[]).map((value) => ({\n              value,\n              label: optionsMap.value.get(value)?.label,\n            }))\n          : innerValue.value;\n\n      const params = {\n        value: val,\n        onClose: props.multiple ? (index: number) => removeTag(index) : () => {},\n      };\n\n      if (props.minCollapsedNum && props.multiple) {\n        return {\n          ...params,\n          displayValue: val?.slice?.(0, props.minCollapsedNum),\n        };\n      }\n      return params;\n    });\n\n    const isFilterable = computed(() => {\n      return Boolean(props.filterable || globalConfig.value.filterable || isFunction(props.filter));\n    });\n\n    // 移除tag\n    const removeTag = (index: number, e?: MouseEvent) => {\n      e && e.stopPropagation();\n      const selectValue = cloneDeep(innerValue.value) as SelectValue[];\n      const value = selectValue[index];\n      selectValue.splice(index, 1);\n      setInnerValue(selectValue, { selectedOptions: getSelectedOptions(selectValue), trigger: 'tag-remove', e });\n      props.onRemove?.({\n        value: value as string | number,\n        data: optionsMap.value.get(value),\n        e,\n      });\n    };\n\n    const handleCreate = () => {\n      if (!innerInputValue.value) return;\n      props.onCreate?.(innerInputValue.value);\n      setInputValue('');\n    };\n\n    // 键盘操作逻辑\n    const hoverIndex = ref(-1);\n    const handleKeyDown = (e: KeyboardEvent) => {\n      const optionsListLength = optionsList.value.length;\n      let newIndex = hoverIndex.value;\n      switch (e.code) {\n        case 'ArrowUp':\n          e.preventDefault();\n          if (hoverIndex.value === -1) {\n            newIndex = 0;\n          } else if (hoverIndex.value === 0) {\n            newIndex = optionsListLength - 1;\n          } else {\n            newIndex--;\n          }\n          if (optionsList.value[newIndex]?.disabled) {\n            newIndex--;\n          }\n          hoverIndex.value = newIndex;\n          break;\n        case 'ArrowDown':\n          e.preventDefault();\n          if (hoverIndex.value === -1 || hoverIndex.value === optionsListLength - 1) {\n            newIndex = 0;\n          } else {\n            newIndex++;\n          }\n          if (optionsList.value[newIndex]?.disabled) {\n            newIndex++;\n          }\n          hoverIndex.value = newIndex;\n          break;\n        case 'Enter':\n          if (hoverIndex.value === -1) break;\n          if (!innerPopupVisible.value) {\n            setInnerPopupVisible(true, { e });\n            break;\n          }\n          if (!props.multiple) {\n            setInnerValue(optionsList.value[hoverIndex.value].value, {\n              selectedOptions: getSelectedOptions(optionsList.value[hoverIndex.value].value),\n              trigger: 'check',\n              e,\n            });\n            setInnerPopupVisible(false, { e });\n          } else {\n            if (hoverIndex.value === -1) return;\n            const optionValue = optionsList.value[hoverIndex.value]?.value;\n            if (!optionValue) return;\n            const newValue = getNewMultipleValue(innerValue.value, optionValue);\n            setInnerValue(newValue.value, {\n              selectedOptions: getSelectedOptions(newValue.value),\n              trigger: newValue.isCheck ? 'check' : 'uncheck',\n              e,\n            });\n          }\n          break;\n        case 'Escape':\n          setInnerPopupVisible(false, { e });\n          break;\n      }\n    };\n\n    const popupContentRef = computed(() => selectInputRef.value?.popupRef.getOverlay() as HTMLElement);\n\n    /**\n     * 可选选项的列表\n     * 排除已禁用和全选的选项\n     */\n    const optionalList = computed(() =>\n      optionsList.value.filter((item) => {\n        return !item.disabled && !item['check-all'] && !item.checkAll;\n      }),\n    );\n\n    const getSelectedOptions = (selectValue: SelectValue[] | SelectValue = innerValue.value) => {\n      return optionsList.value.filter((option) => {\n        if (option.checkAll) return;\n        if (isArray(selectValue)) return selectValue.includes(option.value);\n        return selectValue === option.value;\n      });\n    };\n\n    const onCheckAllChange = (checked: boolean) => {\n      if (!props.multiple) return;\n      const value = checked ? optionalList.value.map((option) => option.value) : [];\n      setInnerValue(value, { selectedOptions: getSelectedOptions(value), trigger: checked ? 'check' : 'clear' });\n    };\n\n    // 已选的长度\n    const intersectionLen = computed<number>(() => {\n      const values = optionalList.value.map((item) => item.value);\n      const n = intersection(innerValue.value, values);\n      return n.length;\n    });\n\n    // 全选\n    const isCheckAll = computed<boolean>(() => {\n      return intersectionLen.value === optionalList.value.length;\n    });\n\n    // 半选\n    const indeterminate = computed<boolean>(() => !isCheckAll.value && intersectionLen.value !== 0);\n\n    const SelectProvide = computed(() => ({\n      max: props.max,\n      multiple: props.multiple,\n      hoverIndex: hoverIndex.value,\n      selectValue: innerValue.value,\n      reserveKeyword: props.reserveKeyword,\n      handleValueChange: setInnerValue,\n      handlerInputChange: setInputValue,\n      handlePopupVisibleChange: setInnerPopupVisible,\n      handleCreate,\n      size: props.size,\n      popupContentRef,\n      indeterminate: indeterminate.value,\n      isCheckAll: isCheckAll.value,\n      onCheckAllChange,\n      getSelectedOptions,\n    }));\n\n    provide(selectInjectKey, SelectProvide);\n\n    const checkValueInvalid = () => {\n      // 参数类型检测与修复\n      if (!props.multiple && isArray(orgValue.value)) {\n        setOrgValue(undefined);\n      }\n      if (props.multiple && !isArray(orgValue.value)) {\n        setOrgValue([]);\n      }\n    };\n    const handleSearch = debounce((value: string, { e }: { e: KeyboardEvent }) => {\n      props.onSearch?.(`${value}`, { e });\n    }, 300);\n\n    const addCache = (val: SelectValue) => {\n      if (props.multiple) {\n        const newCache = [];\n        for (const item of (val as SelectValue[]) || []) {\n          const option = optionsMap.value.get(item);\n          if (option) {\n            newCache.push(option);\n          }\n        }\n        optionsCache.value = Array.from(new Set([...newCache, ...optionsCache.value]));\n      } else {\n        const option = optionsMap.value.get(val);\n        if (option) {\n          optionsCache.value = Array.from(new Set([option, ...optionsCache.value]));\n        }\n      }\n    };\n\n    watch(\n      orgValue,\n      (val) => {\n        checkValueInvalid();\n        nextTick(() => {\n          addCache(val);\n        });\n      },\n      {\n        immediate: true,\n      },\n    );\n    watch(\n      () => props.multiple,\n      () => {\n        checkValueInvalid();\n      },\n    );\n    watch(innerPopupVisible, (value) => {\n      if (value) {\n        // 显示\n        hoverIndex.value = -1;\n      } else {\n        // 隐藏\n        // eslint-disable-next-line no-lonely-if\n        if (innerInputValue.value) {\n          setInputValue('');\n        }\n      }\n    });\n\n    // 列表展开时定位置选中项\n    const updateScrollTop = (content: HTMLDivElement) => {\n      if (!selectPanelRef.value) {\n        return;\n      }\n      const firstSelectedNode: HTMLDivElement = (selectPanelRef.value?.innerRef as HTMLDivElement)?.querySelector(\n        `.${classPrefix.value}-is-selected`,\n      );\n      // 此处需要等待渲染后进行计算\n      nextTick(() => {\n        if (firstSelectedNode && content) {\n          const { paddingBottom } = getComputedStyle(firstSelectedNode);\n          const { marginBottom } = getComputedStyle(content);\n          const elementBottomHeight = parseInt(paddingBottom, 10) + parseInt(marginBottom, 10);\n          // 小于0时不需要特殊处理，会被设为0\n          const updateValue =\n            firstSelectedNode.offsetTop -\n            content.offsetTop -\n            (content.clientHeight - firstSelectedNode.clientHeight) +\n            elementBottomHeight;\n          // eslint-disable-next-line no-param-reassign\n          content.scrollTop = updateValue;\n        }\n      });\n    };\n    provide('updateScrollTop', updateScrollTop);\n    return () => {\n      const { overlayClassName, ...restPopupProps } = (props.popupProps || {}) as TdSelectProps['popupProps'];\n      return (\n        <div class={`${COMPONENT_NAME.value}__wrap`}>\n          <SelectInput\n            {...{\n              autoWidth: props.autoWidth,\n              readonly: props.readonly,\n              borderless: props.borderless,\n              multiple: props.multiple,\n              clearable: props.clearable,\n              loading: props.loading,\n              status: props.status,\n              tips: props.tips,\n              minCollapsedNum: props.minCollapsedNum,\n              autofocus: props.autofocus,\n              suffix: props.suffix,\n            }}\n            ref={selectInputRef}\n            class={COMPONENT_NAME.value}\n            value={displayText.value}\n            disabled={disabled.value}\n            popupVisible={innerPopupVisible.value}\n            inputValue={innerPopupVisible.value ? innerInputValue.value : ''}\n            placeholder={`${placeholderText.value}`}\n            allowInput={isFilterable.value}\n            collapsed-items={props.collapsedItems}\n            inputProps={{\n              size: props.size,\n              ...(props.inputProps as TdSelectProps['inputProps']),\n              onkeydown: handleKeyDown,\n            }}\n            tagInputProps={{\n              size: props.size,\n              ...(props.tagInputProps as TdSelectProps['tagInputProps']),\n            }}\n            onTagChange={(val, ctx) => {\n              removeTag(ctx.index);\n            }}\n            tagProps={{ ...(props.tagProps as TdSelectProps['tagProps']) }}\n            popupProps={{\n              overlayClassName: [`${COMPONENT_NAME.value}__dropdown`, overlayClassName],\n              ...restPopupProps,\n            }}\n            label={() => renderTNodeJSX('prefixIcon')}\n            suffixIcon={() => {\n              if (props.suffixIcon || slots.suffixIcon) {\n                return renderTNodeJSX('suffixIcon');\n              }\n\n              return (\n                props.showArrow && (\n                  <FakeArrow\n                    overlayClassName={`${COMPONENT_NAME.value}__right-icon`}\n                    isActive={innerPopupVisible.value}\n                  />\n                )\n              );\n            }}\n            valueDisplay={() =>\n              renderTNodeJSX('valueDisplay', {\n                params: valueDisplayParams.value,\n              })\n            }\n            onPopupVisibleChange={(val: boolean, context) => {\n              setInnerPopupVisible(val, context);\n            }}\n            onInputChange={(value, context) => {\n              if (!innerPopupVisible.value) return;\n              setInputValue(value);\n              handleSearch(`${value}`, { e: context.e as KeyboardEvent });\n            }}\n            onClear={({ e }) => {\n              setInnerValue(props.multiple ? [] : undefined, {\n                selectedOptions: getSelectedOptions(props.multiple ? [] : undefined),\n                trigger: 'clear',\n                e,\n              });\n              props.onClear?.({ e });\n            }}\n            onEnter={(inputValue, { e }) => {\n              props.onEnter?.({ inputValue: `${innerInputValue.value}`, e, value: innerValue.value });\n              handleCreate();\n            }}\n            onBlur={(inputValue, { e }) => {\n              props.onBlur?.({ e, value: innerValue.value });\n            }}\n            onFocus={(inputValue, { e }) => {\n              props.onFocus?.({ e, value: innerValue.value });\n            }}\n            {...(props.selectInputProps as TdSelectProps['selectInputProps'])}\n            v-slots={{\n              panel: () => (\n                <SelectPanel\n                  ref={selectPanelRef}\n                  {...picker(props, [\n                    'size',\n                    'multiple',\n                    'empty',\n                    'loading',\n                    'loadingText',\n                    'filterable',\n                    'creatable',\n                    'panelTopContent',\n                    'panelBottomContent',\n                    'filter',\n                    'scroll',\n                  ])}\n                  options={options.value}\n                  inputValue={innerInputValue.value}\n                  v-slots={slots}\n                />\n              ),\n              collapsedItems: slots.collapsedItems,\n              suffix: slots.suffix,\n            }}\n          />\n        </div>\n      );\n    };\n  },\n});\n"],"names":["defineComponent","name","props","_objectSpread","setup","slots","_ref","classPrefix","usePrefixClass","disabled","useFormDisabled","renderTNodeJSX","useTNodeJSX","COMPONENT_NAME","_useConfig","useConfig","globalConfig","t","_toRefs","toRefs","popupVisible","inputValue","modelValue","value","_useVModel","useVModel","defaultValue","onChange","_useVModel2","_slicedToArray","orgValue","setOrgValue","selectPanelRef","ref","selectInputRef","keys","computed","_props2$keys","_props2$keys2","label","_useSelectOptions","useSelectOptions","options","optionsMap","optionsList","optionsCache","innerValue","multiple","valueType","map","option","setInnerValue","newVal","e","_keys$value","getOption","val","_ref2","get","_defineProperty","selectedOptions","getSelectedOptions","trigger","_useDefaultValue","useDefaultValue","defaultInputValue","onInputChange","_useDefaultValue2","innerInputValue","setInputValue","_useDefaultValue3","visible","context","_props2$onPopupVisibl","onPopupVisibleChange","_useDefaultValue4","innerPopupVisible","setInnerPopupVisible","placeholderText","_ref3","getSingleContent","placeholder","displayText","getMultipleContent","valueDisplayParams","isArray","_optionsMap$value$get","params","onClose","index","removeTag","minCollapsedNum","_val$slice","displayValue","slice","call","isFilterable","Boolean","filterable","isFunction","filter","_props2$onRemove","stopPropagation","selectValue","cloneDeep","splice","onRemove","data","handleCreate","_props2$onCreate","onCreate","hoverIndex","handleKeyDown","_optionsList$value$ne","_optionsList$value$ne2","optionsListLength","length","newIndex","code","preventDefault","_optionsList$value$ho","optionValue","newValue","getNewMultipleValue","isCheck","popupContentRef","_selectInputRef$value","popupRef","getOverlay","optionalList","item","checkAll","arguments","undefined","includes","onCheckAllChange","checked","intersectionLen","values","n","intersection","isCheckAll","indeterminate","SelectProvide","max","reserveKeyword","handleValueChange","handlerInputChange","handlePopupVisibleChange","size","provide","selectInjectKey","checkValueInvalid","handleSearch","debounce","_ref4","_props2$onSearch","onSearch","addCache","newCache","_iterator","_createForOfIteratorHelper","_step","s","done","push","err","f","Array","from","Set","concat","_toConsumableArray","watch","nextTick","immediate","updateScrollTop","content","_selectPanelRef$value","_selectPanelRef$value2","firstSelectedNode","innerRef","querySelector","_getComputedStyle","getComputedStyle","paddingBottom","_getComputedStyle2","marginBottom","elementBottomHeight","parseInt","updateValue","offsetTop","clientHeight","scrollTop","_ref5","popupProps","overlayClassName","restPopupProps","_objectWithoutProperties","_excluded","_createVNode","SelectInput","_mergeProps","autoWidth","readonly","borderless","clearable","loading","status","tips","autofocus","suffix","collapsedItems","inputProps","onkeydown","tagInputProps","onTagChange","ctx","tagProps","suffixIcon","showArrow","FakeArrow","valueDisplay","onClear","_ref6","_props2$onClear","onEnter","_ref7","_props2$onEnter","onBlur","_ref8","_props2$onBlur","onFocus","_ref9","_props2$onFocus","selectInputProps","panel","SelectPanel","picker"],"mappings":"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"}