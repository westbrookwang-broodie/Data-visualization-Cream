/**
 * tdesign v1.3.1
 * (c) 2023 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../../_chunks/dep-9ddd4050.mjs';
import { _ as _slicedToArray } from '../../_chunks/dep-7856a613.mjs';
import { _ as _typeof } from '../../_chunks/dep-dbb72607.mjs';
import { ref, toRefs, computed, watch, createVNode } from 'vue';
import useClassName from './useClassName.mjs';
import { Button } from '../../button/index.mjs';
import useDefaultValue from '../../hooks/useDefaultValue.mjs';
import { useTNodeDefault } from '../../hooks/tnode.mjs';
import TableFilterController from '../filter-controller.mjs';
import '../../hooks/useConfig.mjs';
import { useConfig } from '../../config-provider/useConfig.mjs';
import '../../_chunks/dep-e827c721.mjs';
import '../../_chunks/dep-14b6ba18.mjs';
import '../../_chunks/dep-bec45e18.mjs';
import '../../_chunks/dep-339a814a.mjs';
import '../../_chunks/dep-ed4e2839.mjs';
import '../../_chunks/dep-c19618d4.mjs';
import '../../_chunks/dep-cd3b0fa6.mjs';
import '../../_chunks/dep-c9ce648e.mjs';
import '../../_chunks/dep-4d256b91.mjs';
import '../../_chunks/dep-0d7bf0e3.mjs';
import '../../_chunks/dep-201da76e.mjs';
import '../../_chunks/dep-e62c24d1.mjs';
import '../../_chunks/dep-fe69e368.mjs';
import '../../_chunks/dep-976f9516.mjs';
import '../../_chunks/dep-11e36026.mjs';
import '../../_chunks/dep-546c20ab.mjs';
import '../../_chunks/dep-0f434994.mjs';
import '../../_chunks/dep-f5c677eb.mjs';
import '../../_chunks/dep-428963eb.mjs';
import '../../_chunks/dep-019ee94c.mjs';
import '../../_chunks/dep-3d1dcd03.mjs';
import '../../_chunks/dep-72f2a0b4.mjs';
import '../../_chunks/dep-56623c1f.mjs';
import '../../_chunks/dep-f694a61e.mjs';
import '../../_chunks/dep-d96da68c.mjs';
import '../../_chunks/dep-81ef22a5.mjs';
import '../../_chunks/dep-f4a1f294.mjs';
import '../../_chunks/dep-99aaf398.mjs';
import '../../_chunks/dep-9e4f2d05.mjs';
import '../../_chunks/dep-2351c759.mjs';
import '../../_chunks/dep-2d971205.mjs';
import '../../_common/js/global-config/default-config.mjs';
import '../../_common/js/global-config/locale/zh_CN.mjs';
import '../../_chunks/dep-3be1a481.mjs';
import '../../_chunks/dep-b76005d0.mjs';
import '../../config-provider/type.mjs';
import '../../button/button.mjs';
import '../../_chunks/dep-89c2d338.mjs';
import '../../loading/index.mjs';
import '../../loading/directive.mjs';
import '../../loading/plugin.mjs';
import '../../loading/loading.mjs';
import '../../loading/icon/gradient.mjs';
import '../../_common/js/loading/circle-adapter.mjs';
import '../../_common/js/utils/set-style.mjs';
import '../../_common/js/utils/helper.mjs';
import '../../_chunks/dep-5ff2a750.mjs';
import '../../_chunks/dep-e442c09f.mjs';
import '../../_chunks/dep-dea8521c.mjs';
import '../../_chunks/dep-d60edf68.mjs';
import '../../utils/dom.mjs';
import '../../utils/easing.mjs';
import '../../utils/render-tnode.mjs';
import '../../_chunks/dep-094ccbd7.mjs';
import '../../_chunks/dep-ac072285.mjs';
import '../../_chunks/dep-7c35655e.mjs';
import '../../_chunks/dep-c6a9d3e7.mjs';
import '../../_chunks/dep-8b01f133.mjs';
import '../../_chunks/dep-80f4d76a.mjs';
import '../../_chunks/dep-59f92248.mjs';
import '../../_chunks/dep-cb8e09e3.mjs';
import '../../_chunks/dep-62d92cbc.mjs';
import '../../loading/props.mjs';
import '../../hooks/useTeleport.mjs';
import '../../utils/withInstall.mjs';
import './style/css.mjs';
import '../../loading/type.mjs';
import '../../button/props.mjs';
import '../../hooks/useRipple.mjs';
import '../../hooks/useKeepAnimation.mjs';
import '../../utils/set-style.mjs';
import '../../form/hooks.mjs';
import '../../button/type.mjs';
import 'tdesign-icons-vue-next';
import '../../popup/index.mjs';
import '../../popup/popup.mjs';
import '@popperjs/core';
import '../../hooks/index.mjs';
import '../../hooks/icon.mjs';
import '../../hooks/slot.mjs';
import '../../hooks/useCommonClassName.mjs';
import '../../hooks/useDestroyOnClose.mjs';
import '../../hooks/useVirtualScroll.mjs';
import '../../hooks/useVModel.mjs';
import '../../popup/container.mjs';
import '../../popup/props.mjs';
import '../../hooks/useResizeObserver.mjs';
import '../../popup/type.mjs';
import '../../checkbox/index.mjs';
import '../../checkbox/checkbox.mjs';
import '../../checkbox/props.mjs';
import '../../checkbox/constants.mjs';
import '../../checkbox/group.mjs';
import '../../_chunks/dep-7cc7b256.mjs';
import '../../_chunks/dep-aaaa1fe0.mjs';
import '../../checkbox/checkbox-group-props.mjs';
import '../../checkbox/type.mjs';
import '../../radio/index.mjs';
import '../../radio/radio.mjs';
import '../../utils/helper.mjs';
import '../../radio/props.mjs';
import '../../radio/constants.mjs';
import '../../radio/group.mjs';
import '../../_chunks/dep-cc784903.mjs';
import '../../_chunks/dep-4eb965c3.mjs';
import '../../radio/radio-group-props.mjs';
import '../../radio/useKeyboard.mjs';
import '../../watermark/hooks.mjs';
import '../../radio/radio-button.mjs';
import '../../radio/type.mjs';
import '../../input/index.mjs';
import '../../input/input.mjs';
import '../../input/props.mjs';
import '../../hooks/useGlobalIcon.mjs';
import '../../input/useInput.mjs';
import '../../form/const.mjs';
import '../../input/useLengthLimit.mjs';
import '../../_common/js/log/index.mjs';
import '../../_common/js/log/log.mjs';
import '../../input/useInputEventHandler.mjs';
import '../../input/useInputWidth.mjs';
import '../../input/input-group.mjs';
import '../../input/input-group-props.mjs';
import '../../input/type.mjs';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function isFilterValueExist(value) {
  var isArrayTrue = value instanceof Array && value.length;
  var isObject = _typeof(value) === "object" && !(value instanceof Array);
  var isObjectTrue = isObject && Object.keys(value).length;
  return isArrayTrue || isObjectTrue || !["null", "", "undefined"].includes(String(value));
}
function filterEmptyData(data) {
  var newFilterValue = {};
  Object.keys(data).forEach(function (key) {
    var item = data[key];
    if (isFilterValueExist(item)) {
      newFilterValue[key] = item;
    }
  });
  return newFilterValue;
}
function useFilter(props, context) {
  var primaryTableRef = ref(null);
  var _useConfig = useConfig("table"),
    t = _useConfig.t,
    globalConfig = _useConfig.globalConfig;
  var renderTNode = useTNodeDefault();
  var _toRefs = toRefs(props),
    filterValue = _toRefs.filterValue;
  var _useClassName = useClassName(),
    tableFilterClasses = _useClassName.tableFilterClasses,
    isFocusClass = _useClassName.isFocusClass;
  var isTableOverflowHidden = ref();
  var _useDefaultValue = useDefaultValue(filterValue, props.defaultFilterValue, props.onFilterChange, "filterValue"),
    _useDefaultValue2 = _slicedToArray(_useDefaultValue, 2),
    tFilterValue = _useDefaultValue2[0],
    setTFilterValue = _useDefaultValue2[1];
  var innerFilterValue = ref(tFilterValue.value);
  var hasEmptyCondition = computed(function () {
    var filterEmpty = filterEmptyData(tFilterValue.value || {});
    return !tFilterValue.value || !Object.keys(filterEmpty).length;
  });
  watch([tFilterValue], function (_ref) {
    var _ref2 = _slicedToArray(_ref, 1),
      val = _ref2[0];
    innerFilterValue.value = val;
  });
  function renderFirstFilterRow() {
    var _props$pagination, _props$data;
    if (hasEmptyCondition.value) return null;
    var defaultNode = createVNode("div", {
      "class": tableFilterClasses.result
    }, [createVNode("span", null, [t(globalConfig.value.searchResultText, {
      result: getFilterResultContent(),
      count: ((_props$pagination = props.pagination) === null || _props$pagination === void 0 ? void 0 : _props$pagination.total) || ((_props$data = props.data) === null || _props$data === void 0 ? void 0 : _props$data.length)
    })]), createVNode(Button, {
      "theme": "primary",
      "variant": "text",
      "onClick": onResetAll
    }, {
      "default": function _default() {
        return [globalConfig.value.clearFilterResultButtonText];
      }
    })]);
    var filterContent = renderTNode("filterRow");
    if (props.filterRow && !filterContent || props.filterRow === null) return null;
    return createVNode("div", {
      "class": tableFilterClasses.inner
    }, [filterContent || defaultNode]);
  }
  function getFilterResultContent() {
    var arr = [];
    props.columns.filter(function (col) {
      return col.filter;
    }).forEach(function (col) {
      var value = tFilterValue.value[col.colKey];
      if (col.filter.list && !["null", "", "undefined"].includes(String(value))) {
        var formattedValue = value instanceof Array ? value : [value];
        var label = [];
        col.filter.list.forEach(function (option) {
          if (formattedValue.includes(option.value)) {
            label.push(option.label);
          }
        });
        value = label.join();
      }
      if (isFilterValueExist(value)) {
        arr.push("".concat(col.title, "\uFF1A").concat(value));
      }
    });
    return arr.join("\uFF1B");
  }
  function onInnerFilterChange(val, column) {
    var filterValue2 = _objectSpread(_objectSpread({}, innerFilterValue.value), {}, _defineProperty({}, column.colKey, val));
    innerFilterValue.value = filterValue2;
    if (!column.filter.showConfirmAndReset) {
      emitFilterChange(filterValue2, column);
    }
  }
  function emitFilterChange(filterValue2, column) {
    var _props$onChange;
    setTFilterValue(filterValue2, {
      col: column
    });
    (_props$onChange = props.onChange) === null || _props$onChange === void 0 ? void 0 : _props$onChange.call(props, {
      filter: filterValue2
    }, {
      trigger: "filter"
    });
  }
  function onReset(column) {
    var _ref3, _column$filter$resetV;
    var filterValue2 = _objectSpread(_objectSpread({}, tFilterValue.value), {}, _defineProperty({}, column.colKey, (_ref3 = (_column$filter$resetV = column.filter.resetValue) !== null && _column$filter$resetV !== void 0 ? _column$filter$resetV : {
      single: "",
      multiple: [],
      input: ""
    }[column.filter.type]) !== null && _ref3 !== void 0 ? _ref3 : ""));
    emitFilterChange(filterValue2, column);
  }
  function onResetAll() {
    emitFilterChange({}, void 0);
  }
  function onConfirm(column) {
    emitFilterChange(innerFilterValue.value, column);
  }
  function renderFilterIcon(_ref4) {
    var _primaryTableRef$valu;
    var col = _ref4.col,
      colIndex = _ref4.colIndex;
    return createVNode(TableFilterController, {
      "column": col,
      "colIndex": colIndex,
      "filterIcon": props.filterIcon,
      "tFilterValue": tFilterValue.value,
      "innerFilterValue": innerFilterValue.value,
      "tableFilterClasses": tableFilterClasses,
      "isFocusClass": isFocusClass,
      "popupProps": col.filter.popupProps,
      "attach": props.attach,
      "onReset": onReset,
      "onConfirm": onConfirm,
      "onInnerFilterChange": onInnerFilterChange,
      "primaryTableElement": (_primaryTableRef$valu = primaryTableRef.value) === null || _primaryTableRef$valu === void 0 ? void 0 : _primaryTableRef$valu.$el,
      "onVisibleChange": onPopupVisibleChange
    }, {
      filterIcon: context.slots.filterIcon
    });
  }
  function setFilterPrimaryTableRef(primaryTableElement) {
    primaryTableRef.value = primaryTableElement;
  }
  function onPopupVisibleChange(visible) {
    if (visible && !isTableOverflowHidden.value) {
      isTableOverflowHidden.value = !visible;
    }
  }
  return {
    hasEmptyCondition: hasEmptyCondition,
    isTableOverflowHidden: isTableOverflowHidden,
    renderFilterIcon: renderFilterIcon,
    renderFirstFilterRow: renderFirstFilterRow,
    setFilterPrimaryTableRef: setFilterPrimaryTableRef
  };
}

export { useFilter as default };
//# sourceMappingURL=useFilter.mjs.map
