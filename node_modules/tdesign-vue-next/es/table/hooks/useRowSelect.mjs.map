{"version":3,"file":"useRowSelect.mjs","sources":["../../../src/table/hooks/useRowSelect.tsx"],"sourcesContent":["/**\n * 行选中相关功能：单选 + 多选\n */\nimport { computed, toRefs, h, ref, watch } from 'vue';\nimport intersection from 'lodash/intersection';\nimport get from 'lodash/get';\nimport isFunction from 'lodash/isFunction';\nimport useDefaultValue from '../../hooks/useDefaultValue';\nimport {\n  PrimaryTableCellParams,\n  PrimaryTableCol,\n  RowClassNameParams,\n  TableRowData,\n  TdPrimaryTableProps,\n} from '../type';\nimport { isRowSelectedDisabled } from '../../_common/js/table/utils';\nimport { TableClassName } from './useClassName';\nimport Checkbox from '../../checkbox';\nimport Radio from '../../radio';\nimport log from '../../_common/js/log';\n\nexport default function useRowSelect(\n  props: TdPrimaryTableProps,\n  tableSelectedClasses: TableClassName['tableSelectedClasses'],\n) {\n  const { selectedRowKeys, columns, rowKey, data, pagination, reserveSelectedRowOnPaginate } = toRefs(props);\n  const currentPaginateData = ref<TableRowData[]>(data.value);\n  const selectedRowClassNames = ref();\n  const [tSelectedRowKeys, setTSelectedRowKeys] = useDefaultValue(\n    selectedRowKeys,\n    props.defaultSelectedRowKeys || [],\n    props.onSelectChange,\n    'selectedRowKeys',\n  );\n  const selectedRowDataMap = ref(new Map<string | number, TableRowData>());\n  const selectColumn = computed(() => props.columns.find(({ type }) => ['multiple', 'single'].includes(type)));\n  const canSelectedRows = computed(() => {\n    const currentData = reserveSelectedRowOnPaginate.value ? data.value : currentPaginateData.value;\n    return currentData.filter((row, rowIndex): boolean => !isDisabled(row, rowIndex));\n  });\n  // 选中的行，和所有可以选择的行，交集，用于计算 isSelectedAll 和 isIndeterminate\n  const intersectionKeys = computed(() =>\n    intersection(\n      tSelectedRowKeys.value,\n      canSelectedRows.value.map((t) => get(t, props.rowKey || 'id')),\n    ),\n  );\n\n  const allowUncheck = computed(() => {\n    const singleSelectCol = columns.value.find((col) => col.type === 'single');\n    if (!singleSelectCol || !singleSelectCol.checkProps || !('allowUncheck' in singleSelectCol.checkProps))\n      return false;\n    return singleSelectCol.checkProps.allowUncheck;\n  });\n\n  watch(\n    [data, pagination, reserveSelectedRowOnPaginate],\n    () => {\n      if (reserveSelectedRowOnPaginate.value) return;\n      const { pageSize, current, defaultPageSize, defaultCurrent } = pagination.value;\n      const tPageSize = pageSize || defaultPageSize;\n      const tCurrent = current || defaultCurrent;\n      currentPaginateData.value = data.value.slice(tPageSize * (tCurrent - 1), tPageSize * tCurrent);\n    },\n    { immediate: true },\n  );\n\n  watch(\n    [data, columns, tSelectedRowKeys, selectColumn, rowKey],\n    () => {\n      const disabledRowFunc = (p: RowClassNameParams<TableRowData>) =>\n        selectColumn.value.disabled(p) ? tableSelectedClasses.disabled : '';\n      const disabledRowClass = selectColumn.value?.disabled ? disabledRowFunc : undefined;\n      const selected = new Set(tSelectedRowKeys.value);\n      const selectedRowClassFunc = ({ row }: RowClassNameParams<TableRowData>) => {\n        const rowId = get(row, props.rowKey || 'id');\n        return selected.has(rowId) ? tableSelectedClasses.selected : '';\n      };\n      const selectedRowClass = selected.size ? selectedRowClassFunc : undefined;\n      selectedRowClassNames.value = [disabledRowClass, selectedRowClass];\n    },\n    { immediate: true },\n  );\n\n  function isDisabled(row: Record<string, any>, rowIndex: number): boolean {\n    return isRowSelectedDisabled(selectColumn.value, row, rowIndex);\n  }\n\n  function getSelectedHeader() {\n    return () => {\n      const isIndeterminate =\n        intersectionKeys.value.length > 0 && intersectionKeys.value.length < canSelectedRows.value.length;\n      const isChecked =\n        intersectionKeys.value.length !== 0 &&\n        canSelectedRows.value.length !== 0 &&\n        intersectionKeys.value.length === canSelectedRows.value.length;\n      return (\n        <Checkbox\n          checked={isChecked}\n          indeterminate={isIndeterminate}\n          disabled={!canSelectedRows.value.length}\n          onChange={handleSelectAll}\n        />\n      );\n    };\n  }\n\n  function getRowSelectDisabledData(p: PrimaryTableCellParams<TableRowData>) {\n    const { col, row, rowIndex } = p;\n    const disabled: boolean = isFunction(col.disabled) ? col.disabled({ row, rowIndex }) : col.disabled;\n    const checkProps = isFunction(col.checkProps) ? col.checkProps({ row, rowIndex }) : col.checkProps;\n    return {\n      disabled: disabled || checkProps?.disabled,\n      checkProps,\n    };\n  }\n\n  function renderSelectCell(p: PrimaryTableCellParams<TableRowData>) {\n    const { col: column, row = {} } = p;\n    const checked = tSelectedRowKeys.value.includes(get(row, props.rowKey || 'id'));\n    const { disabled, checkProps } = getRowSelectDisabledData(p);\n    const selectBoxProps: Object = {\n      checked,\n      disabled,\n      ...checkProps,\n      // 兼容处理不同的参数\n      onClick: (e: MouseEvent | { e: MouseEvent }) => {\n        // 选中行功能中，点击 checkbox/radio 需阻止事件冒泡，避免触发不必要的 onRowClick\n        if (typeof e === 'object' && 'e' in e) {\n          e.e?.stopPropagation();\n        } else {\n          e?.stopPropagation();\n        }\n      },\n      onChange: () => handleSelectChange(row),\n    };\n    if (column.type === 'single') return <Radio {...selectBoxProps} />;\n    if (column.type === 'multiple') {\n      const isIndeterminate = props.indeterminateSelectedRowKeys?.length\n        ? props.indeterminateSelectedRowKeys.includes(get(row, props.rowKey))\n        : false;\n      return <Checkbox indeterminate={isIndeterminate} {...selectBoxProps} />;\n    }\n    return null;\n  }\n\n  function handleSelectChange(row: TableRowData = {}) {\n    let selectedRowKeys = [...tSelectedRowKeys.value];\n    const reRowKey = props.rowKey || 'id';\n    const id = get(row, reRowKey);\n    const selectedRowIndex = selectedRowKeys.indexOf(id);\n    const isExisted = selectedRowIndex !== -1;\n    if (selectColumn.value.type === 'multiple') {\n      isExisted ? selectedRowKeys.splice(selectedRowIndex, 1) : selectedRowKeys.push(id);\n    } else if (selectColumn.value.type === 'single') {\n      selectedRowKeys = isExisted && allowUncheck.value ? [] : [id];\n    } else {\n      log.warn('Table', '`column.type` must be one of `multiple` and `single`');\n      return;\n    }\n    setTSelectedRowKeys(selectedRowKeys, {\n      selectedRowData: selectedRowKeys.map((t) => selectedRowDataMap.value.get(t)),\n      currentRowKey: id,\n      currentRowData: row,\n      type: isExisted ? 'uncheck' : 'check',\n    });\n  }\n\n  function handleSelectAll(checked: boolean) {\n    const reRowKey = props.rowKey || 'id';\n    const canSelectedRowKeys = canSelectedRows.value.map((record) => get(record, reRowKey));\n    const disabledSelectedRowKeys = selectedRowKeys.value?.filter((id) => !canSelectedRowKeys.includes(id)) || [];\n    const allIds = checked ? [...disabledSelectedRowKeys, ...canSelectedRowKeys] : [...disabledSelectedRowKeys];\n    setTSelectedRowKeys(allIds, {\n      selectedRowData: checked ? allIds.map((t) => selectedRowDataMap.value.get(t)) : [],\n      type: checked ? 'check' : 'uncheck',\n      currentRowKey: 'CHECK_ALL_BOX',\n    });\n  }\n\n  function formatToRowSelectColumn(col: PrimaryTableCol) {\n    const isSelection = ['multiple', 'single'].includes(col.type);\n    if (!isSelection) return col;\n    return {\n      ...col,\n      width: col.width || 64,\n      className: [tableSelectedClasses.checkCell, col.className],\n      cell: (_: typeof h, p: PrimaryTableCellParams<TableRowData>) => renderSelectCell(p),\n      title: col.type === 'multiple' ? getSelectedHeader() : col.title,\n    };\n  }\n\n  const onInnerSelectRowClick: TdPrimaryTableProps['onRowClick'] = ({ row, index }) => {\n    const selectedColIndex = props.columns.findIndex((item) => item.colKey === 'row-select');\n    if (selectedColIndex === -1) return;\n    const { disabled } = getRowSelectDisabledData({\n      row,\n      rowIndex: index,\n      col: props.columns[selectedColIndex],\n      colIndex: selectedColIndex,\n    });\n    if (disabled) return;\n    handleSelectChange(row);\n  };\n\n  watch(\n    () => [[...data.value], rowKey],\n    () => {\n      for (let i = 0, len = data.value.length; i < len; i++) {\n        selectedRowDataMap.value.set(get(data.value[i], rowKey.value || 'id'), data.value[i]);\n      }\n    },\n    { immediate: true },\n  );\n\n  return {\n    selectedRowClassNames,\n    currentPaginateData,\n    setTSelectedRowKeys,\n    formatToRowSelectColumn,\n    onInnerSelectRowClick,\n  };\n}\n"],"names":["useRowSelect","props","tableSelectedClasses","_toRefs","toRefs","selectedRowKeys","columns","rowKey","data","pagination","reserveSelectedRowOnPaginate","currentPaginateData","ref","value","selectedRowClassNames","_useDefaultValue","useDefaultValue","defaultSelectedRowKeys","onSelectChange","_useDefaultValue2","_slicedToArray","tSelectedRowKeys","setTSelectedRowKeys","selectedRowDataMap","Map","selectColumn","computed","find","_ref","type","includes","canSelectedRows","currentData","filter","row","rowIndex","isDisabled","intersectionKeys","intersection","map","t","get","allowUncheck","singleSelectCol","col","checkProps","watch","_pagination$value","pageSize","current","defaultPageSize","defaultCurrent","tPageSize","tCurrent","slice","immediate","_selectColumn$value","disabledRowFunc","p","disabled","disabledRowClass","selected","Set","selectedRowClassFunc","_ref2","rowId","has","selectedRowClass","size","isRowSelectedDisabled","getSelectedHeader","isIndeterminate","length","isChecked","_createVNode","Checkbox","handleSelectAll","getRowSelectDisabledData","isFunction","renderSelectCell","column","_p$row","checked","_getRowSelectDisabled","selectBoxProps","_objectSpread","onClick","e","_typeof","_e$e","stopPropagation","onChange","handleSelectChange","Radio","_props$indeterminateS","indeterminateSelectedRowKeys","_mergeProps","arguments","undefined","_toConsumableArray","reRowKey","id","selectedRowIndex","indexOf","isExisted","splice","push","log","warn","selectedRowData","currentRowKey","currentRowData","_selectedRowKeys$valu","canSelectedRowKeys","record","disabledSelectedRowKeys","allIds","concat","formatToRowSelectColumn","isSelection","width","className","checkCell","cell","_","title","onInnerSelectRowClick","_ref3","index","selectedColIndex","findIndex","item","colKey","_getRowSelectDisabled2","colIndex","i","len","set"],"mappings":"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"}