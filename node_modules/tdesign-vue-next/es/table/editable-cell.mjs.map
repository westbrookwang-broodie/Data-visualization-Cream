{"version":3,"file":"editable-cell.mjs","sources":["../../src/table/editable-cell.tsx"],"sourcesContent":["import { computed, defineComponent, onMounted, PropType, ref, SetupContext, toRefs, watch } from 'vue';\nimport get from 'lodash/get';\nimport set from 'lodash/set';\nimport isFunction from 'lodash/isFunction';\nimport { Edit1Icon as TdEdit1Icon } from 'tdesign-icons-vue-next';\n\nimport {\n  TableRowData,\n  PrimaryTableCol,\n  PrimaryTableRowEditContext,\n  PrimaryTableRowValidateContext,\n  TdBaseTableProps,\n} from './type';\nimport { TableClassName } from './hooks/useClassName';\nimport { useGlobalIcon } from '../hooks/useGlobalIcon';\nimport { renderCell } from './tr';\nimport { validate } from '../form/form-model';\nimport log from '../_common/js/log';\nimport { AllValidateResult } from '../form/type';\nimport { on, off } from '../utils/dom';\nimport isObject from 'lodash/isObject';\nimport { usePrefixClass } from '../hooks/useConfig';\n\nexport interface OnEditableChangeContext<T> extends PrimaryTableRowEditContext<T> {\n  isEdit: boolean;\n  validateEdit: (trigger: 'self' | 'parent') => Promise<true | AllValidateResult[]>;\n}\n\nexport interface EditableCellProps {\n  row: TableRowData;\n  rowIndex: number;\n  col: PrimaryTableCol<TableRowData>;\n  colIndex: number;\n  oldCell: PrimaryTableCol<TableRowData>['cell'];\n  tableBaseClass?: TableClassName['tableBaseClass'];\n  /** 行编辑需要使用 editable。单元格编辑则无需使用，设置为 undefined */\n  editable?: boolean;\n  readonly?: boolean;\n  errors?: AllValidateResult[];\n  cellEmptyContent?: TdBaseTableProps['cellEmptyContent'];\n  /** 编辑数据时触发 */\n  onChange?: (context: PrimaryTableRowEditContext<TableRowData>) => void;\n  /** 校验结束后触发 */\n  onValidate?: (context: PrimaryTableRowValidateContext<TableRowData>) => void;\n  /** 校验规则发生变化时触发 */\n  onRuleChange?: (context: PrimaryTableRowEditContext<TableRowData>) => void;\n  /** 进入或退出编辑态时触发 */\n  onEditableChange?: (context: OnEditableChangeContext<TableRowData>) => void;\n}\n\nexport default defineComponent({\n  name: 'TableEditableCell',\n  props: {\n    row: Object as PropType<EditableCellProps['row']>,\n    rowIndex: Number,\n    col: Object as PropType<EditableCellProps['col']>,\n    colIndex: Number,\n    oldCell: [Function, String] as PropType<EditableCellProps['oldCell']>,\n    tableBaseClass: Object as PropType<EditableCellProps['tableBaseClass']>,\n    cellEmptyContent: [Function, String] as PropType<EditableCellProps['cellEmptyContent']>,\n    editable: {\n      type: Boolean,\n      default: undefined,\n    },\n    readonly: {\n      type: Boolean,\n    },\n    errors: {\n      type: Array as PropType<EditableCellProps['errors']>,\n      default: undefined,\n    },\n    onChange: Function as PropType<EditableCellProps['onChange']>,\n    onValidate: Function as PropType<EditableCellProps['onValidate']>,\n    onRuleChange: Function as PropType<EditableCellProps['onRuleChange']>,\n    onEditableChange: Function as PropType<EditableCellProps['onEditableChange']>,\n  },\n\n  setup(props: EditableCellProps, context: SetupContext) {\n    const { row, col } = toRefs(props);\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const tableEditableCellRef = ref(null);\n    const isEdit = ref(props.col.edit?.defaultEditable || false);\n    const editValue = ref();\n    const errorList = ref<AllValidateResult[]>();\n    const classPrefix = usePrefixClass();\n\n    const { Edit1Icon } = useGlobalIcon({ Edit1Icon: TdEdit1Icon });\n    const editOnListeners = computed(() => {\n      return col.value.edit?.on?.({ ...cellParams.value, editedRow: currentRow.value }) || {};\n    });\n\n    const cellParams = computed(() => ({\n      rowIndex: props.rowIndex,\n      colIndex: props.colIndex,\n      col: props.col,\n      row: props.row,\n    }));\n\n    const currentRow = computed(() => {\n      const newRow = { ...row.value };\n      set(newRow, col.value.colKey, editValue.value);\n      return newRow;\n    });\n\n    const cellNode = computed(() => {\n      const node = renderCell(\n        {\n          row: currentRow.value,\n          col: { ...col.value, cell: props.oldCell },\n          rowIndex: props.rowIndex,\n          colIndex: props.colIndex,\n        },\n        context.slots,\n        { cellEmptyContent: props.cellEmptyContent },\n      );\n      return node;\n    });\n\n    const componentProps = computed(() => {\n      const { edit } = col.value;\n      if (!edit) return {};\n      const editProps = isFunction(edit.props)\n        ? edit.props({\n            ...cellParams.value,\n            editedRow: currentRow.value,\n          })\n        : { ...edit.props };\n      // to remove warn: runtime-core.esm-bundler.js:38 [Vue warn]: Invalid prop: type check failed for prop \"onChange\". Expected Function, got Array\n      delete editProps.onChange;\n      delete editProps.value;\n      edit.abortEditOnEvent?.forEach((item) => {\n        delete editProps[item];\n      });\n      return editProps;\n    });\n\n    const isAbortEditOnChange = computed(() => {\n      const { edit } = col.value;\n      if (!edit) return false;\n      return Boolean(edit.abortEditOnEvent?.includes('onChange'));\n    });\n\n    const validateEdit = (trigger: 'self' | 'parent'): Promise<true | AllValidateResult[]> => {\n      return new Promise((resolve) => {\n        const params: PrimaryTableRowValidateContext<TableRowData> = {\n          result: [\n            {\n              ...cellParams.value,\n              errorList: [],\n              value: editValue.value,\n            },\n          ],\n          trigger,\n        };\n        const rules = isFunction(col.value.edit.rules) ? col.value.edit.rules(cellParams.value) : col.value.edit.rules;\n        if (!col.value.edit || !rules || !rules.length) {\n          props.onValidate?.(params);\n          resolve(true);\n          return;\n        }\n        validate(editValue.value, rules).then((result) => {\n          const list = result?.filter((t) => !t.result);\n          params.result[0].errorList = list;\n          props.onValidate?.(params);\n          if (!list || !list.length) {\n            errorList.value = [];\n            resolve(true);\n          } else {\n            errorList.value = list;\n            resolve(list);\n          }\n        });\n      });\n    };\n\n    const isSame = (a: any, b: any) => {\n      if (isObject(a) && isObject(b)) {\n        return JSON.stringify(a) === JSON.stringify(b);\n      }\n      return a === b;\n    };\n\n    const updateAndSaveAbort = (outsideAbortEvent: Function, eventName: string, ...args: any) => {\n      validateEdit('self').then((result) => {\n        if (result !== true) return;\n        const oldValue = get(row.value, col.value.colKey);\n        // 相同的值无需触发变化\n        if (!isSame(editValue.value, oldValue)) {\n          editValue.value = oldValue;\n          outsideAbortEvent?.(...args);\n        }\n        editOnListeners.value[eventName]?.(args[2]);\n        // 此处必须在事件执行完成后异步销毁编辑组件，否则会导致事件清除不及时引起的其他问题\n        const timer = setTimeout(() => {\n          isEdit.value = false;\n          errorList.value = [];\n          props.onEditableChange?.({\n            ...cellParams.value,\n            value: editValue.value,\n            editedRow: { ...props.row, [props.col.colKey]: editValue.value },\n            validateEdit,\n            isEdit: false,\n          });\n          clearTimeout(timer);\n        }, 0);\n      });\n    };\n\n    const listeners = computed<{ [key: string]: Function }>(() => {\n      const { edit } = col.value;\n      const isCellEditable = props.editable === undefined;\n      if (!isEdit.value || !isCellEditable) return;\n      if (!edit?.abortEditOnEvent?.length) return {};\n      // 自定义退出编辑态的事件\n      const tListeners = {};\n      const outsideAbortEvent = edit?.onEdited;\n      edit.abortEditOnEvent.forEach((itemEvent) => {\n        if (itemEvent === 'onChange') return;\n        tListeners[itemEvent] = (...args: any) => {\n          updateAndSaveAbort(\n            outsideAbortEvent,\n            itemEvent,\n            {\n              ...cellParams.value,\n              trigger: itemEvent,\n              newRowData: currentRow.value,\n            },\n            ...args,\n          );\n        };\n      });\n\n      return tListeners;\n    });\n\n    // 数据输入时触发\n    const onEditChange = (val: any, ...args: any) => {\n      editValue.value = val;\n      const params = {\n        ...cellParams.value,\n        value: val,\n        editedRow: { ...props.row, [props.col.colKey]: val },\n      };\n      props.onChange?.(params);\n      props.onRuleChange?.(params);\n      editOnListeners.value?.onChange?.(params);\n      const isCellEditable = props.editable === undefined;\n      if (isCellEditable && isAbortEditOnChange.value) {\n        const outsideAbortEvent = col.value.edit?.onEdited;\n        updateAndSaveAbort(\n          outsideAbortEvent,\n          'change',\n          {\n            ...cellParams.value,\n            trigger: 'onChange',\n            newRowData: currentRow.value,\n          },\n          ...args,\n        );\n      }\n      if (col.value.edit?.validateTrigger === 'change') {\n        validateEdit('self');\n      }\n    };\n\n    const documentClickHandler = (e: MouseEvent) => {\n      if (!col.value.edit || !col.value.edit.component) return;\n      if (!isEdit.value) return;\n      // @ts-ignore some browser is also only support e.path\n      const path = e.composedPath?.() || e.path || [];\n      const node = path.find((node: HTMLElement) => node.classList?.contains(`${classPrefix.value}-popup__content`));\n      if (node) return;\n      const outsideAbortEvent = col.value.edit.onEdited;\n      updateAndSaveAbort(outsideAbortEvent, '', {\n        ...cellParams.value,\n        trigger: 'document',\n        newRowData: currentRow.value,\n      });\n    };\n\n    const enterEdit = () => {\n      props.onEditableChange?.({\n        ...cellParams.value,\n        value: editValue.value,\n        editedRow: props.row,\n        isEdit: true,\n        validateEdit,\n      });\n    };\n\n    const onCellClick = (e: MouseEvent) => {\n      isEdit.value = true;\n      enterEdit();\n      e.stopPropagation();\n    };\n\n    onMounted(() => {\n      if (props.col.edit?.defaultEditable) {\n        enterEdit();\n      }\n    });\n\n    const cellValue = computed(() => get(row.value, col.value.colKey));\n\n    watch(\n      cellValue,\n      (cellValue) => {\n        editValue.value = cellValue;\n      },\n      { immediate: true },\n    );\n\n    watch(\n      isEdit,\n      (isEdit) => {\n        const isCellEditable = props.editable === undefined;\n        if (!col.value.edit || !col.value.edit.component || !isCellEditable) return;\n        if (isEdit) {\n          on(document, 'click', documentClickHandler);\n        } else {\n          off(document, 'click', documentClickHandler);\n        }\n      },\n      { immediate: true },\n    );\n\n    watch(\n      () => [props.editable, props.row, props.col, props.rowIndex, props.colIndex],\n      ([editable]: [boolean]) => {\n        // 退出编辑态时，恢复原始值，等待父组件传入新的 data 值\n        if (editable === false) {\n          editValue.value = cellValue.value;\n        } else if (editable === true) {\n          props.onRuleChange?.({\n            ...cellParams.value,\n            value: cellValue.value,\n            editedRow: row.value,\n          });\n        }\n      },\n      { immediate: true },\n    );\n\n    watch(\n      () => props.errors,\n      (errors) => {\n        errorList.value = errors;\n      },\n    );\n\n    return () => {\n      if (props.readonly) {\n        return cellNode.value;\n      }\n      // props.editable = undefined 表示由组件内部控制编辑状态\n      if ((props.editable === undefined && !isEdit.value) || props.editable === false) {\n        return (\n          <div class={props.tableBaseClass.cellEditable} onClick={onCellClick}>\n            {cellNode.value}\n            {col.value.edit?.showEditIcon !== false && <Edit1Icon />}\n          </div>\n        );\n      }\n      const Component = col.value.edit?.component;\n      if (!Component) {\n        log.error('Table', 'edit.component is required.');\n        return null;\n      }\n      const errorMessage = errorList.value?.[0]?.message;\n      const tmpEditOnListeners = { ...editOnListeners.value };\n      delete tmpEditOnListeners.onChange;\n      // remove conflict events\n      if (col.value.edit?.abortEditOnEvent?.length) {\n        col.value.edit.abortEditOnEvent.forEach((onEventName) => {\n          if (tmpEditOnListeners[onEventName]) {\n            delete tmpEditOnListeners[onEventName];\n          }\n        });\n      }\n      return (\n        <div\n          class={props.tableBaseClass.cellEditWrap}\n          onClick={(e: MouseEvent) => {\n            e.stopPropagation();\n          }}\n          ref=\"tableEditableCellRef\"\n        >\n          <Component\n            status={errorMessage ? errorList.value?.[0]?.type || 'error' : undefined}\n            tips={errorMessage}\n            {...componentProps.value}\n            {...listeners.value}\n            {...tmpEditOnListeners}\n            value={editValue.value}\n            onChange={onEditChange}\n          />\n        </div>\n      );\n    };\n  },\n});\n"],"names":["defineComponent","name","props","row","Object","rowIndex","Number","col","colIndex","oldCell","Function","String","tableBaseClass","cellEmptyContent","editable","type","Boolean","readonly","errors","Array","onChange","onValidate","onRuleChange","onEditableChange","setup","context","_props$col$edit","_toRefs","toRefs","tableEditableCellRef","ref","isEdit","edit","defaultEditable","editValue","errorList","classPrefix","usePrefixClass","_useGlobalIcon","useGlobalIcon","Edit1Icon","TdEdit1Icon","editOnListeners","computed","_col$value$edit","_col$value$edit$on","value","on","call","_objectSpread","cellParams","editedRow","currentRow","newRow","set","colKey","cellNode","node","renderCell","cell","slots","componentProps","_edit$abortEditOnEven","editProps","isFunction","abortEditOnEvent","forEach","item","isAbortEditOnChange","_edit$abortEditOnEven2","includes","validateEdit","trigger","Promise","resolve","params","result","rules","length","_props$onValidate","validate","then","_props$onValidate2","list","filter","t","isSame","a","b","isObject","JSON","stringify","updateAndSaveAbort","outsideAbortEvent","eventName","_len","arguments","args","_key","_editOnListeners$valu","_editOnListeners$valu2","oldValue","get","apply","timer","setTimeout","_props$onEditableChan","_defineProperty","clearTimeout","listeners","_edit$abortEditOnEven3","isCellEditable","tListeners","onEdited","itemEvent","_len2","_key2","newRowData","concat","onEditChange","val","_props$onChange","_props$onRuleChange","_editOnListeners$valu3","_editOnListeners$valu4","_col$value$edit3","_col$value$edit2","_len3","_key3","validateTrigger","documentClickHandler","e","_e$composedPath","component","path","composedPath","find","classList","_node2$classList","contains","enterEdit","_props$onEditableChan2","onCellClick","stopPropagation","onMounted","_props$col$edit2","cellValue","watch","immediate","document","off","_ref","_ref2","_slicedToArray","_props$onRuleChange2","_col$value$edit5","_errorList$value","_errorList$value$","_col$value$edit6","_col$value$edit6$abor","_errorList$value2","_errorList$value2$","_col$value$edit4","_createVNode","cellEditable","showEditIcon","Component","log","error","errorMessage","message","tmpEditOnListeners","onEventName","cellEditWrap","onClick","_mergeProps"],"mappings":"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"}