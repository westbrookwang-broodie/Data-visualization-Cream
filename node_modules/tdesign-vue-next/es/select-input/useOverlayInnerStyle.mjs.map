{"version":3,"file":"useOverlayInnerStyle.mjs","sources":["../../src/select-input/useOverlayInnerStyle.ts"],"sourcesContent":["import { ref, toRefs, computed, CSSProperties } from 'vue';\nimport isObject from 'lodash/isObject';\nimport isFunction from 'lodash/isFunction';\nimport { TdSelectInputProps } from './type';\nimport { TdPopupProps, PopupVisibleChangeContext } from '../popup';\nimport { useFormDisabled } from '../form/hooks';\n\nexport type overlayInnerStyleProps = Pick<\n  TdSelectInputProps,\n  'popupProps' | 'autoWidth' | 'readonly' | 'onPopupVisibleChange' | 'disabled' | 'allowInput' | 'popupVisible'\n>;\n\n// 单位：px\nconst MAX_POPUP_WIDTH = 1000;\n\nexport default function useOverlayInnerStyle(props: overlayInnerStyleProps) {\n  const { popupProps, autoWidth } = toRefs(props);\n  const innerPopupVisible = ref(false);\n  const disable = useFormDisabled();\n\n  const matchWidthFunc = (triggerElement: HTMLElement, popupElement: HTMLElement) => {\n    // 避免因滚动条出现文本省略，预留宽度 8\n    const SCROLLBAR_WIDTH = popupElement.scrollHeight > popupElement.offsetHeight ? 8 : 0;\n    const width =\n      popupElement.offsetWidth + SCROLLBAR_WIDTH >= triggerElement.offsetWidth\n        ? popupElement.offsetWidth\n        : triggerElement.offsetWidth;\n    let otherOverlayInnerStyle: CSSProperties = {};\n    if (\n      popupProps.value &&\n      typeof popupProps.value.overlayInnerStyle === 'object' &&\n      !popupProps.value.overlayInnerStyle.width\n    ) {\n      otherOverlayInnerStyle = popupProps.value.overlayInnerStyle;\n    }\n    return {\n      width: `${Math.min(width, MAX_POPUP_WIDTH)}px`,\n      ...otherOverlayInnerStyle,\n    };\n  };\n\n  const onInnerPopupVisibleChange = (visible: boolean, context: PopupVisibleChangeContext) => {\n    if (disable.value || props.readonly) return;\n    // 如果点击触发元素（输入框）且为可输入状态，则继续显示下拉框\n    const newVisible = context.trigger === 'trigger-element-click' && props.allowInput ? true : visible;\n    // 重复点击触发元素时，下拉框展示状态不变，不重复触发事件\n    if (props.popupVisible !== newVisible) {\n      innerPopupVisible.value = newVisible;\n      props.onPopupVisibleChange?.(newVisible, context);\n    }\n  };\n\n  const tOverlayInnerStyle = computed(() => {\n    let result: TdPopupProps['overlayInnerStyle'] = {};\n    const overlayInnerStyle = popupProps.value?.overlayInnerStyle || {};\n    if (isFunction(overlayInnerStyle) || (isObject(overlayInnerStyle) && overlayInnerStyle.width)) {\n      result = overlayInnerStyle;\n    } else if (!autoWidth.value) {\n      result = matchWidthFunc;\n    }\n    return result;\n  });\n\n  return {\n    tOverlayInnerStyle,\n    innerPopupVisible,\n    onInnerPopupVisibleChange,\n  };\n}\n"],"names":["MAX_POPUP_WIDTH","useOverlayInnerStyle","props","_toRefs","toRefs","popupProps","autoWidth","innerPopupVisible","ref","disable","useFormDisabled","matchWidthFunc","triggerElement","popupElement","SCROLLBAR_WIDTH","scrollHeight","offsetHeight","width","offsetWidth","otherOverlayInnerStyle","value","_typeof","overlayInnerStyle","_objectSpread","concat","Math","min","onInnerPopupVisibleChange","visible","context","readonly","newVisible","trigger","allowInput","popupVisible","_props$onPopupVisible","onPopupVisibleChange","call","tOverlayInnerStyle","computed","_popupProps$value","result","isFunction","isObject"],"mappings":"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"}