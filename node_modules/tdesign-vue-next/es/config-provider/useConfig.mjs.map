{"version":3,"file":"useConfig.mjs","sources":["../../src/config-provider/useConfig.tsx"],"sourcesContent":["import { computed, h, inject, getCurrentInstance, ref, provide } from 'vue';\nimport isFunction from 'lodash/isFunction';\nimport cloneDeep from 'lodash/cloneDeep';\nimport isString from 'lodash/isString';\n\nimport { defaultGlobalConfig, configProviderInjectKey, mergeWith } from './context';\nimport { GlobalConfigProvider } from './type';\nimport type { ConfigProviderProps } from './config-provider';\n\n// 这是为了解决在非component里调用useConfig hook时发出的警告\n// https://github.com/Tencent/tdesign-vue-next/issues/2025\nconst globalConfigCopy = ref<GlobalConfigProvider>();\n\nexport * from './type';\n\n/**\n * component globalConfig\n * @param componentName\n * @returns {t, globalConfig}\n * useConfig('pagination')\n */\nexport function useConfig<T extends keyof GlobalConfigProvider>(componentName?: T) {\n  const injectGlobalConfig = getCurrentInstance() ? inject(configProviderInjectKey, null) : globalConfigCopy;\n  const mergedGlobalConfig = computed(() => injectGlobalConfig?.value || (defaultGlobalConfig as GlobalConfigProvider));\n  const globalConfig = computed(() => mergedGlobalConfig.value[componentName]);\n\n  const classPrefix = computed(() => {\n    return mergedGlobalConfig.value.classPrefix;\n  });\n\n  // 处理正则表达式\n  const t = function <T>(pattern: T, ...args: any[]) {\n    const [data] = args;\n    if (isString(pattern)) {\n      if (!data) return pattern;\n      const regular = /\\{\\s*([\\w-]+)\\s*\\}/g;\n      const translated = pattern.replace(regular, (match, key) => {\n        if (data) {\n          return String(data[key]);\n        }\n        return '';\n      });\n      return translated;\n    }\n    if (isFunction(pattern)) {\n      // 重要：组件的渲染必须存在参数 h，不能移除\n      if (!args.length) return pattern(h);\n      return pattern(...args);\n    }\n    return '';\n  };\n\n  return {\n    t,\n    global: globalConfig,\n    globalConfig,\n    classPrefix,\n  };\n}\n\n/**\n * provide globalConfig\n * @param {ConfigProviderProps} props\n * @returns {ComputedRef<GlobalConfigProvider>}\n */\nexport const provideConfig = (props: ConfigProviderProps) => {\n  const defaultData = cloneDeep(defaultGlobalConfig);\n  const mergedGlobalConfig = computed(() => mergeWith(defaultData, props.globalConfig));\n\n  provide(configProviderInjectKey, mergedGlobalConfig);\n\n  if (!globalConfigCopy.value) {\n    globalConfigCopy.value = mergedGlobalConfig.value;\n  }\n\n  return mergedGlobalConfig;\n};\n"],"names":["globalConfigCopy","ref","useConfig","componentName","injectGlobalConfig","getCurrentInstance","inject","configProviderInjectKey","mergedGlobalConfig","computed","value","defaultGlobalConfig","globalConfig","classPrefix","t","pattern","_len","arguments","length","args","Array","_key","data","isString","regular","translated","replace","match","key","String","isFunction","h","apply","global","provideConfig","props","defaultData","cloneDeep","mergeWith","provide"],"mappings":"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"}