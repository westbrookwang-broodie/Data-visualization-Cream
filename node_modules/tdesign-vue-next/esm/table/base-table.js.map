{"version":3,"file":"base-table.js","sources":["../../src/table/base-table.tsx"],"sourcesContent":["import { computed, defineComponent, SetupContext, ref, nextTick, PropType, watch, onMounted } from 'vue';\nimport pick from 'lodash/pick';\nimport props from './base-table-props';\nimport useTableHeader from './hooks/useTableHeader';\nimport useColumnResize from './hooks/useColumnResize';\nimport useFixed from './hooks/useFixed';\nimport usePagination from './hooks/usePagination';\nimport useVirtualScrollNew from '../hooks/useVirtualScrollNew';\nimport useAffix from './hooks/useAffix';\nimport Loading from '../loading';\nimport TBody, { extendTableProps } from './tbody';\nimport { BaseTableProps } from './interface';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport useStyle, { formatCSSUnit } from './hooks/useStyle';\nimport useClassName from './hooks/useClassName';\nimport { useConfig } from '../hooks/useConfig';\nimport { Affix } from '../affix';\nimport { ROW_LISTENERS } from './tr';\nimport THead from './thead';\nimport TFoot from './tfoot';\nimport { getAffixProps } from './utils';\nimport { Styles } from '../common';\nimport { getIEVersion } from '../_common/js/utils/helper';\nimport { BaseTableInstanceFunctions } from './type';\n\nexport const BASE_TABLE_EVENTS = ['page-change', 'cell-click', 'scroll', 'scrollX', 'scrollY'];\nexport const BASE_TABLE_ALL_EVENTS = ROW_LISTENERS.map((t) => `row-${t}`).concat(BASE_TABLE_EVENTS);\n\nexport interface TableListeners {\n  [key: string]: Function;\n}\n\nexport default defineComponent({\n  name: 'TBaseTable',\n\n  props: {\n    ...props,\n    /**\n     * 渲染展开行，非公开属性，请勿在业务中使用\n     */\n    renderExpandedRow: Function as PropType<BaseTableProps['renderExpandedRow']>,\n    onLeafColumnsChange: Function as PropType<BaseTableProps['onLeafColumnsChange']>,\n    thDraggable: Boolean,\n  },\n\n  setup(props: BaseTableProps, context: SetupContext) {\n    const renderTNode = useTNodeJSX();\n    const tableRef = ref<HTMLDivElement>();\n    const tableElmRef = ref<HTMLTableElement>();\n    const tableBodyRef = ref<HTMLTableElement>();\n    const bottomContentRef = ref<HTMLDivElement>();\n    const tableFootHeight = ref(0);\n    const { classPrefix, virtualScrollClasses, tableLayoutClasses, tableBaseClass, tableColFixedClasses } =\n      useClassName();\n    // 表格基础样式类\n    const { tableClasses, sizeClassNames, tableContentStyles, tableElementStyles } = useStyle(props);\n    const { globalConfig } = useConfig('table');\n    const { isMultipleHeader, spansAndLeafNodes, thList } = useTableHeader(props);\n    const finalColumns = computed(() => spansAndLeafNodes.value?.leafColumns || props.columns);\n\n    // 吸附相关ref 用来做视图resize后重新定位\n    const paginationAffixRef = ref();\n    const horizontalScrollAffixRef = ref();\n    const headerTopAffixRef = ref();\n    const footerBottomAffixRef = ref();\n\n    // 固定表头和固定列逻辑\n    const {\n      scrollbarWidth,\n      virtualScrollHeaderPos,\n      tableWidth,\n      tableElmWidth,\n      tableContentRef,\n      isFixedHeader,\n      isWidthOverflow,\n      isFixedColumn,\n      thWidthList,\n      showColumnShadow,\n      rowAndColFixedPosition,\n      setData,\n      refreshTable,\n      setTableElmWidth,\n      emitScrollEvent,\n      setUseFixedTableElmRef,\n      updateColumnFixedShadow,\n      getThWidthList,\n      updateThWidthList,\n      addTableResizeObserver,\n      updateTableAfterColumnResize,\n    } = useFixed(props, context, finalColumns, {\n      paginationAffixRef,\n      horizontalScrollAffixRef,\n      headerTopAffixRef,\n      footerBottomAffixRef,\n    });\n\n    // 1. 表头吸顶；2. 表尾吸底；3. 底部滚动条吸底；4. 分页器吸底\n    const {\n      affixHeaderRef,\n      affixFooterRef,\n      horizontalScrollbarRef,\n      paginationRef,\n      showAffixHeader,\n      showAffixFooter,\n      showAffixPagination,\n      onHorizontalScroll,\n      setTableContentRef,\n      updateAffixHeaderOrFooter,\n    } = useAffix(props);\n\n    const { dataSource, innerPagination, isPaginateData, renderPagination } = usePagination(props, context);\n\n    // 列宽拖拽逻辑\n    const columnResizeParams = useColumnResize({\n      isWidthOverflow,\n      tableContentRef,\n      showColumnShadow,\n      getThWidthList,\n      updateThWidthList,\n      setTableElmWidth,\n      updateTableAfterColumnResize,\n    });\n    const { resizeLineRef, resizeLineStyle, setEffectColMap } = columnResizeParams;\n\n    const dynamicBaseTableClasses = computed(() => [\n      tableClasses.value,\n      {\n        [tableBaseClass.headerFixed]: isFixedHeader.value,\n        [tableBaseClass.columnFixed]: isFixedColumn.value,\n        [tableBaseClass.widthOverflow]: isWidthOverflow.value,\n        [tableBaseClass.multipleHeader]: isMultipleHeader.value,\n        [tableColFixedClasses.leftShadow]: showColumnShadow.left,\n        [tableColFixedClasses.rightShadow]: showColumnShadow.right,\n        [tableBaseClass.columnResizableTable]: props.resizable,\n      },\n    ]);\n\n    const tableElmClasses = computed(() => [[tableLayoutClasses[props.tableLayout]]]);\n\n    const showRightDivider = computed(\n      () =>\n        props.bordered &&\n        isFixedHeader.value &&\n        ((isMultipleHeader.value && isWidthOverflow.value) || !isMultipleHeader.value),\n    );\n\n    const dividerBottom = computed(() => {\n      if (!props.bordered) return 0;\n      const bottomRect = bottomContentRef.value?.getBoundingClientRect();\n      const paginationRect = paginationRef.value?.getBoundingClientRect();\n      return (bottomRect?.height || 0) + (paginationRect?.height || 0);\n    });\n\n    watch(tableElmRef, () => {\n      setUseFixedTableElmRef(tableElmRef.value);\n    });\n\n    watch(\n      () => [props.data, dataSource],\n      () => {\n        setData(isPaginateData.value ? dataSource.value : props.data);\n      },\n    );\n\n    watch(\n      spansAndLeafNodes,\n      () => {\n        props.onLeafColumnsChange?.(spansAndLeafNodes.value.leafColumns);\n        setEffectColMap(spansAndLeafNodes.value.leafColumns, null);\n      },\n      { immediate: true },\n    );\n\n    const onFixedChange = () => {\n      nextTick(() => {\n        onHorizontalScroll();\n        updateAffixHeaderOrFooter();\n      });\n    };\n\n    // 虚拟滚动相关数据\n    const virtualScrollParams = computed(() => ({\n      data: props.data,\n      scroll: props.scroll,\n    }));\n    const virtualConfig = useVirtualScrollNew(tableContentRef, virtualScrollParams);\n\n    let lastScrollY = -1;\n    const onInnerVirtualScroll = (e: WheelEvent) => {\n      const target = (e.target || e.srcElement) as HTMLElement;\n      const top = target.scrollTop;\n      // 排除横向滚动触发的纵向虚拟滚动计算\n      if (lastScrollY !== top) {\n        virtualConfig.isVirtualScroll.value && virtualConfig.handleScroll();\n      } else {\n        lastScrollY = -1;\n        updateColumnFixedShadow(target);\n      }\n      lastScrollY = top;\n      emitScrollEvent(e);\n    };\n\n    // used for top margin\n    const getTFootHeight = () => {\n      if (!tableElmRef.value) return;\n      tableFootHeight.value = tableElmRef.value.querySelector('tfoot')?.getBoundingClientRect().height;\n    };\n\n    // 对外暴露方法，修改时需谨慎（expose）\n    const scrollColumnIntoView: BaseTableInstanceFunctions['scrollColumnIntoView'] = (colKey: string) => {\n      if (!tableContentRef.value) return;\n      const thDom = tableContentRef.value.querySelector(`th[data-colkey=\"${colKey}\"]`);\n      const fixedThDom = tableContentRef.value.querySelectorAll('th.t-table__cell--fixed-left');\n      let totalWidth = 0;\n      for (let i = 0, len = fixedThDom.length; i < len; i++) {\n        totalWidth += fixedThDom[i].getBoundingClientRect().width;\n      }\n      const domRect = thDom.getBoundingClientRect();\n      const contentRect = tableContentRef.value.getBoundingClientRect();\n      const distance = domRect.left - contentRect.left - totalWidth;\n      tableContentRef.value.scrollTo({ left: distance, behavior: 'smooth' });\n    };\n\n    watch(tableContentRef, () => {\n      setTableContentRef(tableContentRef.value);\n    });\n\n    watch(tableElmRef, getTFootHeight);\n\n    watch(tableRef, (tableRef) => {\n      addTableResizeObserver(tableRef);\n    });\n\n    onMounted(() => {\n      getTFootHeight();\n      setTableContentRef(tableContentRef.value);\n      addTableResizeObserver(tableRef.value);\n    });\n\n    return {\n      thList,\n      classPrefix,\n      innerPagination,\n      globalConfig,\n      tableFootHeight,\n      virtualScrollHeaderPos,\n      tableWidth,\n      tableElmWidth,\n      tableRef,\n      tableElmRef,\n      sizeClassNames,\n      tableBaseClass,\n      spansAndLeafNodes,\n      dynamicBaseTableClasses,\n      tableContentStyles,\n      tableElementStyles,\n      dividerBottom,\n      virtualScrollClasses,\n      tableLayoutClasses,\n      tableElmClasses,\n      tableContentRef,\n      isFixedHeader,\n      isWidthOverflow,\n      isFixedColumn,\n      rowAndColFixedPosition,\n      showColumnShadow,\n      thWidthList,\n      isPaginateData,\n      dataSource,\n      affixHeaderRef,\n      affixFooterRef,\n      bottomContentRef,\n      paginationRef,\n      showAffixHeader,\n      showAffixFooter,\n      scrollbarWidth,\n      isMultipleHeader,\n      showRightDivider,\n      resizeLineRef,\n      resizeLineStyle,\n      columnResizeParams,\n      horizontalScrollbarRef,\n      tableBodyRef,\n      virtualConfig,\n      showAffixPagination,\n      scrollToElement: virtualConfig.scrollToElement,\n      renderPagination,\n      renderTNode,\n      onFixedChange,\n      onHorizontalScroll,\n      updateAffixHeaderOrFooter,\n      onInnerVirtualScroll,\n      refreshTable,\n      scrollColumnIntoView,\n      paginationAffixRef,\n      horizontalScrollAffixRef,\n      headerTopAffixRef,\n      footerBottomAffixRef,\n    };\n  },\n\n  render() {\n    const { rowAndColFixedPosition } = this;\n    const data = this.isPaginateData ? this.dataSource : this.data;\n    const columns = this.spansAndLeafNodes?.leafColumns || this.columns;\n\n    const columnResizable = computed(() => props.allowResizeColumnWidth ?? props.resizable);\n\n    const defaultColWidth = this.tableLayout === 'fixed' && this.isWidthOverflow ? '100px' : undefined;\n\n    const renderColGroup = (isAffixHeader = true) => (\n      <colgroup>\n        {columns.map((col) => {\n          const style: Styles = {\n            width:\n              formatCSSUnit(\n                (isAffixHeader || columnResizable ? this.thWidthList[col.colKey] : undefined) || col.width,\n              ) || defaultColWidth,\n          };\n          if (col.minWidth) {\n            style.minWidth = formatCSSUnit(col.minWidth);\n          }\n          // 没有设置任何宽度的场景下，需要保留表格正常显示的最小宽度，否则会出现因宽度过小的抖动问题\n          if (!style.width && !col.minWidth && this.tableLayout === 'fixed') {\n            style.minWidth = '80px';\n          }\n          return <col key={col.colKey} style={style}></col>;\n        })}\n      </colgroup>\n    );\n\n    const renderAffixedHeader = () => {\n      if (this.showHeader === false) return null;\n      return (\n        !!(this.virtualConfig.isVirtualScroll.value || this.headerAffixedTop) &&\n        (this.headerAffixedTop ? (\n          <Affix\n            offsetTop={0}\n            {...getAffixProps(this.headerAffixedTop)}\n            onFixedChange={this.onFixedChange}\n            ref=\"headerTopAffixRef\"\n          >\n            {affixHeaderWithWrap}\n          </Affix>\n        ) : (\n          this.isFixedHeader && affixHeaderWithWrap\n        ))\n      );\n    };\n\n    const renderAffixedHorizontalScrollbar = () => (\n      <Affix\n        offsetBottom={0}\n        {...getAffixProps(this.horizontalScrollAffixedBottom)}\n        style={{ marginTop: `-${this.scrollbarWidth * 2}px` }}\n        horizontalScrollAffixedBottom\n        ref=\"horizontalScrollAffixRef\"\n      >\n        <div\n          ref=\"horizontalScrollbarRef\"\n          class={['scrollbar', this.tableBaseClass.obviousScrollbar]}\n          style={{\n            width: `${this.tableWidth}px`,\n            overflow: 'auto',\n            opacity: Number(this.showAffixFooter),\n          }}\n        >\n          <div style={{ width: `${this.tableElmWidth}px`, height: '5px' }}></div>\n        </div>\n      </Affix>\n    );\n\n    const headProps = {\n      isFixedHeader: this.isFixedHeader,\n      rowAndColFixedPosition: this.rowAndColFixedPosition,\n      isMultipleHeader: this.isMultipleHeader,\n      bordered: this.bordered,\n      maxHeight: this.maxHeight,\n      height: this.height,\n      spansAndLeafNodes: this.spansAndLeafNodes,\n      thList: this.thList,\n      thWidthList: this.thWidthList,\n      resizable: this.resizable,\n      columnResizeParams: this.columnResizeParams,\n      classPrefix: this.classPrefix,\n      ellipsisOverlayClassName: this.size !== 'medium' ? this.sizeClassNames[this.size] : '',\n      attach: this.attach,\n      showColumnShadow: this.showColumnShadow,\n      thDraggable: this.thDraggable,\n    };\n\n    /**\n     * Affixed Header\n     */\n    // IE 浏览器需要遮挡 header 吸顶滚动条，要减去 getBoundingClientRect.height 的滚动条高度 4 像素\n    const IEHeaderWrap = getIEVersion() <= 11 ? 4 : 0;\n    const barWidth = this.isWidthOverflow ? this.scrollbarWidth : 0;\n    const affixHeaderHeight = (this.affixHeaderRef?.getBoundingClientRect().height || 0) - IEHeaderWrap;\n    const affixHeaderWrapHeight = affixHeaderHeight - barWidth;\n    // 两类场景：1. 虚拟滚动，永久显示表头，直到表头消失在可视区域； 2. 表头吸顶，根据滚动情况判断是否显示吸顶表头\n    const headerOpacity = props.headerAffixedTop ? Number(this.showAffixHeader) : 1;\n    const affixHeaderWrapHeightStyle = {\n      width: `${this.tableWidth}px`,\n      height: `${affixHeaderWrapHeight}px`,\n      opacity: headerOpacity,\n    };\n    // 多级表头左边线缺失\n    const affixedLeftBorder = this.bordered ? 1 : 0;\n    const affixedHeader = Boolean(\n      (this.headerAffixedTop || this.virtualConfig.isVirtualScroll.value) && this.tableWidth,\n    ) && (\n      <div\n        ref=\"affixHeaderRef\"\n        style={{\n          width: `${this.tableWidth - affixedLeftBorder}px`,\n          opacity: Number(this.showAffixHeader),\n        }}\n        class={[\n          'scrollbar',\n          {\n            [this.tableBaseClass.affixedHeaderElm]: this.headerAffixedTop || this.virtualConfig.isVirtualScroll.value,\n          },\n        ]}\n      >\n        <table class={this.tableElmClasses} style={{ ...this.tableElementStyles, width: `${this.tableElmWidth}px` }}>\n          {renderColGroup(true)}\n          <THead v-slots={this.$slots} {...headProps} />\n        </table>\n      </div>\n    );\n\n    // 添加这一层，是为了隐藏表头的横向滚动条。如果以后不需要照顾 IE 10 以下的项目，则可直接移除这一层\n    // 彼时，可更为使用 CSS 样式中的 .hideScrollbar()\n    const affixHeaderWithWrap = (\n      <div class={this.tableBaseClass.affixedHeaderWrap} style={affixHeaderWrapHeightStyle}>\n        {affixedHeader}\n      </div>\n    );\n\n    /**\n     * Affixed Footer\n     */\n    let marginScrollbarWidth = this.isWidthOverflow ? this.scrollbarWidth : 0;\n    if (this.bordered) {\n      marginScrollbarWidth += 1;\n    }\n    // Hack: Affix 组件，marginTop 临时使用 负 margin 定位位置\n    const affixedFooter = Boolean(this.footerAffixedBottom && this.footData?.length && this.tableWidth) && (\n      <Affix\n        class={this.tableBaseClass.affixedFooterWrap}\n        onFixedChange={this.onFixedChange}\n        offsetBottom={marginScrollbarWidth || 0}\n        {...getAffixProps(this.footerAffixedBottom)}\n        style={{ marginTop: `${-1 * (this.tableFootHeight + marginScrollbarWidth)}px` }}\n        ref=\"footerBottomAffixRef\"\n      >\n        <div\n          ref=\"affixFooterRef\"\n          style={{ width: `${this.tableWidth - affixedLeftBorder}px`, opacity: Number(this.showAffixFooter) }}\n          class={['scrollbar', { [this.tableBaseClass.affixedFooterElm]: this.footerAffixedBottom || this.isVirtual }]}\n        >\n          <table class={this.tableElmClasses} style={{ ...this.tableElementStyles, width: `${this.tableElmWidth}px` }}>\n            {/* 此处和 Vue2 不同，Vue3 里面必须每一处单独写 <colgroup> */}\n            {renderColGroup(true)}\n            <TFoot\n              rowKey={this.rowKey}\n              v-slots={this.$slots}\n              isFixedHeader={this.isFixedHeader}\n              rowAndColFixedPosition={rowAndColFixedPosition}\n              footData={this.footData}\n              columns={columns}\n              rowAttributes={this.rowAttributes}\n              rowClassName={this.rowClassName}\n              thWidthList={this.thWidthList}\n              footerSummary={this.footerSummary}\n              rowspanAndColspanInFooter={this.rowspanAndColspanInFooter}\n            ></TFoot>\n          </table>\n        </div>\n      </Affix>\n    );\n\n    const translate = `translate(0, ${this.virtualConfig.scrollHeight.value}px)`;\n    const virtualStyle = {\n      transform: translate,\n      '-ms-transform': translate,\n      '-moz-transform': translate,\n      '-webkit-transform': translate,\n    };\n    const { virtualConfig } = this;\n    const tableBodyProps = {\n      classPrefix: this.classPrefix,\n      ellipsisOverlayClassName: this.size !== 'medium' ? this.sizeClassNames[this.size] : '',\n      rowAndColFixedPosition,\n      showColumnShadow: this.showColumnShadow,\n      data: virtualConfig.isVirtualScroll.value ? virtualConfig.visibleData.value : data,\n      virtualConfig: this.virtualConfig,\n      columns: this.spansAndLeafNodes.leafColumns,\n      tableElm: this.tableRef,\n      tableWidth: this.tableWidth,\n      isWidthOverflow: this.isWidthOverflow,\n      scroll: this.scroll,\n      cellEmptyContent: this.cellEmptyContent,\n      tableContentElm: this.tableContentRef,\n      handleRowMounted: this.virtualConfig.handleRowMounted,\n      renderExpandedRow: this.renderExpandedRow,\n      ...pick(this.$props, extendTableProps),\n      // 内部使用分页信息必须取 innerPagination\n      pagination: this.innerPagination,\n      attach: this.attach,\n    };\n    const tableContent = (\n      <div\n        ref=\"tableContentRef\"\n        class={this.tableBaseClass.content}\n        style={this.tableContentStyles}\n        onScroll={this.onInnerVirtualScroll}\n      >\n        {this.virtualConfig.isVirtualScroll.value && (\n          <div class={this.virtualScrollClasses.cursor} style={virtualStyle} />\n        )}\n\n        <table\n          ref=\"tableElmRef\"\n          class={this.tableElmClasses}\n          style={{\n            ...this.tableElementStyles,\n            width:\n              this.resizable && this.isWidthOverflow && this.tableElmWidth\n                ? `${this.tableElmWidth}px`\n                : this.tableElementStyles.width,\n          }}\n        >\n          {renderColGroup(false)}\n          {this.showHeader && (\n            <THead\n              v-slots={this.$slots}\n              {...{ ...headProps, thWidthList: columnResizable.value ? this.thWidthList : {} }}\n            />\n          )}\n          <TBody v-slots={this.$slots} {...tableBodyProps} />\n          <TFoot\n            v-slots={this.$slots}\n            rowKey={this.rowKey}\n            isFixedHeader={this.isFixedHeader}\n            rowAndColFixedPosition={rowAndColFixedPosition}\n            footData={this.footData}\n            columns={columns}\n            rowAttributes={this.rowAttributes}\n            rowClassName={this.rowClassName}\n            footerSummary={this.footerSummary}\n            rowspanAndColspanInFooter={this.rowspanAndColspanInFooter}\n          ></TFoot>\n        </table>\n      </div>\n    );\n\n    const customLoadingText = this.renderTNode('loading');\n    const loadingContent = this.loading !== undefined && (\n      <Loading\n        loading={!!this.loading}\n        text={customLoadingText ? () => customLoadingText : undefined}\n        attach={this.tableRef ? () => this.tableRef : undefined}\n        showOverlay\n        size=\"small\"\n        {...(this.loadingProps as BaseTableProps['loadingProps'])}\n      ></Loading>\n    );\n\n    const topContent = this.renderTNode('topContent');\n    const bottomContent = this.renderTNode('bottomContent');\n    const pagination = (\n      <div\n        ref=\"paginationRef\"\n        class={this.tableBaseClass.paginationWrap}\n        style={{ opacity: Number(this.showAffixPagination) }}\n      >\n        {this.renderPagination()}\n      </div>\n    );\n    const bottom = !!bottomContent && (\n      <div ref=\"bottomContentRef\" class={this.tableBaseClass.bottomContent}>\n        {bottomContent}\n      </div>\n    );\n\n    return (\n      <div ref=\"tableRef\" class={this.dynamicBaseTableClasses} style=\"position: relative\">\n        {!!topContent && <div class={this.tableBaseClass.topContent}>{topContent}</div>}\n\n        {renderAffixedHeader()}\n\n        {tableContent}\n\n        {affixedFooter}\n\n        {loadingContent}\n\n        {bottom}\n\n        {/* 右侧滚动条分隔线 */}\n        {this.showRightDivider && (\n          <div\n            class={this.tableBaseClass.scrollbarDivider}\n            style={{\n              right: `${this.scrollbarWidth}px`,\n              bottom: this.dividerBottom ? `${this.dividerBottom}px` : undefined,\n              height: `${this.tableContentRef?.getBoundingClientRect().height}px`,\n            }}\n          ></div>\n        )}\n\n        {/* 吸底的滚动条 */}\n        {this.horizontalScrollAffixedBottom && renderAffixedHorizontalScrollbar()}\n\n        {/* 吸底的分页器 */}\n        {this.paginationAffixedBottom ? (\n          <Affix offsetBottom={0} {...getAffixProps(this.paginationAffixedBottom)} ref=\"paginationAffixRef\">\n            {pagination}\n          </Affix>\n        ) : (\n          pagination\n        )}\n\n        {/* 调整列宽时的指示线。由于层级需要比较高，因而放在根节点，避免被吸顶表头覆盖。非必要情况，请勿调整辅助线位置 */}\n        <div ref=\"resizeLineRef\" class={this.tableBaseClass.resizeLine} style={this.resizeLineStyle}></div>\n      </div>\n    );\n  },\n});\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","BASE_TABLE_EVENTS","BASE_TABLE_ALL_EVENTS","ROW_LISTENERS","map","t","concat","defineComponent","name","props","_objectSpread","renderExpandedRow","Function","onLeafColumnsChange","thDraggable","Boolean","setup","context","renderTNode","useTNodeJSX","tableRef","ref","tableElmRef","tableBodyRef","bottomContentRef","tableFootHeight","_useClassName","useClassName","classPrefix","virtualScrollClasses","tableLayoutClasses","tableBaseClass","tableColFixedClasses","_useStyle","useStyle","tableClasses","sizeClassNames","tableContentStyles","tableElementStyles","_useConfig","useConfig","globalConfig","_useTableHeader","useTableHeader","isMultipleHeader","spansAndLeafNodes","thList","finalColumns","computed","_spansAndLeafNodes$va","value","leafColumns","columns","paginationAffixRef","horizontalScrollAffixRef","headerTopAffixRef","footerBottomAffixRef","_useFixed","useFixed","scrollbarWidth","virtualScrollHeaderPos","tableWidth","tableElmWidth","tableContentRef","isFixedHeader","isWidthOverflow","isFixedColumn","thWidthList","showColumnShadow","rowAndColFixedPosition","setData","refreshTable","setTableElmWidth","emitScrollEvent","setUseFixedTableElmRef","updateColumnFixedShadow","getThWidthList","updateThWidthList","addTableResizeObserver","updateTableAfterColumnResize","_useAffix","useAffix","affixHeaderRef","affixFooterRef","horizontalScrollbarRef","paginationRef","showAffixHeader","showAffixFooter","showAffixPagination","onHorizontalScroll","setTableContentRef","updateAffixHeaderOrFooter","_usePagination","usePagination","dataSource","innerPagination","isPaginateData","renderPagination","columnResizeParams","useColumnResize","resizeLineRef","resizeLineStyle","setEffectColMap","dynamicBaseTableClasses","_ref","_defineProperty","headerFixed","columnFixed","widthOverflow","multipleHeader","leftShadow","left","rightShadow","right","columnResizableTable","resizable","tableElmClasses","tableLayout","showRightDivider","bordered","dividerBottom","_bottomContentRef$val","_paginationRef$value","bottomRect","getBoundingClientRect","paginationRect","height","watch","data","_props2$onLeafColumns","immediate","onFixedChange","nextTick","virtualScrollParams","scroll","virtualConfig","useVirtualScrollNew","lastScrollY","onInnerVirtualScroll","e","target","srcElement","top","scrollTop","isVirtualScroll","handleScroll","getTFootHeight","_tableElmRef$value$qu","querySelector","scrollColumnIntoView","colKey","thDom","fixedThDom","querySelectorAll","totalWidth","i","len","length","width","domRect","contentRect","distance","scrollTo","behavior","onMounted","scrollToElement","render","_this$spansAndLeafNod","_this","_this$affixHeaderRef","_this$footData","_this$tableContentRef","columnResizable","_props$allowResizeCol","allowResizeColumnWidth","defaultColWidth","renderColGroup","isAffixHeader","arguments","undefined","_createVNode","col","style","formatCSSUnit","minWidth","renderAffixedHeader","showHeader","headerAffixedTop","Affix","_mergeProps","getAffixProps","affixHeaderWithWrap","_default","renderAffixedHorizontalScrollbar","horizontalScrollAffixedBottom","marginTop","obviousScrollbar","overflow","opacity","Number","headProps","maxHeight","ellipsisOverlayClassName","size","attach","IEHeaderWrap","getIEVersion","barWidth","affixHeaderHeight","affixHeaderWrapHeight","headerOpacity","affixHeaderWrapHeightStyle","affixedLeftBorder","affixedHeader","affixedHeaderElm","THead","$slots","affixedHeaderWrap","marginScrollbarWidth","affixedFooter","footerAffixedBottom","footData","affixedFooterWrap","affixedFooterElm","isVirtual","TFoot","rowKey","rowAttributes","rowClassName","footerSummary","rowspanAndColspanInFooter","translate","scrollHeight","virtualStyle","transform","tableBodyProps","visibleData","tableElm","cellEmptyContent","tableContentElm","handleRowMounted","pick","$props","extendTableProps","pagination","tableContent","content","cursor","TBody","customLoadingText","loadingContent","loading","Loading","loadingProps","topContent","bottomContent","paginationWrap","bottom","scrollbarDivider","paginationAffixedBottom","resizeLine"],"mappings":"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"}