{"version":3,"file":"td-tree.js","sources":["../../src/tree/td-tree.tsx"],"sourcesContent":["import { computed, defineComponent, TransitionGroup, provide } from 'vue';\n\nimport props from './props';\nimport { useConfig } from '../hooks/useConfig';\nimport { useTNodeDefault } from '../hooks/tnode';\nimport { useCLASSNAMES, injectKey } from './constants';\nimport useTree from './useTree';\nimport useExposeFunc from './hooks/useExposeFunc';\n\nexport default defineComponent({\n  name: 'TTree',\n  props,\n  setup(props, { expose, slots }) {\n    const { globalConfig, t } = useConfig('tree');\n    const CLASS_NAMES = useCLASSNAMES();\n    const renderTNodeJSX = useTNodeDefault();\n\n    // 向子组件传递的状态\n    const statusContext = computed(() => {\n      const { checkProps, empty, icon, label, line, disableCheck, operations } = props;\n      return {\n        checkProps,\n        empty,\n        icon,\n        label,\n        line,\n        disableCheck,\n        operations,\n        scopedSlots: slots,\n      };\n    });\n    provide(injectKey, statusContext);\n\n    // tree核心逻辑\n    const { treeStore, treeNodeViews } = useTree(props);\n\n    // 导出方法\n    useExposeFunc(treeStore, expose);\n\n    const classList = computed(() => [\n      CLASS_NAMES.value.tree,\n      {\n        [CLASS_NAMES.value.disabled]: props.disabled,\n        [CLASS_NAMES.value.treeHoverAble]: props.hover,\n        [CLASS_NAMES.value.treeCheckable]: props.checkable,\n        [CLASS_NAMES.value.treeTransition]: props.transition,\n        [CLASS_NAMES.value.treeBlockNode]: props.expandOnClickNode,\n      },\n    ]);\n\n    return () => (\n      <div class={classList.value}>\n        {treeNodeViews.value.length === 0 ? (\n          <div class={CLASS_NAMES.value.treeEmpty}>\n            {renderTNodeJSX('empty', {\n              defaultNode: t(globalConfig.value.empty),\n            })}\n          </div>\n        ) : (\n          <TransitionGroup\n            name={CLASS_NAMES.value.treeNodeToggle}\n            tag=\"div\"\n            enter-active-class={CLASS_NAMES.value.treeNodeEnter}\n            leave-active-class={CLASS_NAMES.value.treeNodeLeave}\n          >\n            {treeNodeViews.value}\n          </TransitionGroup>\n        )}\n      </div>\n    );\n  },\n});\n"],"names":["defineComponent","name","props","setup","expose","_ref","slots","_useConfig","useConfig","globalConfig","t","CLASS_NAMES","useCLASSNAMES","renderTNodeJSX","useTNodeDefault","statusContext","computed","checkProps","empty","icon","label","line","disableCheck","operations","scopedSlots","provide","injectKey","_useTree","useTree","treeStore","treeNodeViews","useExposeFunc","classList","_ref2","value","tree","_defineProperty","disabled","treeHoverAble","hover","treeCheckable","checkable","treeTransition","transition","treeBlockNode","expandOnClickNode","_createVNode","length","treeEmpty","defaultNode","TransitionGroup","treeNodeToggle","treeNodeEnter","treeNodeLeave"],"mappings":"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"}