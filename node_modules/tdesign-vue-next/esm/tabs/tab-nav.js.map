{"version":3,"file":"tab-nav.js","sources":["../../src/tabs/tab-nav.tsx"],"sourcesContent":["import { h, defineComponent, Transition, ref, computed, watch, onMounted } from 'vue';\nimport debounce from 'lodash/debounce';\nimport {\n  ChevronLeftIcon as TdChevronLeftIcon,\n  ChevronRightIcon as TdChevronRightIcon,\n  AddIcon as TdAddIcon,\n} from 'tdesign-icons-vue-next';\nimport { TdTabsProps } from './type';\nimport tabProps from './props';\nimport tabBase from '../_common/js/tabs/base';\n\n// 子组件\nimport TTabPanel from './tab-panel';\nimport TTabNavItem from './tab-nav-item';\nimport TTabNavBar from './tab-nav-bar';\n\n// hooks\nimport { useResize } from '../hooks/useListener';\nimport { usePrefixClass, useCommonClassName } from '../hooks/useConfig';\nimport { useGlobalIcon } from '../hooks/useGlobalIcon';\nimport useDragSort from '../hooks/useDragSort';\nimport isFunction from 'lodash/isFunction';\n\nconst { calculateCanToLeft, calculateCanToRight, calcScrollLeft, scrollToLeft, scrollToRight, moveActiveTabIntoView } =\n  tabBase;\n\nexport default defineComponent({\n  name: 'TTabNav',\n  ...{ resizeObserver: null },\n  props: {\n    theme: tabProps.theme,\n    panels: {\n      type: Array as { new (): Array<InstanceType<typeof TTabPanel>> },\n      default: (): Array<InstanceType<typeof TTabPanel>> => [] as Array<InstanceType<typeof TTabPanel>>,\n    },\n    value: tabProps.value,\n    placement: tabProps.placement,\n    size: tabProps.size,\n    disabled: tabProps.disabled,\n    addable: tabProps.addable,\n    onChange: tabProps.onChange,\n    onAdd: tabProps.onAdd,\n    onRemove: tabProps.onRemove,\n    dragSort: tabProps.dragSort,\n    onDragSort: tabProps.onDragSort,\n  },\n  setup(props) {\n    const COMPONENT_NAME = usePrefixClass('tabs');\n    const { ChevronLeftIcon, ChevronRightIcon, AddIcon } = useGlobalIcon({\n      ChevronLeftIcon: TdChevronLeftIcon,\n      ChevronRightIcon: TdChevronRightIcon,\n      AddIcon: TdAddIcon,\n    });\n    const classPrefix = usePrefixClass();\n    const { SIZE } = useCommonClassName();\n\n    const scrollLeft = ref(0);\n    const canToLeft = ref(false);\n    const canToRight = ref(false);\n\n    // refs\n    // const panels = ref(props.panels);\n    const navsContainerRef = ref();\n    const navsWrapRef = ref();\n    const leftOperationsRef = ref();\n    const toLeftBtnRef = ref();\n    const rightOperationsRef = ref();\n    const toRightBtnRef = ref();\n    const activeTabRef = ref();\n    const getRefs = () => ({\n      navsContainer: navsContainerRef.value,\n      navsWrap: navsWrapRef.value,\n      leftOperations: leftOperationsRef.value,\n      toLeftBtn: toLeftBtnRef.value,\n      rightOperations: rightOperationsRef.value,\n      toRightBtn: toRightBtnRef.value,\n    });\n\n    // style\n    const wrapTransformStyle = computed(() => {\n      if (['left', 'right'].includes(props.placement.toLowerCase())) return {};\n      return {\n        transform: `translate3d(${-scrollLeft.value}px, 0, 0)`,\n      };\n    });\n    const navsContainerStyle = computed(() => {\n      return props.addable ? { 'min-height': '48px' } : null;\n    });\n\n    // class\n    const iconBaseClass = computed(() => {\n      return {\n        [`${COMPONENT_NAME.value}__btn`]: true,\n        [SIZE.value.medium]: props.size === 'medium',\n        [SIZE.value.large]: props.size === 'large',\n      };\n    });\n    const leftIconClass = computed(() => {\n      return {\n        [`${COMPONENT_NAME.value}__btn--left`]: true,\n        ...iconBaseClass.value,\n      };\n    });\n    const rightIconClass = computed(() => {\n      return {\n        [`${COMPONENT_NAME.value}__btn--right`]: true,\n        ...iconBaseClass.value,\n      };\n    });\n    const addIconClass = computed(() => {\n      return {\n        [`${COMPONENT_NAME.value}__add-btn`]: true,\n        ...iconBaseClass.value,\n      };\n    });\n    const navContainerClass = computed(() => {\n      return {\n        [`${COMPONENT_NAME.value}__nav-container`]: true,\n        [`${COMPONENT_NAME.value}__nav--card`]: props.theme === 'card',\n        [`${classPrefix.value}-is-${props.placement}`]: true,\n        [`${classPrefix.value}-is-addable`]: props.addable,\n      };\n    });\n    const navScrollContainerClass = computed(() => {\n      return {\n        [`${COMPONENT_NAME.value}__nav-scroll`]: true,\n        [`${classPrefix.value}-is-scrollable`]: canToLeft.value || canToRight.value,\n      };\n    });\n\n    const navsWrapClass = computed(() => {\n      return [\n        `${COMPONENT_NAME.value}__nav-wrap`,\n        `${classPrefix.value}-is-smooth`,\n        { [`${classPrefix.value}-is-vertical`]: props.placement === 'left' || props.placement === 'right' },\n      ];\n    });\n\n    const totalAdjust = () => {\n      adjustArrowDisplay();\n      adjustScrollLeft();\n    };\n    // watch\n    watch([scrollLeft, () => props.placement, () => props.panels], totalAdjust);\n\n    // life times\n    useResize(debounce(totalAdjust), navsContainerRef.value);\n    onMounted(totalAdjust);\n\n    // methods\n    const adjustScrollLeft = () => {\n      scrollLeft.value = calcScrollLeft(getRefs(), scrollLeft.value);\n    };\n    const adjustArrowDisplay = () => {\n      canToLeft.value = calculateCanToLeft(getRefs(), scrollLeft.value, props.placement);\n      canToRight.value = calculateCanToRight(getRefs(), scrollLeft.value, props.placement);\n    };\n    const handleScroll = (direction: 'left' | 'right') => {\n      if (direction === 'left') {\n        scrollLeft.value = scrollToLeft(getRefs(), scrollLeft.value);\n      } else {\n        scrollLeft.value = scrollToRight(getRefs(), scrollLeft.value);\n      }\n    };\n    const handleAddTab = (e: MouseEvent) => {\n      props.onAdd?.({ e });\n    };\n    const tabClick = (event: MouseEvent, nav: Partial<InstanceType<typeof TTabPanel>>) => {\n      const { value, disabled } = nav;\n      if (disabled || props.value === value) {\n        return false;\n      }\n      props.onChange(value);\n    };\n    const removeBtnClick = ({ e, value, index }: Parameters<TdTabsProps['onRemove']>[0]) => {\n      props.onRemove({ e, value, index });\n    };\n    const setActiveTab = (ref: any) => {\n      if (ref?.value === props.value && activeTabRef.value !== ref.$el) {\n        activeTabRef.value = ref.$el;\n        scrollLeft.value = moveActiveTabIntoView(\n          {\n            activeTab: activeTabRef.value,\n            ...getRefs(),\n          },\n          scrollLeft.value,\n        );\n      }\n    };\n\n    const { setNavsWrap } = useDragSort(props);\n    onMounted(() => {\n      setNavsWrap(navsWrapRef.value);\n    });\n    // renders\n    const navs = computed(() => {\n      return props.panels.map((panel, index) => {\n        let label;\n        if (panel?.children?.label) {\n          label = panel.children.label();\n        } else if (isFunction(panel.label)) {\n          label = panel.label(h);\n        } else {\n          label = panel.label || `选项卡${index + 1}`;\n        }\n        let draggable = props.dragSort;\n        if (draggable && panel.draggable === false) {\n          draggable = panel.draggable;\n        }\n        return (\n          <TTabNavItem\n            ref={setActiveTab}\n            draggable={draggable}\n            key={panel.value}\n            index={index}\n            theme={props.theme}\n            size={props.size}\n            placement={props.placement}\n            label={label}\n            active={panel.value === props.value}\n            disabled={props.disabled || panel.disabled}\n            removable={panel.removable}\n            value={panel.value}\n            onClick={(e: MouseEvent) => tabClick(e, panel)}\n            onRemove={removeBtnClick}\n          />\n        );\n      });\n    });\n    const renderArrows = () => {\n      return [\n        <div\n          ref={leftOperationsRef}\n          class={[`${COMPONENT_NAME.value}__operations`, `${COMPONENT_NAME.value}__operations--left`]}\n        >\n          <Transition name=\"fade\" mode=\"out-in\" appear>\n            {canToLeft.value ? (\n              <div ref={toLeftBtnRef} class={leftIconClass.value} onClick={() => handleScroll('left')}>\n                <ChevronLeftIcon />\n              </div>\n            ) : null}\n          </Transition>\n        </div>,\n        <div\n          ref={rightOperationsRef}\n          class={[`${COMPONENT_NAME.value}__operations`, `${COMPONENT_NAME.value}__operations--right`]}\n        >\n          <Transition name=\"fade\" mode=\"out-in\" appear>\n            {canToRight.value ? (\n              <div ref={toRightBtnRef} class={rightIconClass.value} onClick={() => handleScroll('right')}>\n                <ChevronRightIcon></ChevronRightIcon>\n              </div>\n            ) : null}\n          </Transition>\n          {props.addable ? (\n            <div class={addIconClass.value} onClick={handleAddTab}>\n              <AddIcon></AddIcon>\n            </div>\n          ) : null}\n        </div>,\n      ];\n    };\n    const renderNavs = () => {\n      return (\n        <div class={navContainerClass.value}>\n          <div class={navScrollContainerClass.value}>\n            <div ref={navsWrapRef} class={navsWrapClass.value} style={wrapTransformStyle.value}>\n              {props.theme !== 'card' && (\n                <TTabNavBar placement={props.placement} value={props.value} navs={navs.value} />\n              )}\n              {navs.value}\n            </div>\n          </div>\n        </div>\n      );\n    };\n\n    return () => {\n      return (\n        <div ref={navsContainerRef} class={[`${COMPONENT_NAME.value}__nav`]} style={navsContainerStyle.value}>\n          {renderArrows()}\n          {renderNavs()}\n        </div>\n      );\n    };\n  },\n});\n"],"names":["calculateCanToLeft","tabBase","calculateCanToRight","calcScrollLeft","scrollToLeft","scrollToRight","moveActiveTabIntoView","defineComponent","_objectSpread","name","resizeObserver","props","theme","tabProps","panels","type","Array","_default","value","placement","size","disabled","addable","onChange","onAdd","onRemove","dragSort","onDragSort","setup","COMPONENT_NAME","usePrefixClass","_useGlobalIcon","useGlobalIcon","ChevronLeftIcon","TdChevronLeftIcon","ChevronRightIcon","TdChevronRightIcon","AddIcon","TdAddIcon","classPrefix","_useCommonClassName","useCommonClassName","SIZE","scrollLeft","ref","canToLeft","canToRight","navsContainerRef","navsWrapRef","leftOperationsRef","toLeftBtnRef","rightOperationsRef","toRightBtnRef","activeTabRef","getRefs","navsContainer","navsWrap","leftOperations","toLeftBtn","rightOperations","toRightBtn","wrapTransformStyle","computed","includes","toLowerCase","transform","concat","navsContainerStyle","iconBaseClass","_ref","_defineProperty","medium","large","leftIconClass","rightIconClass","addIconClass","navContainerClass","_ref2","navScrollContainerClass","_ref3","navsWrapClass","totalAdjust","adjustArrowDisplay","adjustScrollLeft","watch","useResize","debounce","onMounted","handleScroll","direction","handleAddTab","e","_props$onAdd","call","tabClick","event","nav","removeBtnClick","_ref5","index","setActiveTab","$el","activeTab","_useDragSort","useDragSort","setNavsWrap","navs","map","panel","_panel$children","label","children","isFunction","h","draggable","_createVNode","TTabNavItem","removable","onClick","renderArrows","Transition","renderNavs","TTabNavBar"],"mappings":"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"}