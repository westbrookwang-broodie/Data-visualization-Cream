{"version":3,"file":"badge.js","sources":["../../src/badge/badge.tsx"],"sourcesContent":["import { defineComponent, computed } from 'vue';\nimport props from './props';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport { useConfig } from '../hooks/useConfig';\nimport isFunction from 'lodash/isFunction';\n\nexport default defineComponent({\n  name: 'TBadge',\n  inheritAttrs: false,\n  props: { ...props },\n  setup(props) {\n    const renderTNodeJSX = useTNodeJSX();\n\n    /** 内容计算相关逻辑 start */\n    const content = computed(() => {\n      if (isFunction(props.count)) {\n        return renderTNodeJSX('count');\n      }\n      if (Number.isNaN(Number(props.count))) {\n        return props.count;\n      }\n      const count = Number(props.count);\n      return count > props.maxCount ? `${props.maxCount}+` : count;\n    });\n\n    const renderChildren = () => renderTNodeJSX('default');\n\n    const getOffset = () => {\n      if (!props.offset) return {};\n      let [xOffset, yOffset]: Array<string | number> = props.offset;\n      xOffset = Number.isNaN(Number(xOffset)) ? xOffset : `${xOffset}px`;\n      yOffset = Number.isNaN(Number(yOffset)) ? yOffset : `${yOffset}px`;\n      return { xOffset, yOffset };\n    };\n    /** 内容计算相关逻辑 end */\n\n    /** 样式计算相关逻辑 start */\n    const { classPrefix } = useConfig('classPrefix');\n    const name = `${classPrefix.value}-badge`;\n    const isHidden = computed(() => {\n      return !props.showZero && (content.value === 0 || content.value === '0');\n    });\n\n    const badgeClassNames = computed(() => {\n      return [\n        {\n          [`${name}--dot`]: !!props.dot,\n          [`${name}--circle`]: !props.dot && props.shape === 'circle',\n          [`${name}--round`]: props.shape === 'round',\n          [`${classPrefix.value}-size-s`]: props.size === 'small',\n        },\n      ];\n    });\n\n    const inlineStyle = computed(() => {\n      const { xOffset, yOffset } = getOffset();\n      return {\n        background: `${props.color}`,\n        right: xOffset,\n        top: yOffset,\n      };\n    });\n    /** 样式计算相关逻辑 end */\n    return {\n      content,\n      inlineStyle,\n      badgeClassNames,\n      isHidden,\n      renderChildren,\n      name,\n    };\n  },\n\n  render() {\n    return (\n      <div class={this.name} {...this.$attrs}>\n        {this.renderChildren()}\n        {this.isHidden ? null : (\n          <sup class={this.badgeClassNames} style={this.inlineStyle}>\n            {this.dot ? null : this.content}\n          </sup>\n        )}\n      </div>\n    );\n  },\n});\n"],"names":["defineComponent","name","inheritAttrs","props","_objectSpread","setup","renderTNodeJSX","useTNodeJSX","content","computed","isFunction","count","Number","isNaN","maxCount","concat","renderChildren","getOffset","offset","_props2$offset","_slicedToArray","xOffset","yOffset","_useConfig","useConfig","classPrefix","value","isHidden","showZero","badgeClassNames","_ref","_defineProperty","dot","shape","size","inlineStyle","_getOffset","background","color","right","top","render","_createVNode","_mergeProps","$attrs"],"mappings":"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"}