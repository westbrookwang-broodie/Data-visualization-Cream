{"version":3,"file":"guide.js","sources":["../../src/guide/guide.tsx"],"sourcesContent":["import { defineComponent, computed, nextTick, onMounted, ref, toRefs, watch, h, Teleport } from 'vue';\nimport isFunction from 'lodash/isFunction';\nimport props from './props';\nimport { GuideCrossProps } from './interface';\nimport { TdGuideProps, GuideStep } from './type';\nimport { scrollToParentVisibleArea, getRelativePosition, getTargetElm, scrollToElm } from './utils';\nimport setStyle from '../_common/js/utils/set-style';\nimport { addClass, removeClass, isFixed, getWindowScroll } from '../utils/dom';\nimport useVModel from '../hooks/useVModel';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport { usePrefixClass, useConfig } from '../hooks/useConfig';\nimport Button from '../button';\nimport Popup, { PopupProps } from '../popup';\n\nexport default defineComponent({\n  name: 'TGuide',\n  props,\n  setup(props: TdGuideProps, context) {\n    const renderTNodeJSX = useTNodeJSX();\n    const COMPONENT_NAME = usePrefixClass('guide');\n    const LOCK_CLASS = usePrefixClass('guide--lock');\n    const { globalConfig } = useConfig('guide');\n\n    const { current, modelValue, hideCounter, hidePrev, hideSkip, steps, zIndex } = toRefs(props);\n    const [innerCurrent, setInnerCurrent] = useVModel(\n      current,\n      modelValue,\n      props.defaultCurrent,\n      props.onChange,\n      'current',\n    );\n\n    // 覆盖层，用于覆盖所有元素\n    const overlayLayerRef = ref<HTMLElement>();\n    // 高亮层，用于高亮元素\n    const highlightLayerRef = ref<HTMLElement>();\n    // 提示层，用于高亮元素\n    const referenceLayerRef = ref<HTMLElement>();\n    // 当前高亮的元素\n    const currentHighlightLayerElm = ref<HTMLElement>();\n    // dialog wrapper ref\n    const dialogWrapperRef = ref<HTMLElement>();\n    // dialog ref\n    const dialogTooltipRef = ref<HTMLElement>();\n    // ! popup ref 不确定这里的类型是否完全正确\n    const popupTooltipRef = ref<InstanceType<typeof Popup>>();\n    // 是否开始展示\n    const actived = ref<boolean>(false);\n    // 步骤总数\n    const stepsTotal = computed(() => steps.value.length);\n    // 当前步骤的信息\n    const currentStepInfo = computed<GuideStep>(() => steps.value[innerCurrent.value]);\n    // 当前是否为 popup\n    const isPopup = computed(() => getCurrentCrossProps('mode') === 'popup');\n    // 当前元素位置状态\n    const currentElmIsFixed = computed(() => isFixed(currentHighlightLayerElm.value || document.body));\n    // 获取当前步骤的属性值 用户当前步骤设置 > 用户组件设置的\n    const getCurrentCrossProps = <Key extends keyof GuideCrossProps>(propsName: Key) =>\n      currentStepInfo.value[propsName] ?? props[propsName];\n\n    // 设置高亮层的位置\n    const setHighlightLayerPosition = (highlighLayer: HTMLElement) => {\n      // 这里预留了一个相对元素的功能，暂未使用，也是这里导致了 fix #2111\n      let { top, left } = getRelativePosition(currentHighlightLayerElm.value);\n      let { width, height } = currentHighlightLayerElm.value.getBoundingClientRect();\n      const highlightPadding = getCurrentCrossProps('highlightPadding');\n\n      if (isPopup.value) {\n        width += highlightPadding * 2;\n        height += highlightPadding * 2;\n        top -= highlightPadding;\n        left -= highlightPadding;\n      } else {\n        const { scrollTop, scrollLeft } = getWindowScroll();\n        top += scrollTop;\n        left += scrollLeft;\n      }\n\n      setStyle(highlighLayer, {\n        width: `${width}px`,\n        height: `${height}px`,\n        top: `${top}px`,\n        left: `${left}px`,\n      });\n    };\n\n    const showPopupGuide = () => {\n      nextTick(() => {\n        currentHighlightLayerElm.value = getTargetElm(currentStepInfo.value.element);\n        if (!currentHighlightLayerElm.value) return;\n        scrollToParentVisibleArea(currentHighlightLayerElm.value);\n        setHighlightLayerPosition(highlightLayerRef.value);\n        setHighlightLayerPosition(referenceLayerRef.value);\n        scrollToElm(currentHighlightLayerElm.value);\n        // fix: https://github.com/Tencent/tdesign-vue-next/issues/2536\n        // 这里其实是一个临时解决方案，最合理的是 popup 内部处理\n        popupTooltipRef.value?.update();\n      });\n    };\n\n    const destroyTooltipElm = () => {\n      referenceLayerRef.value?.parentNode.removeChild(referenceLayerRef.value);\n    };\n\n    const showDialogGuide = () => {\n      nextTick(() => {\n        currentHighlightLayerElm.value = dialogTooltipRef.value;\n        scrollToParentVisibleArea(currentHighlightLayerElm.value);\n        setHighlightLayerPosition(highlightLayerRef.value);\n        scrollToElm(currentHighlightLayerElm.value);\n      });\n    };\n\n    const destroyDialogTooltipElm = () => {\n      dialogTooltipRef.value?.parentNode.removeChild(dialogTooltipRef.value);\n      dialogWrapperRef.value?.parentNode.removeChild(dialogWrapperRef.value);\n    };\n\n    const showGuide = () => {\n      if (isPopup.value) {\n        destroyDialogTooltipElm();\n        showPopupGuide();\n      } else {\n        destroyTooltipElm();\n        showDialogGuide();\n      }\n    };\n\n    const destroyGuide = () => {\n      destroyTooltipElm();\n      destroyDialogTooltipElm();\n      highlightLayerRef.value?.parentNode.removeChild(highlightLayerRef.value);\n      overlayLayerRef.value?.parentNode.removeChild(overlayLayerRef.value);\n      removeClass(document.body, LOCK_CLASS.value);\n    };\n\n    const handleSkip = (e: MouseEvent) => {\n      const total = stepsTotal.value;\n      actived.value = false;\n      setInnerCurrent(-1, { e, total });\n      props.onSkip?.({ e, current: innerCurrent.value, total });\n    };\n\n    const handlePrev = (e: MouseEvent) => {\n      const total = stepsTotal.value;\n      setInnerCurrent(innerCurrent.value - 1, { e, total });\n      props.onPrevStepClick?.({\n        e,\n        prev: innerCurrent.value - 1,\n        current: innerCurrent.value,\n        total,\n      });\n    };\n\n    const handleNext = (e: MouseEvent) => {\n      const total = stepsTotal.value;\n      setInnerCurrent(innerCurrent.value + 1, { e, total });\n      props.onNextStepClick?.({\n        e,\n        next: innerCurrent.value + 1,\n        current: innerCurrent.value,\n        total,\n      });\n    };\n\n    const handleFinish = (e: MouseEvent) => {\n      const total = stepsTotal.value;\n      actived.value = false;\n      setInnerCurrent(-1, { e, total });\n      props.onFinish?.({ e, current: innerCurrent.value, total });\n    };\n\n    const initGuide = () => {\n      if (innerCurrent.value >= 0 && innerCurrent.value < steps.value.length) {\n        if (!actived.value) {\n          actived.value = true;\n          addClass(document.body, LOCK_CLASS.value);\n        }\n        showGuide();\n      }\n    };\n\n    watch(innerCurrent, (val) => {\n      if (val >= 0 && val < steps.value.length) {\n        initGuide();\n      } else {\n        actived.value = false;\n        destroyGuide();\n      }\n    });\n\n    onMounted(() => {\n      initGuide();\n    });\n\n    return () => {\n      const renderOverlayLayer = () => (\n        <div ref={overlayLayerRef} class={`${COMPONENT_NAME.value}__overlay`} style={{ zIndex: zIndex.value - 2 }} />\n      );\n\n      const hWithParams = (params: Record<string, any> = { currentStepInfo: currentStepInfo.value }) => {\n        const newH = new Function('return ' + h.toString())();\n        return Object.assign({}, newH, params);\n      };\n\n      const getHighlightContent = () => {\n        const { highlightContent } = currentStepInfo.value;\n\n        let node: any = highlightContent;\n        if (isFunction(highlightContent)) {\n          // 支持函数\n          node = highlightContent(hWithParams());\n        } else if (context.slots.highlightContent) {\n          // 支持插槽\n          node = context.slots.highlightContent(hWithParams());\n        } else if (context.slots['highlight-content']) {\n          // 支持插槽\n          node = context.slots['highlight-content'](hWithParams());\n        } else if (!!highlightContent) {\n          // 支持组件\n          node = <node />;\n        }\n\n        // 给自定义元素添加类名\n        if (node) {\n          if (!node.props) node.props = {};\n          node.props.class = `${COMPONENT_NAME.value}__highlight--mask ${node.props.class || ''}`;\n        }\n        return node;\n      };\n\n      const renderHighlightLayer = () => {\n        const style = { zIndex: zIndex.value - 1 };\n        const highlightClass = [\n          `${COMPONENT_NAME.value}__highlight`,\n          `${COMPONENT_NAME.value}__highlight--${isPopup.value ? 'popup' : 'dialog'}`,\n          `${COMPONENT_NAME.value}--${currentElmIsFixed.value && isPopup.value ? 'fixed' : 'absolute'}`,\n        ];\n        const showOverlay = getCurrentCrossProps('showOverlay');\n        const maskClass = [`${COMPONENT_NAME.value}__highlight--${showOverlay ? 'mask' : 'nomask'}`];\n        const innerHighlightContent = getHighlightContent();\n        const showHighlightContent = Boolean(innerHighlightContent && isPopup.value);\n\n        return (\n          <div\n            ref={highlightLayerRef}\n            class={highlightClass.concat(showHighlightContent ? highlightClass : maskClass)}\n            style={style}\n          >\n            {showHighlightContent && innerHighlightContent}\n          </div>\n        );\n      };\n\n      const renderCounter = () => {\n        const popupSlotCounter = renderTNodeJSX('counter', {\n          params: { total: stepsTotal.value, current: innerCurrent.value },\n        });\n\n        const popupDefaultCounter = (\n          <div class={`${COMPONENT_NAME.value}__counter`}>\n            {popupSlotCounter || `${innerCurrent.value + 1}/${stepsTotal.value}`}\n          </div>\n        );\n        return <>{!hideCounter.value && popupDefaultCounter}</>;\n      };\n\n      const renderAction = (mode: TdGuideProps['mode']) => {\n        const isLast = innerCurrent.value === stepsTotal.value - 1;\n        const isFirst = innerCurrent.value === 0;\n        const buttonSize = mode === 'popup' ? 'small' : 'medium';\n\n        return (\n          <div class={`${COMPONENT_NAME.value}__action`}>\n            {!hideSkip.value && !isLast && (\n              <Button\n                class={`${COMPONENT_NAME.value}__skip`}\n                theme=\"default\"\n                size={buttonSize}\n                variant=\"base\"\n                onClick={handleSkip}\n                {...(getCurrentCrossProps('skipButtonProps') ?? globalConfig.value.skipButtonProps)}\n              />\n            )}\n            {!hidePrev.value && !isFirst && (\n              <Button\n                class={`${COMPONENT_NAME.value}__prev`}\n                theme=\"primary\"\n                size={buttonSize}\n                variant=\"base\"\n                onClick={handlePrev}\n                {...(getCurrentCrossProps('prevButtonProps') ?? globalConfig.value.prevButtonProps)}\n              />\n            )}\n            {!isLast && (\n              <Button\n                class={`${COMPONENT_NAME.value}__next`}\n                theme=\"primary\"\n                size={buttonSize}\n                variant=\"base\"\n                onClick={handleNext}\n                {...(getCurrentCrossProps('nextButtonProps') ?? globalConfig.value.nextButtonProps)}\n              />\n            )}\n            {isLast && (\n              <Button\n                class={`${COMPONENT_NAME.value}__finish`}\n                theme=\"primary\"\n                size={buttonSize}\n                variant=\"base\"\n                onClick={handleFinish}\n                {...(props.finishButtonProps ?? globalConfig.value.finishButtonProps)}\n              />\n            )}\n          </div>\n        );\n      };\n\n      const renderTitle = () => {\n        const functionTitle = isFunction(currentStepInfo.value.title) ? currentStepInfo.value.title() : undefined;\n        const slotTitle = context.slots.title ? context.slots.title(hWithParams()) : undefined;\n        return functionTitle || slotTitle || currentStepInfo.value.title;\n      };\n\n      const renderTooltipBody = () => {\n        const title = <div class={`${COMPONENT_NAME.value}__title`}>{renderTitle()}</div>;\n        const bodyRender = currentStepInfo.value.body;\n\n        let descBody: any;\n        if (isFunction(bodyRender)) {\n          descBody = bodyRender(hWithParams());\n        } else if (context.slots.body) {\n          descBody = context.slots.body({ currentStepInfo: currentStepInfo.value });\n        } else if (typeof bodyRender === 'string') {\n          descBody = bodyRender;\n        } else {\n          descBody = <bodyRender />;\n        }\n        const desc = <div class={`${COMPONENT_NAME.value}__desc`}>{descBody}</div>;\n\n        return (\n          <>\n            {title}\n            {desc}\n          </>\n        );\n      };\n\n      const renderPopupContent = () => {\n        const footerClasses = [`${COMPONENT_NAME.value}__footer`, `${COMPONENT_NAME.value}__footer--popup`];\n        const action = (\n          <div class={footerClasses}>\n            {renderCounter()}\n            {renderAction('popup')}\n          </div>\n        );\n\n        return (\n          <div class={`${COMPONENT_NAME.value}__tooltip`}>\n            {renderTooltipBody()}\n            {action}\n          </div>\n        );\n      };\n\n      const renderPopupGuide = () => {\n        const { content } = currentStepInfo.value;\n        const contentProps = {\n          handlePrev,\n          handleNext,\n          handleSkip,\n          handleFinish,\n          current: innerCurrent.value,\n          total: stepsTotal.value,\n        };\n        let renderBody;\n        if (isFunction(content)) {\n          renderBody = () => content(hWithParams(contentProps));\n        } else if (context.slots.content) {\n          renderBody = () => context.slots.content(hWithParams(contentProps));\n        } else if (content) {\n          renderBody = () => <content {...contentProps} />;\n        } else {\n          renderBody = renderPopupContent;\n        }\n        const classes = [\n          `${COMPONENT_NAME.value}__reference`,\n          `${COMPONENT_NAME.value}--${currentElmIsFixed.value ? 'fixed' : 'absolute'}`,\n        ];\n\n        const innerClassName: PopupProps['overlayInnerClassName'] = [\n          {\n            [`${COMPONENT_NAME.value}__popup--content`]: !!content,\n          },\n        ];\n        return (\n          <Popup\n            ref={popupTooltipRef}\n            visible={true}\n            show-arrow={!content}\n            zIndex={zIndex.value}\n            placement={currentStepInfo.value.placement as any}\n            {...currentStepInfo.value.popupProps}\n            content={renderBody}\n            overlayClassName={[`${COMPONENT_NAME.value}__popup`, currentStepInfo.value.stepOverlayClass]}\n            overlayInnerClassName={innerClassName.concat(currentStepInfo.value.popupProps?.overlayInnerClassName)}\n          >\n            <div ref={referenceLayerRef} class={classes} />\n          </Popup>\n        );\n      };\n\n      const renderDialogGuide = () => {\n        const style = { zIndex: zIndex.value };\n        const wrapperClasses = [\n          `${COMPONENT_NAME.value}__wrapper`,\n          { [`${COMPONENT_NAME.value}__wrapper--center`]: currentStepInfo.value.placement === 'center' },\n        ];\n        const dialogClasses = [\n          `${COMPONENT_NAME.value}__reference`,\n          `${COMPONENT_NAME.value}--absolute`,\n          `${COMPONENT_NAME.value}__dialog`,\n          {\n            [`${COMPONENT_NAME.value}__dialog--nomask`]: !getCurrentCrossProps('showOverlay'),\n            [currentStepInfo.value.stepOverlayClass]: !!currentStepInfo.value.stepOverlayClass,\n          },\n        ];\n        const footerClasses = [`${COMPONENT_NAME.value}__footer`, `${COMPONENT_NAME.value}__footer--popup`];\n        return (\n          <>\n            <div ref={dialogWrapperRef} class={wrapperClasses} style={style}>\n              <div ref={dialogTooltipRef} class={dialogClasses}>\n                {renderTooltipBody()}\n                <div class={footerClasses}>\n                  {renderCounter()}\n                  {renderAction('dialog')}\n                </div>\n              </div>\n            </div>\n          </>\n        );\n      };\n\n      const renderGuide = () => {\n        return (\n          <>\n            <Teleport to=\"body\">\n              {renderOverlayLayer()}\n              {renderHighlightLayer()}\n              {isPopup.value ? renderPopupGuide() : renderDialogGuide()}\n            </Teleport>\n          </>\n        );\n      };\n\n      return <>{actived.value && renderGuide()}</>;\n    };\n  },\n});\n"],"names":["defineComponent","name","props","setup","context","renderTNodeJSX","useTNodeJSX","COMPONENT_NAME","usePrefixClass","LOCK_CLASS","_useConfig","useConfig","globalConfig","_toRefs","toRefs","current","modelValue","hideCounter","hidePrev","hideSkip","steps","zIndex","_useVModel","useVModel","defaultCurrent","onChange","_useVModel2","_slicedToArray","innerCurrent","setInnerCurrent","overlayLayerRef","ref","highlightLayerRef","referenceLayerRef","currentHighlightLayerElm","dialogWrapperRef","dialogTooltipRef","popupTooltipRef","actived","stepsTotal","computed","value","length","currentStepInfo","isPopup","getCurrentCrossProps","currentElmIsFixed","isFixed","document","body","propsName","_currentStepInfo$valu","setHighlightLayerPosition","highlighLayer","_getRelativePosition","getRelativePosition","top","left","_currentHighlightLaye","getBoundingClientRect","width","height","highlightPadding","_getWindowScroll","getWindowScroll","scrollTop","scrollLeft","setStyle","showPopupGuide","nextTick","_popupTooltipRef$valu","getTargetElm","element","scrollToParentVisibleArea","scrollToElm","update","destroyTooltipElm","_referenceLayerRef$va","parentNode","removeChild","showDialogGuide","destroyDialogTooltipElm","_dialogTooltipRef$val","_dialogWrapperRef$val","showGuide","destroyGuide","_highlightLayerRef$va","_overlayLayerRef$valu","removeClass","handleSkip","e","_props2$onSkip","total","onSkip","handlePrev","_props2$onPrevStepCli","onPrevStepClick","prev","handleNext","_props2$onNextStepCli","onNextStepClick","next","handleFinish","_props2$onFinish","onFinish","initGuide","addClass","watch","val","onMounted","renderOverlayLayer","hWithParams","params","arguments","undefined","newH","Function","h","toString","Object","assign","getHighlightContent","highlightContent","node","isFunction","slots","_createVNode","concat","renderHighlightLayer","style","highlightClass","showOverlay","maskClass","innerHighlightContent","showHighlightContent","Boolean","renderCounter","popupSlotCounter","popupDefaultCounter","_Fragment","renderAction","mode","_getCurrentCrossProps","_getCurrentCrossProps2","_getCurrentCrossProps3","_props2$finishButtonP","isLast","isFirst","buttonSize","Button","_mergeProps","skipButtonProps","prevButtonProps","nextButtonProps","finishButtonProps","renderTitle","functionTitle","title","slotTitle","renderTooltipBody","bodyRender","descBody","desc","renderPopupContent","footerClasses","action","renderPopupGuide","_currentStepInfo$valu2","content","contentProps","renderBody","classes","innerClassName","_defineProperty","Popup","placement","popupProps","stepOverlayClass","overlayInnerClassName","renderDialogGuide","_ref3","wrapperClasses","dialogClasses","renderGuide","Teleport","_default"],"mappings":"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"}