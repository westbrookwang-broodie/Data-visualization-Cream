{"version":3,"file":"multiple-flow-list.js","sources":["../../../src/upload/themes/multiple-flow-list.tsx"],"sourcesContent":["import { computed, defineComponent, toRefs, PropType } from 'vue';\nimport {\n  BrowseIcon as TdBrowseIcon,\n  DeleteIcon as TdDeleteIcon,\n  CheckCircleFilledIcon as TdCheckCircleFilledIcon,\n  ErrorCircleFilledIcon as TdErrorCircleFilledIcon,\n  TimeFilledIcon as TdTimeFilledIcon,\n} from 'tdesign-icons-vue-next';\nimport useGlobalIcon from '../../hooks/useGlobalIcon';\nimport ImageViewer from '../../image-viewer';\nimport { CommonDisplayFileProps } from '../interface';\nimport { commonProps } from '../constants';\nimport TButton from '../../button';\nimport { UploadFile, TdUploadProps } from '../type';\nimport useDrag, { UploadDragEvents } from '../hooks/useDrag';\nimport { abridgeName, returnFileSize } from '../../_common/js/upload/utils';\nimport TLoading from '../../loading';\nimport { useTNodeJSX } from '../../hooks';\nimport Link from '../../link';\nimport { UploadConfig } from '../../config-provider';\n\nexport interface ImageFlowListProps extends CommonDisplayFileProps {\n  uploadFiles?: (toFiles?: UploadFile[]) => void;\n  cancelUpload?: (context: { e: MouseEvent; file?: UploadFile }) => void;\n  dragEvents: UploadDragEvents;\n  disabled?: boolean;\n  isBatchUpload?: boolean;\n  draggable?: boolean;\n  onPreview?: TdUploadProps['onPreview'];\n}\n\nexport default defineComponent({\n  name: 'UploadMultipleFlowList',\n\n  props: {\n    ...commonProps,\n    uploadFiles: Function as PropType<ImageFlowListProps['uploadFiles']>,\n    cancelUpload: Function as PropType<ImageFlowListProps['cancelUpload']>,\n    dragEvents: Object as PropType<ImageFlowListProps['dragEvents']>,\n    disabled: Boolean,\n    isBatchUpload: Boolean,\n    draggable: Boolean,\n    onPreview: Function as PropType<ImageFlowListProps['onPreview']>,\n  },\n\n  setup(props, { slots }) {\n    // locale 已经在 useUpload 中统一处理优先级\n    const { uploading, disabled, displayFiles, classPrefix } = toRefs(props);\n    const uploadPrefix = computed(() => `${classPrefix.value}-upload`);\n\n    const locale = computed(() => props.locale as UploadConfig);\n\n    const renderTNodeJSX = useTNodeJSX();\n\n    const { BrowseIcon, DeleteIcon, CheckCircleFilledIcon, ErrorCircleFilledIcon, TimeFilledIcon } = useGlobalIcon({\n      BrowseIcon: TdBrowseIcon,\n      DeleteIcon: TdDeleteIcon,\n      CheckCircleFilledIcon: TdCheckCircleFilledIcon,\n      ErrorCircleFilledIcon: TdErrorCircleFilledIcon,\n      TimeFilledIcon: TdTimeFilledIcon,\n    });\n\n    const drag = useDrag(props.dragEvents);\n\n    const uploadText = computed(() => {\n      if (uploading.value) return `${locale.value.progress.uploadingText}`;\n      return locale.value.triggerUploadText.normal;\n    });\n\n    const innerDragEvents = computed(() => {\n      const draggable = props.draggable === undefined ? true : props.draggable;\n      return draggable\n        ? {\n            onDrop: drag.handleDrop,\n            onDragenter: drag.handleDragenter,\n            onDragover: drag.handleDragover,\n            onDragleave: drag.handleDragleave,\n          }\n        : {};\n    });\n\n    const getStatusMap = () => {\n      const iconMap = {\n        success: <CheckCircleFilledIcon />,\n        fail: <ErrorCircleFilledIcon />,\n        progress: <TLoading />,\n        waiting: <TimeFilledIcon />,\n      };\n      const { progress } = locale.value;\n      const textMap = {\n        success: progress?.successText,\n        fail: progress?.failText,\n        progress: progress?.uploadingText,\n        waiting: progress?.waitingText,\n      };\n      return {\n        iconMap,\n        textMap,\n      };\n    };\n\n    const renderEmpty = () => (\n      <div class={`${uploadPrefix.value}__flow-empty`}>\n        {drag.dragActive.value ? locale.value.dragger.dragDropText : locale.value.dragger.clickAndDragText}\n      </div>\n    );\n\n    const renderImgItem = (file: UploadFile, index: number) => {\n      const { iconMap, textMap } = getStatusMap();\n      const fileName = props.abridgeName && file.name ? abridgeName(file.name, ...props.abridgeName) : file.name;\n      return (\n        <li class={`${uploadPrefix.value}__card-item`} key={file.name + index + file.percent + file.status || '0'}>\n          <div\n            class={[\n              `${uploadPrefix.value}__card-content`,\n              { [`${classPrefix.value}-is-bordered`]: file.status !== 'waiting' },\n            ]}\n          >\n            {['fail', 'progress'].includes(file.status) && (\n              <div\n                class={`${uploadPrefix.value}__card-status-wrap ${uploadPrefix.value}__${props.theme}-${file.status}`}\n              >\n                {iconMap[file.status as 'fail' | 'progress']}\n                <p>\n                  {textMap[file.status as 'fail' | 'progress']}\n                  {file.status === 'progress' ? ` ${file.percent}%` : ''}\n                </p>\n              </div>\n            )}\n            {(['waiting', 'success'].includes(file.status) || (!file.status && file.url)) && (\n              <img\n                class={`${uploadPrefix.value}__card-image`}\n                src={file.url || '//tdesign.gtimg.com/tdesign-default-img.png'}\n              />\n            )}\n            <div class={`${uploadPrefix.value}__card-mask`}>\n              {file.url && (\n                <span class={`${uploadPrefix.value}__card-mask-item`}>\n                  <ImageViewer\n                    images={displayFiles.value.map((t) => t.url)}\n                    defaultIndex={index}\n                    trigger={(h, { open }) => (\n                      <BrowseIcon\n                        onClick={({ e }: { e: MouseEvent }) => {\n                          open();\n                          props.onPreview?.({ file, index, e });\n                        }}\n                      />\n                    )}\n                  ></ImageViewer>\n                  <span class={`${uploadPrefix.value}__card-mask-item-divider`}></span>\n                </span>\n              )}\n              {!disabled.value && (\n                <span\n                  class={`${uploadPrefix.value}__card-mask-item ${uploadPrefix.value}__delete`}\n                  onClick={(e: MouseEvent) => props.onRemove({ e, index, file })}\n                >\n                  <DeleteIcon />\n                </span>\n              )}\n            </div>\n          </div>\n          <p class={`${uploadPrefix.value}__card-name`}>{fileName}</p>\n        </li>\n      );\n    };\n\n    const renderStatus = (file: UploadFile) => {\n      const { iconMap, textMap } = getStatusMap();\n      return (\n        <div class={`${uploadPrefix.value}__flow-status`}>\n          {iconMap[file.status]}\n          <span class={`${uploadPrefix.value}__${props.theme}-${file.status}`}>\n            {textMap[file.status]}\n            {props.showUploadProgress && file.status === 'progress' ? ` ${file.percent || 0}%` : ''}\n          </span>\n        </div>\n      );\n    };\n\n    const renderNormalActionCol = (file: UploadFile, index: number) => (\n      <td>\n        <TButton\n          theme=\"primary\"\n          variant=\"text\"\n          content={locale.value?.triggerUploadText?.delete}\n          class={`${uploadPrefix.value}__delete`}\n          onClick={(e: MouseEvent) => props.onRemove({ e, index, file })}\n        ></TButton>\n      </td>\n    );\n\n    // batchUpload action col\n    const renderBatchActionCol = (index: number) =>\n      // 第一行数据才需要合并单元格\n      index === 0 ? (\n        <td rowSpan={displayFiles.value.length} class={`${uploadPrefix.value}__flow-table__batch-row`}>\n          <TButton\n            theme=\"primary\"\n            variant=\"text\"\n            content={locale.value?.triggerUploadText?.delete}\n            class={`${uploadPrefix.value}__delete`}\n            onClick={(e: MouseEvent) => props.onRemove({ e, index: -1, file: undefined })}\n          ></TButton>\n        </td>\n      ) : null;\n\n    const renderFileList = () => {\n      const customList = renderTNodeJSX('fileListDisplay', {\n        params: {\n          files: props.displayFiles,\n          dragEvents: innerDragEvents.value,\n        },\n      });\n      if (customList || props.fileListDisplay) return customList;\n      return (\n        <table class={`${uploadPrefix.value}__flow-table`} {...innerDragEvents.value}>\n          <thead>\n            <tr>\n              <th>{locale.value.file?.fileNameText}</th>\n              <th style={{ minWidth: '120px' }}>{locale.value.file?.fileSizeText}</th>\n              <th style={{ minWidth: '120px' }}>{locale.value.file?.fileStatusText}</th>\n              {disabled.value ? null : <th>{locale.value.file?.fileOperationText}</th>}\n            </tr>\n          </thead>\n          <tbody>\n            {!displayFiles.value.length && (\n              <tr>\n                <td colSpan={4}>{renderEmpty()}</td>\n              </tr>\n            )}\n            {displayFiles.value.map((file, index) => {\n              // 合并操作出现条件为：当前为合并上传模式且列表内没有待上传文件\n              const showBatchUploadAction = props.isBatchUpload;\n              const deleteNode =\n                showBatchUploadAction && displayFiles.value.every((item) => item.status === 'success' || !item.status)\n                  ? renderBatchActionCol(index)\n                  : renderNormalActionCol(file, index);\n              const fileName = props.abridgeName?.length ? abridgeName(file.name, ...props.abridgeName) : file.name;\n              return (\n                <tr key={file.name + index + file.percent + file.status || '0'}>\n                  <td class={`${uploadPrefix.value}__file-name`}>\n                    {file.url ? (\n                      <Link href={file.url} target=\"_blank\" hover=\"color\">\n                        {fileName}\n                      </Link>\n                    ) : (\n                      fileName\n                    )}\n                  </td>\n                  <td>{returnFileSize(file.size)}</td>\n                  <td>{renderStatus(file)}</td>\n                  {disabled.value ? null : deleteNode}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      );\n    };\n\n    const renderImageList = () => {\n      const customList = renderTNodeJSX('fileListDisplay', {\n        params: {\n          files: props.displayFiles,\n          dragEvents: innerDragEvents.value,\n        },\n      });\n      if (customList || props.fileListDisplay) return customList;\n      return (\n        <ul class={`${uploadPrefix.value}__card clearfix`}>\n          {props.displayFiles.map((file, index) => renderImgItem(file, index))}\n        </ul>\n      );\n    };\n\n    return () => {\n      const cardClassName = `${uploadPrefix.value}__flow-card-area`;\n      return (\n        <div class={`${uploadPrefix.value}__flow ${uploadPrefix.value}__flow-${props.theme}`}>\n          <div class={`${uploadPrefix.value}__flow-op`}>\n            {slots.default?.()}\n            {props.placeholder && (\n              <small class={`${uploadPrefix.value}__flow-placeholder ${uploadPrefix.value}__placeholder`}>\n                {props.placeholder}\n              </small>\n            )}\n          </div>\n\n          {props.theme === 'image-flow' && (\n            <div class={cardClassName} {...innerDragEvents.value}>\n              {displayFiles.value.length ? renderImageList() : renderEmpty()}\n            </div>\n          )}\n\n          {props.theme === 'file-flow' &&\n            (displayFiles.value.length ? (\n              renderFileList()\n            ) : (\n              <div class={cardClassName} {...innerDragEvents.value}>\n                {renderEmpty()}\n              </div>\n            ))}\n\n          {!props.autoUpload && (\n            <div class={`${uploadPrefix.value}__flow-bottom`}>\n              <TButton\n                theme=\"default\"\n                disabled={disabled.value || !uploading.value}\n                content={locale.value?.cancelUploadText}\n                class={`${uploadPrefix.value}__cancel`}\n                onClick={(e) => props.cancelUpload?.({ e })}\n              ></TButton>\n              <TButton\n                disabled={disabled.value || uploading.value || !displayFiles.value.length}\n                theme=\"primary\"\n                loading={uploading.value}\n                class={`${uploadPrefix.value}__continue`}\n                content={uploadText.value}\n                onClick={() => props.uploadFiles?.()}\n              ></TButton>\n            </div>\n          )}\n        </div>\n      );\n    };\n  },\n});\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","defineComponent","name","props","_objectSpread","commonProps","uploadFiles","Function","cancelUpload","dragEvents","disabled","Boolean","isBatchUpload","draggable","onPreview","setup","_ref","slots","_toRefs","toRefs","uploading","displayFiles","classPrefix","uploadPrefix","computed","concat","value","locale","renderTNodeJSX","useTNodeJSX","_useGlobalIcon","useGlobalIcon","BrowseIcon","TdBrowseIcon","DeleteIcon","TdDeleteIcon","CheckCircleFilledIcon","TdCheckCircleFilledIcon","ErrorCircleFilledIcon","TdErrorCircleFilledIcon","TimeFilledIcon","TdTimeFilledIcon","drag","useDrag","uploadText","progress","uploadingText","triggerUploadText","normal","innerDragEvents","onDrop","handleDrop","onDragenter","handleDragenter","onDragover","handleDragover","onDragleave","handleDragleave","getStatusMap","iconMap","success","_createVNode","fail","TLoading","waiting","textMap","successText","failText","waitingText","renderEmpty","dragActive","dragger","dragDropText","clickAndDragText","renderImgItem","file","index","_getStatusMap","fileName","abridgeName","apply","_toConsumableArray","percent","status","_defineProperty","includes","theme","url","ImageViewer","map","t","trigger","h","_ref3","open","onClick","_ref4","_props$onPreview","e","onRemove","renderStatus","_getStatusMap2","showUploadProgress","renderNormalActionCol","_locale$value","_locale$value$trigger","TButton","renderBatchActionCol","_locale$value2","_locale$value2$trigge","length","renderFileList","_locale$value$file","_locale$value$file2","_locale$value$file3","_locale$value$file4","customList","params","files","fileListDisplay","_mergeProps","fileNameText","minWidth","fileSizeText","fileStatusText","fileOperationText","_props$abridgeName","showBatchUploadAction","deleteNode","every","item","_default","returnFileSize","size","renderImageList","_slots$default","_locale$value3","cardClassName","placeholder","autoUpload","cancelUploadText","_props$cancelUpload","_props$uploadFiles"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBiB,SAAAA,QAAAC,CAAA,EAAA;AAAA,EAAA,OAAA,OAAAA,CAAA,KAAA,UAAA,IAAAC,MAAA,CAAAC,SAAA,CAAAC,QAAA,CAAAC,IAAA,CAAAJ,CAAA,CAAAK,KAAAA,iBAAAA,IAAAA,CAAAA,OAAA,CAAAL,CAAA,CAAA,CAAA;AAAA,CAAA;AAajB,uBAAeM,eAAgB,CAAA;AAC7BC,EAAAA,IAAM,EAAA,wBAAA;AAENC,EAAAA,KAAO,EAAAC,aAAA,CAAAA,aAAA,KACFC,WAAA,CAAA,EAAA,EAAA,EAAA;AACHC,IAAAA,WAAa,EAAAC,QAAA;AACbC,IAAAA,YAAc,EAAAD,QAAA;AACdE,IAAAA,UAAY,EAAAb,MAAA;AACZc,IAAAA,QAAU,EAAAC,OAAA;AACVC,IAAAA,aAAe,EAAAD,OAAA;AACfE,IAAAA,SAAW,EAAAF,OAAA;AACXG,IAAAA,SAAW,EAAAP,QAAAA;GACb,CAAA;AAEAQ,EAAAA,KAAM,EAAAA,SAAAA,KAAAA,CAAAZ,KAAA,EAAAa,IAAA,EAAkB;AAAA,IAAA,IAATC,KAAA,GAAAD,IAAA,CAAAC,KAAA,CAAA;AAEb,IAAA,IAAAC,OAAA,GAA2DC,OAAOhB,KAAK,CAAA;MAA/DiB,SAAW,GAAAF,OAAA,CAAXE,SAAW;MAAAV,QAAA,GAAAQ,OAAA,CAAAR,QAAA;MAAUW,uBAAAA;MAAcC,WAAY,GAAAJ,OAAA,CAAZI,WAAY,CAAA;IACvD,IAAMC,YAAe,GAAAC,QAAA,CAAS,YAAA;AAAA,MAAA,OAAA,EAAA,CAAAC,MAAA,CAASH,YAAYI,KAAc,EAAA,SAAA,CAAA,CAAA;AAAA,KAAA,CAAA,CAAA;IAEjE,IAAMC,MAAS,GAAAH,QAAA,CAAS,YAAA;MAAA,OAAMrB,KAAA,CAAMwB,MAAsB,CAAA;KAAA,CAAA,CAAA;IAE1D,IAAMC,iBAAiBC,WAAY,EAAA,CAAA;IAEnC,IAAAC,cAAA,GAAiGC,aAAc,CAAA;AAC7GC,QAAAA,UAAY,EAAAC,UAAA;AACZC,QAAAA,UAAY,EAAAC,UAAA;AACZC,QAAAA,qBAAuB,EAAAC,qBAAA;AACvBC,QAAAA,qBAAuB,EAAAC,qBAAA;AACvBC,QAAAA,cAAgB,EAAAC,cAAAA;AAClB,OAAC,CAAA;MANOT,YAAY,GAAAF,cAAA,CAAZE,UAAY;MAAAE,YAAA,GAAAJ,cAAA,CAAAI,UAAA;MAAYE,yCAAAA;MAAuBE,uBAAuB,GAAAR,cAAA,CAAvBQ,qBAAuB;MAAAE,gBAAA,GAAAV,cAAA,CAAAU,cAAA,CAAA;AAQxE,IAAA,IAAAE,IAAA,GAAOC,OAAQ,CAAAxC,KAAA,CAAMM,UAAU,CAAA,CAAA;AAE/B,IAAA,IAAAmC,UAAA,GAAapB,SAAS,YAAM;AAChC,MAAA,IAAIJ,SAAU,CAAAM,KAAA,EAAc,OAAAD,EAAAA,CAAAA,MAAA,CAAGE,MAAO,CAAAD,KAAA,CAAMmB,QAAS,CAAAC,aAAA,CAAA,CAAA;AAC9C,MAAA,OAAAnB,MAAA,CAAOD,MAAMqB,iBAAkB,CAAAC,MAAA,CAAA;AACxC,KAAC,CAAA,CAAA;AAEK,IAAA,IAAAC,eAAA,GAAkBzB,SAAS,YAAM;AACrC,MAAA,IAAMX,SAAY,GAAAV,KAAA,CAAMU,SAAc,KAAA,KAAA,CAAA,GAAY,OAAOV,KAAM,CAAAU,SAAA,CAAA;AAC/D,MAAA,OAAOA,SACH,GAAA;QACEqC,QAAQR,IAAK,CAAAS,UAAA;QACbC,aAAaV,IAAK,CAAAW,eAAA;QAClBC,YAAYZ,IAAK,CAAAa,cAAA;QACjBC,aAAad,IAAK,CAAAe,eAAAA;UAEpB,EAAC,CAAA;AACP,KAAC,CAAA,CAAA;AAED,IAAA,IAAMC,eAAe,SAAfA,eAAqB;AACzB,MAAA,IAAMC,OAAU,GAAA;AACdC,QAAAA,OAAA,EAAAC,WAAA,CAAAzB,uBAAA,EAAgC,IAAA,EAAA,IAAA,CAAA;AAChC0B,QAAAA,IAAA,EAAAD,WAAA,CAAAvB,uBAAA,EAA6B,IAAA,EAAA,IAAA,CAAA;AAC7BO,QAAAA,QAAA,EAAAgB,WAAA,CAAAE,OAAA,EAAoB,IAAA,EAAA,IAAA,CAAA;QACpBC,OAAA,EAAAH,WAAA,CAAArB,gBAAA,EAAA,IAAA,EAAA,IAAA,CAAA;OACF,CAAA;AACM,MAAA,IAAEK,QAAS,GAAIlB,MAAO,CAAAD,KAAA,CAApBmB,QAAS,CAAA;AACjB,MAAA,IAAMoB,OAAU,GAAA;AACdL,QAAAA,SAASf,QAAU,KAAA,IAAA,IAAVA,QAAU,KAAVA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,QAAU,CAAAqB,WAAA;AACnBJ,QAAAA,MAAMjB,QAAU,KAAA,IAAA,IAAVA,QAAU,KAAVA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,QAAU,CAAAsB,QAAA;AAChBtB,QAAAA,UAAUA,QAAU,KAAA,IAAA,IAAVA,QAAU,KAAVA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,QAAU,CAAAC,aAAA;AACpBkB,QAAAA,SAASnB,QAAU,KAAA,IAAA,IAAVA,QAAU,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAVA,QAAU,CAAAuB,WAAAA;OACrB,CAAA;MACO,OAAA;AACLT,QAAAA,OAAA,EAAAA,OAAA;AACAM,QAAAA,OAAA,EAAAA,OAAAA;OACF,CAAA;KACF,CAAA;AAEA,IAAA,IAAMI,cAAc,SAAdA;;2BACW9C,aAAaG,KACzB,EAAA,cAAA,CAAA;OAAAgB,EAAAA,CAAAA,IAAA,CAAK4B,WAAW5C,KAAQ,GAAAC,MAAA,CAAOD,MAAM6C,OAAQ,CAAAC,YAAA,GAAe7C,OAAOD,KAAM,CAAA6C,OAAA,CAAQE;KADnF,CAAA;IAKG,IAAAC,aAAA,GAAgB,SAAhBA,aAAAA,CAAiBC,IAAA,EAAkBC,KAAkB,EAAA;MACzD,IAAAC,aAAA,GAA6BnB,YAAa,EAAA;QAAlCC,OAAA,GAAAkB,aAAA,CAAAlB,OAAA;QAASM,OAAQ,GAAAY,aAAA,CAARZ,OAAQ,CAAA;AACzB,MAAA,IAAMa,QAAW,GAAA3E,KAAA,CAAM4E,WAAe,IAAAJ,IAAA,CAAKzE,IAAO,GAAA6E,WAAA,CAAAC,KAAA,CAAA,KAAA,CAAA,EAAA,CAAYL,IAAK,CAAAzE,IAAA,CAAA,CAAAuB,MAAA,CAAAwD,kBAAA,CAAS9E,KAAA,CAAM4E,WAAW,CAAA,CAAA,CAAA,GAAIJ,IAAK,CAAAzE,IAAA,CAAA;AACtG,MAAA,OAAA2D,WAAA,CAAA,IAAA,EAAA;AAAA,QAAA,OAAA,EAAA,EAAA,CAAApC,MAAA,CACgBF,YAAa,CAAAG,KAAA,EAAA,aAAA,CAAA;AAAA,QAAA,KAAA,EAAyBiD,IAAA,CAAKzE,IAAO,GAAA0E,KAAA,GAAQD,IAAK,CAAAO,OAAA,GAAUP,KAAKQ,MAAU,IAAA,GAAA;AAAA,OAAA,EAAA,CAAAtB,WAAA,CAAA,KAAA,EAAA;AAAA,QAAA,OAAA,EAE3F,IAAApC,MAAA,CACFF,YAAa,CAAAG,KAAA,qBAAA0D,eAAA,CAAA,EAAA,EAAA,EAAA,CAAA3D,MAAA,CACVH,YAAYI,KAAsB,EAAA,cAAA,CAAA,EAAAiD,IAAA,CAAKQ,WAAW,SAAU,CAAA,CAAA;AACpE,OAAA,EAAA,CAEC,CAAC,MAAQ,EAAA,UAAU,EAAEE,QAAS,CAAAV,IAAA,CAAKQ,MAAM,CACxC,IAAAtB,WAAA,CAAA,KAAA,EAAA;QAAA,OAAApC,EAAAA,EAAAA,CAAAA,MAAA,CACYF,YAAa,CAAAG,KAAA,EAAAD,qBAAAA,CAAAA,CAAAA,MAAA,CAA2BF,aAAaG,KAAU,QAAAD,MAAA,CAAAtB,KAAA,CAAMmF,mBAASX,IAAK,CAAAQ,MAAA,CAAA;OAE5FxB,EAAAA,CAAAA,QAAQgB,IAAK,CAAAQ,MAAA,CAAA,EAAAtB,WAAA,CAEXI,GAAAA,EAAAA,IAAAA,EAAAA,CAAAA,QAAQU,IAAK,CAAAQ,MAAA,CAAA,EACbR,IAAK,CAAAQ,MAAA,KAAW,UAAa,GAAA1D,GAAAA,CAAAA,MAAA,CAAIkD,KAAKO,OAAa,SAAA,EAAA,CAAA,CAAA,CAAA,CANvD,EAUD,CAAA,CAAC,WAAW,SAAS,CAAA,CAAEG,SAASV,IAAK,CAAAQ,MAAM,CAAM,IAAA,CAACR,IAAK,CAAAQ,MAAA,IAAUR,KAAKY,GACtE,KAAA1B,WAAA,CAAA,KAAA,EAAA;AAAA,QAAA,OAAA,EAAA,EAAA,CAAApC,MAAA,CACYF,aAAaG,KACvB,EAAA,cAAA,CAAA;QAAA,KAAKiD,EAAAA,IAAK,CAAAY,GAAA,IAAO,6CAAA;AACnB,OAAA,EAAA,IAAA,CAAA,EAAA1B,WAAA,CAAA,KAAA,EAAA;AAAA,QAAA,OAAA,EAAA,EAAA,CAAApC,MAAA,CAEaF,YAAa,CAAAG,KAAA,EAAA,aAAA,CAAA;AAAA,OAAA,EAAA,CACzBiD,KAAKY,GACJ,IAAA1B,WAAA,CAAA,MAAA,EAAA;AAAA,QAAA,OAAA,EAAA,EAAA,CAAApC,MAAA,CAAgBF,YAAa,CAAAG,KAAA,EAAA,kBAAA,CAAA;OAAAmC,EAAAA,CAAAA,WAAA,CAAA2B,WAAA,EAAA;AAAA,QAAA,QAAA,EAEjBnE,YAAa,CAAAK,KAAA,CAAM+D,IAAI,UAACC,CAAA,EAAA;UAAA,OAAMA,CAAE,CAAAH,GAAG,CAAA;SAC3C,CAAA;AAAA,QAAA,cAAA,EAAcX;mBACL,SAAAe,OAAAA,CAACC,CAAG,EAAAC,KAAA,EAAA;AAAA,UAAA,IAAEC,IAAK,GAAAD,KAAA,CAALC,IAAK,CAAA;UAAA,OAAAjC,WAAA,CAAA7B,YAAA,EAAA;YAAA,SAEP,EAAA,SAAA+D,OAAAC,CAAAA,KAAA,EAA8B;AAAA,cAAA,IAAAC,gBAAA,CAAA;AAAA,cAAA,IAA3BC,CAAA,GAAAF,KAAA,CAAAE,CAAA,CAAA;AACLJ,cAAAA,IAAA,EAAA,CAAA;AACL,cAAA,CAAAG,gBAAA,GAAA9F,KAAA,CAAMW,SAAY,MAAA,IAAA,IAAAmF,gBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAlBA,gBAAA,CAAAlG,IAAA,CAAAI,KAAA,EAAkB;AAAEwE,gBAAAA,IAAM,EAANA,IAAM;AAAAC,gBAAAA,KAAA,EAAAA,KAAA;AAAOsB,gBAAAA,GAAAA,CAAAA;AAAE,eAAC,CAAA,CAAA;AACtC,aAAA;;;AAGL,OAAA,EAAA,IAAA,CAAA,EAAArC,WAAA,CAAA,MAAA,EAAA;AAAA,QAAA,OAAA,EAAA,EAAA,CAAApC,MAAA,CACeF,aAAaG,KAAiC,EAAA,0BAAA,CAAA;AAAA,OAAA,EAAA,IAAA,CAAA,CAAA,CAb/D,EAgBF,CAAChB,QAAS,CAAAgB,KAAA,IAAAmC,WAAA,CAAA,MAAA,EAAA;QAAA,OAAApC,EAAAA,EAAAA,CAAAA,MAAA,CAEGF,YAAA,CAAaG,KAAyB,uBAAAD,MAAA,CAAAF,YAAA,CAAaG,KAC7D,EAAA,UAAA,CAAA;QAAA,SAAS,EAAA,SAAAqE,QAACG,CAAkB,EAAA;UAAA,OAAA/F,KAAA,CAAMgG,QAAS,CAAA;AAAED,YAAAA,CAAG,EAAHA,CAAG;AAAAtB,YAAAA,KAAA,EAAAA,KAAA;AAAOD,YAAAA,IAAK,EAALA,IAAAA;AAAK,WAAC,CAE7D,CAAA;AAAA,SAAA;AAAA,OAAA,EAAA,CAAAd,WAAA,CAAA3B,YAAA,EAAA,IAAA,EAAA,IAAA,CAAA,CAAA,CAJD,MAAA2B,WAAA,CAAA,GAAA,EAAA;AAAA,QAAA,OAAA,EAAA,EAAA,CAAApC,MAAA,CASMF,YAAa,CAAAG,KAAA,EAAA,aAAA,CAAA;AAAA,OAAA,EAAA,CAAqBoD;KAGrD,CAAA;AAEM,IAAA,IAAAsB,YAAA,GAAe,SAAfA,YAAAA,CAAgBzB,IAAqB,EAAA;MACzC,IAAA0B,cAAA,GAA6B3C,YAAa,EAAA;QAAlCC,OAAA,GAAA0C,cAAA,CAAA1C,OAAA;QAASM,OAAQ,GAAAoC,cAAA,CAARpC,OAAQ,CAAA;AACzB,MAAA,OAAAJ,WAAA,CAAA,KAAA,EAAA;AAAA,QAAA,OAAA,EAAA,EAAA,CAAApC,MAAA,CACiBF,YAAa,CAAAG,KAAA,EAAA,eAAA,CAAA;AAAA,OAAA,EAAA,CACzBiC,QAAQgB,IAAK,CAAAQ,MAAA,CAAA,EAAAtB,WAAA,CAAA,MAAA,EAAA;AAAA,QAAA,OAAA,EAAA,EAAA,CAAApC,MAAA,CACEF,aAAaG,KAAU,QAAAD,MAAA,CAAAtB,KAAA,CAAMmF,mBAASX,IAAK,CAAAQ,MAAA,CAAA;OACxDlB,EAAAA,CAAAA,QAAQU,IAAK,CAAAQ,MAAA,CAAA,EACbhF,KAAA,CAAMmG,sBAAsB3B,IAAK,CAAAQ,MAAA,KAAW,wBAAiBR,IAAA,CAAKO,WAAW,CAAO,EAAA,GAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA;KAI7F,CAAA;AAEA,IAAA,IAAMqB,qBAAwB,GAAA,SAAxBA,qBAAwBA,CAAC5B,IAAkB,EAAAC,KAAA,EAAA;MAAA,IAAA4B,aAAA,EAAAC,qBAAA,CAAA;AAAA,MAAA,OAAA5C,WAAA,CAAA,IAAA,EAAA,IAAA,EAAA,CAAAA,WAAA,CAAA6C,MAAA,EAAA;AAAA,QAAA,OAAA,EAGrC,SACN;AAAA,QAAA,SAAA,EAAQ,MACR;AAAA,QAAA,SAAA,EAAA,CAAAF,aAAA,GAAS7E,OAAOD,KAAO,cAAA8E,aAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAAC,qBAAA,GAAdD,aAAA,CAAczD,iBAAA,cAAA0D,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAdA,qBAAA,CACT,QAAA,CAAA;AAAA,QAAA,OAAA,EAAA,EAAA,CAAAhF,MAAA,CAAUF,YAAA,CAAaG,KACvB,EAAA,UAAA,CAAA;QAAA,SAAS,EAAA,SAAAqE,QAACG,CAAkB,EAAA;UAAA,OAAA/F,KAAA,CAAMgG,QAAS,CAAA;AAAED,YAAAA,GAAAA;AAAGtB,YAAAA,KAAO,EAAPA,KAAO;AAAAD,YAAAA,IAAA,EAAAA,IAAAA;AAAK,WAAC,CAAA,CAAA;AAAA,SAAA;AAAA,OAAA,EAAA,IAAA,CAAA,CAAA,CAAA,CAAA;KANhE,CAAA;AAYG,IAAA,IAAAgC,oBAAA,GAAuB,SAAvBA,oBAAAA,CAAwB/B,KAE5B,EAAA;MAAA,IAAAgC,cAAA,EAAAC,qBAAA,CAAA;AAAA,MAAA,OAAAjC,KAAA,KAAU;mBACKvD,YAAa,CAAAK,KAAA,CAAMoF;2BAAkBvF,aAAaG,KAC7D,EAAA,yBAAA,CAAA;OAAAmC,EAAAA,CAAAA,WAAA,CAAA6C,MAAA,EAAA;AAAA,QAAA,OAAA,EACQ,SAAA;AAAA,QAAA,SAAA,EACE,MACR;AAAA,QAAA,SAAA,EAAA,CAAAE,cAAA,GAASjF,OAAOD,KAAO,cAAAkF,cAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAAC,qBAAA,GAAdD,cAAA,CAAc7D,iBAAA,cAAA8D,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAdA,qBAAA;2BACCtF,aAAaG,KACvB,EAAA,UAAA,CAAA;QAAA,SAAS,EAAA,SAAAqE,QAACG,CAAkB,EAAA;UAAA,OAAA/F,KAAA,CAAMgG,SAAS;AAAED,YAAAA,CAAA,EAAAA,CAAA;YAAGtB,OAAO,CAAI,CAAA;AAAAD,YAAAA,IAAA,EAAM;AAAU,WAAC,CAAA,CAAA;AAAA,SAAA;AAAA,OAAA,EAAA,IAAA,CAAA,CAAA,CAAA,GAG9E,IAAA,CAAA;AAAA,KAAA,CAAA;AAEN,IAAA,IAAMoC,iBAAiB,SAAjBA,iBAAuB;AAAA,MAAA,IAAAC,kBAAA,EAAAC,mBAAA,EAAAC,mBAAA,EAAAC,mBAAA,CAAA;AACrB,MAAA,IAAAC,UAAA,GAAaxF,eAAe,iBAAmB,EAAA;AACnDyF,QAAAA,MAAQ,EAAA;UACNC,OAAOnH,KAAM,CAAAkB,YAAA;UACbZ,YAAYwC,eAAgB,CAAAvB,KAAAA;AAC9B,SAAA;AACF,OAAC,CAAA,CAAA;AACD,MAAA,IAAI0F,cAAcjH,KAAM,CAAAoH,eAAA,EAAwB,OAAAH,UAAA,CAAA;MAChD,OAAAvD,WAAA,UAAA2D,UAAA,CAAA;AAAA,QAAA,OAAA,EAAA,EAAA,CAAA/F,MAAA,CACmBF,YAAA,CAAaG;OAAyBuB,EAAAA,eAAgB,CAAAvB,KAAA,CAAAmC,EAAAA,CAAAA,WAAA,iBAAAA,WAAA,CAAA,IAAA,EAAA,IAAA,EAAA,CAAAA,WAAA,CAAA,IAAA,EAAA,IAAA,EAAA,CAAA,CAAAmD,kBAAA,GAG5DrF,MAAA,CAAOD,KAAM,CAAAiD,IAAA,MAAAqC,IAAAA,IAAAA,kBAAA,uBAAbA,kBAAA,CAAmBS;eACb,EAAA;AAAEC,UAAAA,QAAA,EAAU,OAAA;AAAQ,SAAA;AAAA,OAAA,EAAA,CAAA,CAAAT,mBAAA,GAAItF,MAAO,CAAAD,KAAA,CAAMiD,IAAM,MAAAsC,IAAAA,IAAAA,mBAAA,KAAnBA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,mBAAA,CAAmBU,YAAA,IAAA9D,WAAA,CAAA,IAAA,EAAA;QAAA,OAC3C,EAAA;AAAE6D,UAAAA,QAAA,EAAU,OAAA;AAAQ,SAAA;OAAAR,EAAAA,CAAAA,CAAAA,mBAAA,GAAIvF,MAAO,CAAAD,KAAA,CAAMiD,IAAM,MAAAuC,IAAAA,IAAAA,mBAAA,KAAnBA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,mBAAA,CAAmBU,cAAA,CAAA,CAAA,EACrDlH,QAAA,CAASgB,QAAQ,IAAO,GAAAmC,WAAA,CAAA,IAAA,EAAA,IAAA,EAAA,CAAA,CAAAsD,mBAAA,GAAKxF,MAAO,CAAAD,KAAA,CAAMiD,IAAM,MAAA,IAAA,IAAAwC,mBAAA,KAAnBA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,mBAAA,CAAmBU,iBAAA,CAAvB,CAAA,CAAA,CAAA,CAAA,CAAA,EAAAhE,WAAA,CAI3B,OAAA,EAAA,IAAA,EAAA,CAAA,CAACxC,YAAA,CAAaK,KAAM,CAAAoF,MAAA,IAAAjD,WAAA,CAAA,IAAA,EAAA,IAAA,EAAA,CAAAA,WAAA,CAAA,IAAA,EAAA;QAAA,SAEJ,EAAA,CAAA;AAAI,OAAA,EAAA,CAAAQ,WAAA,EAAc,CADhC,CAAA,CAAA,CAAA,EAIFhD,YAAa,CAAAK,KAAA,CAAM+D,GAAI,CAAA,UAACd,MAAMC,KAAU,EAAA;AAAA,QAAA,IAAAkD,kBAAA,CAAA;AAEvC,QAAA,IAAMC,wBAAwB5H,KAAM,CAAAS,aAAA,CAAA;QACpC,IAAMoH,aACJD,qBAAyB,IAAA1G,YAAA,CAAaK,MAAMuG,KAAM,CAAA,UAACC;iBAASA,IAAK,CAAA/C,MAAA,KAAW,aAAa,CAAC+C,IAAA,CAAK/C,MAAM,CAAA;SACjG,CAAA,GAAAwB,oBAAA,CAAqB/B,KAAK,CAC1B,GAAA2B,qBAAA,CAAsB5B,MAAMC,KAAK,CAAA,CAAA;AACjC,QAAA,IAAAE,QAAA,GAAW,CAAAgD,kBAAA,GAAA3H,KAAM,CAAA4E,WAAA,MAAA,IAAA,IAAA+C,kBAAA,KAANA,KAAAA,CAAAA,IAAAA,kBAAA,CAAmBhB,MAAS,GAAA/B,WAAA,CAAAC,KAAA,CAAA,KAAA,CAAA,EAAA,CAAYL,IAAK,CAAAzE,IAAA,CAAA,CAAAuB,MAAA,CAAAwD,kBAAA,CAAS9E,KAAA,CAAM4E,WAAW,CAAA,CAAA,CAAA,GAAIJ,IAAK,CAAAzE,IAAA,CAAA;AAE/F,QAAA,OAAA2D,WAAA,CAAA,IAAA,EAAA;AAAA,UAAA,KAAA,EAASc,IAAA,CAAKzE,OAAO0E,KAAQ,GAAAD,IAAA,CAAKO,OAAU,GAAAP,IAAA,CAAKQ,MAAU,IAAA,GAAA;AAAA,SAAA,EAAA,CAAAtB,WAAA,CAAA,IAAA,EAAA;AAAA,UAAA,OAAA,EAAA,EAAA,CAAApC,MAAA,CAC3CF,aAAaG,KACxB,EAAA,aAAA,CAAA;AAAA,SAAA,EAAA,CAAAiD,IAAA,CAAKY;gBACQZ,EAAAA,IAAK,CAAAY,GAAA;AAAA,UAAA,QAAA,EAAY,QAAS;UAAA,OAAM,EAAA,OAAA;mBACzCT,QACH,CAAA,GADGA,QACH,GAAA;AAAA,UAAA,SAAA,EAAA,SAAAqD,QAAA,GAAA;AAAA,YAAA,OAAA,CADGrD,QACH,CAAA,CAAA;AAAA,WAAA;SAEAA,CAAAA,GAAAA,QAAA,CAAAjB,CAAAA,EAAAA,WAAA,CAGCuE,IAAAA,EAAAA,IAAAA,EAAAA,CAAAA,cAAA,CAAezD,IAAK,CAAA0D,IAAI,8BACxBjC,YAAa,CAAAzB,IAAI,EACrBjE,CAAAA,EAAAA,QAAA,CAASgB,QAAQ,IAAO,GAAAsG,UAAA,CAAA,CAAA,CAAA;AAG/B,OAAC,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;KAIT,CAAA;AAEA,IAAA,IAAMM,kBAAkB,SAAlBA,kBAAwB;AACtB,MAAA,IAAAlB,UAAA,GAAaxF,eAAe,iBAAmB,EAAA;AACnDyF,QAAAA,MAAQ,EAAA;UACNC,OAAOnH,KAAM,CAAAkB,YAAA;UACbZ,YAAYwC,eAAgB,CAAAvB,KAAAA;AAC9B,SAAA;AACF,OAAC,CAAA,CAAA;AACD,MAAA,IAAI0F,cAAcjH,KAAM,CAAAoH,eAAA,EAAwB,OAAAH,UAAA,CAAA;AAChD,MAAA,OAAAvD,WAAA,CAAA,IAAA,EAAA;AAAA,QAAA,OAAA,EAAA,EAAA,CAAApC,MAAA,CACgBF,YAAA,CAAaG;OACxBvB,EAAAA,CAAAA,KAAM,CAAAkB,YAAA,CAAaoE,GAAI,CAAA,UAACd,MAAMC,KAAU,EAAA;AAAA,QAAA,OAAAF,aAAA,CAAcC,MAAMC,KAAK,CAAC,CAAA;;KAGzE,CAAA;AAEA,IAAA,OAAO,YAAM;MAAA,IAAA2D,cAAA,EAAAC,cAAA,CAAA;AACL,MAAA,IAAAC,aAAA,GAAAhH,EAAAA,CAAAA,MAAA,CAAmBF,YAAa,CAAAG,KAAA,EAAA,kBAAA,CAAA,CAAA;AAEpC,MAAA,OAAAmC,WAAA,CAAA,KAAA,EAAA;AAAA,QAAA,OAAA,EAAA,EAAA,CAAApC,MAAA,CAAeF,aAAaG,KAAe,aAAAD,MAAA,CAAAF,YAAA,CAAaG,yBAAevB,KAAM,CAAAmF,KAAA,CAAA;AAAA,OAAA,EAAA,CAAAzB,WAAA,CAAA,KAAA,EAAA;AAAA,QAAA,OAAA,EAAA,EAAA,CAAApC,MAAA,CAC5DF,YAAa,CAAAG,KAAA,EAAA,WAAA,CAAA;AAAA,OAAA,EAAA,CAAA,CAAA6G,cAAA,GACzBtH,gBAAgB,MAAAsH,IAAAA,IAAAA,cAAA,uBAAhBA,cAAA,CAAAxI,IAAA,CAAAkB,MAAgB,EAChBd,KAAM,CAAAuI,WAAA,IAAA7E,WAAA,CAAA,OAAA,EAAA;QAAA,OAAApC,EAAAA,EAAAA,CAAAA,MAAA,CACYF,YAAa,CAAAG,KAAA,yBAAAD,MAAA,CAA2BF,YAAa,CAAAG,KAAA,EAAA,eAAA,CAAA;AAAA,OAAA,EAAA,CACnEvB,KAAM,CAAAuI,WAAA,CAAA,CADR,CAMJvI,CAAAA,EAAAA,MAAMmF,KAAU,KAAA,YAAA,IAAAzB,WAAA,QAAA2D,UAAA,CAAA;QAAA,OACHiB,EAAAA,aAAAA;AAAmB,OAAA,EAAAxF,eAAA,CAAgBvB,KAC5C,CAAA,EAAA,CAAAL,YAAA,CAAaK,MAAMoF,MAAS,GAAAwB,eAAA,EAAoB,GAAAjE,WAAA,GADlD,CAAA,EAKFlE,MAAMmF,KAAU,KAAA,WAAA,KACdjE,YAAa,CAAAK,KAAA,CAAMoF,SAClBC,cAAe,EAAA,GAAAlD,WAAA,QAAA2D,UAAA,CAAA;QAAA,OAEHiB,EAAAA,aAAAA;AAAmB,OAAA,EAAAxF,eAAA,CAAgBvB,KAC5C,CAAA,EAAA,CAAA2C,WAAA,IADF,CAAA,EAKJ,CAAClE,KAAM,CAAAwI,UAAA,IAAA9E,WAAA,CAAA,KAAA,EAAA;AAAA,QAAA,OAAA,EAAA,EAAA,CAAApC,MAAA,CACSF,YAAa,CAAAG,KAAA,EAAA,eAAA,CAAA;OAAAmC,EAAAA,CAAAA,WAAA,CAAA6C,MAAA,EAAA;AAAA,QAAA,OAAA,EAElB,SACN;AAAA,QAAA,UAAA,EAAUhG,QAAS,CAAAgB,KAAA,IAAS,CAACN,SAAA,CAAUM,KACvC;QAAA,SAAA8G,EAAAA,CAAAA,cAAA,GAAS7G,MAAO,CAAAD,KAAA,cAAA8G,cAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAPA,cAAA,CAAcI;2BACbrH,YAAa,CAAAG,KAAA,EAAA,UAAA,CAAA;QAAA,SACd,EAAA,SAAAqE,QAACG,CAAM,EAAA;AAAA,UAAA,IAAA2C,mBAAA,CAAA;AAAA,UAAA,OAAA,CAAAA,mBAAA,GAAA1I,KAAA,CAAMK,YAAe,MAAA,IAAA,IAAAqI,mBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAArBA,mBAAA,CAAA9I,IAAA,CAAAI,KAAA,EAAqB;AAAE+F,YAAAA,CAAE,EAAFA,CAAAA;AAAE,WAAC,CAC3C,CAAA;AAAA,SAAA;OAAArC,EAAAA,IAAAA,CAAAA,EAAAA,WAAA,CAAA6C,MAAA,EAAA;AAAA,QAAA,UAAA,EAEWhG,QAAS,CAAAgB,KAAA,IAASN,SAAU,CAAAM,KAAA,IAAS,CAACL,YAAA,CAAaK,KAAM,CAAAoF,MAAA;AAAA,QAAA,OAAA,EAC7D,SAAA;QAAA,SACG1F,EAAAA,SAAA,CAAUM,KACnB;AAAA,QAAA,OAAA,EAAA,EAAA,CAAAD,MAAA,CAAUF,YAAA,CAAaG,KACvB,EAAA,YAAA,CAAA;QAAA,SAASkB,EAAAA,UAAW,CAAAlB,KAAA;AAAA,QAAA,SAAA,EACX,SAAAqE,OAAA,GAAA;AAAA,UAAA,IAAA+C,kBAAA,CAAA;AAAA,UAAA,OAAA,CAAAA,kBAAA,GAAM3I,KAAM,CAAAG,WAAA,MAAA,IAAA,IAAAwI,kBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAANA,kBAAA,CAAA/I,IAAA,CAAAI,KAAM,CACtB,CAAA;AAAA,SAAA;OAfF,EAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;KAoBT,CAAA;AACF,GAAA;AACF,CAAC,CAAA;;;;"}