{"version":3,"file":"useInputNumber.js","sources":["../../src/input-number/useInputNumber.tsx"],"sourcesContent":["import { computed, onMounted, ref, toRefs, watch } from 'vue';\nimport useCommonClassName from '../hooks/useCommonClassName';\nimport useVModel from '../hooks/useVModel';\nimport { InputNumberValue, TdInputNumberProps } from './type';\n// 计算逻辑，统一到 common 中，方便各框架复用（如超过 16 位的大数处理）\nimport {\n  canAddNumber,\n  canInputNumber,\n  canReduceNumber,\n  formatToNumber,\n  getMaxOrMinValidateResult,\n  getStepValue,\n  formatThousandths,\n} from '../_common/js/input-number/number';\nimport { useFormDisabled } from '../form/hooks';\nimport { TdInputProps } from '../input';\n\nexport const specialCode = ['-', '.', 'e', 'E'];\n\n/**\n * 独立一个组件 Hook 方便用户直接使用相关逻辑 自定义任何样式的数字输入框\n */\nexport default function useInputNumber(props: TdInputNumberProps) {\n  const { classPrefix, sizeClassNames, statusClassNames } = useCommonClassName();\n  const { value, modelValue, max, min } = toRefs(props);\n  // 统一处理受控、非受控、语法糖 v-model 等\n  const [tValue, setTValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n  const inputRef = ref();\n  const userInput = ref('');\n\n  const tDisabled = useFormDisabled();\n\n  const isError = ref<'exceed-maximum' | 'below-minimum'>();\n\n  const disabledReduce = computed(\n    () => tDisabled.value || !canReduceNumber(tValue.value, props.min, props.largeNumber),\n  );\n\n  const disabledAdd = computed(() => tDisabled.value || !canAddNumber(tValue.value, props.max, props.largeNumber));\n\n  const wrapClasses = computed(() => [\n    `${classPrefix.value}-input-number`,\n    sizeClassNames[props.size],\n    {\n      [statusClassNames.disabled]: tDisabled.value,\n      [`${classPrefix.value}-is-controls-right`]: props.theme === 'column',\n      [`${classPrefix.value}-input-number--${props.theme}`]: props.theme,\n      [`${classPrefix.value}-input-number--auto-width`]: props.autoWidth,\n    },\n  ]);\n\n  const reduceClasses = computed(() => [\n    `${classPrefix.value}-input-number__decrease`,\n    { [statusClassNames.disabled]: disabledReduce.value },\n  ]);\n\n  const addClasses = computed(() => [\n    `${classPrefix.value}-input-number__increase`,\n    { [statusClassNames.disabled]: disabledAdd.value },\n  ]);\n\n  const getUserInput = (value: InputNumberValue) => {\n    if (!value && value !== 0) return '';\n    let inputStr = value || value === 0 ? String(value) : '';\n    if (!inputRef.value?.inputRef?.contains(document.activeElement)) {\n      const num = formatToNumber(inputStr, {\n        decimalPlaces: props.decimalPlaces,\n        largeNumber: props.largeNumber,\n      });\n      inputStr = num || num === 0 ? String(num) : '';\n      if (props.format) {\n        inputStr = String(props.format(value, { fixedNumber: inputStr }));\n      }\n    }\n    return inputStr;\n  };\n\n  watch(\n    tValue,\n    (val) => {\n      const inputValue = [undefined, null].includes(val) ? '' : String(val);\n      userInput.value = getUserInput(inputValue);\n    },\n    { immediate: true },\n  );\n\n  onMounted(() => {\n    userInput.value = getUserInput(tValue.value);\n  });\n\n  watch(\n    [tValue, max, min],\n    () => {\n      // @ts-ignore 没有输入完成，则无需校验\n      if ([undefined, '', null].includes(tValue.value)) return;\n      const { max, min, largeNumber } = props;\n      const error = getMaxOrMinValidateResult({\n        value: tValue.value,\n        largeNumber,\n        max,\n        min,\n      });\n      isError.value = error;\n      props.onValidate?.({ error });\n    },\n    { immediate: true },\n  );\n\n  const handleStepValue = (op: 'add' | 'reduce') => {\n    const newValue = getStepValue({\n      op,\n      step: props.step,\n      max: props.max,\n      min: props.min,\n      lastValue: tValue.value,\n      largeNumber: props.largeNumber,\n    });\n    const { largeNumber, max, min } = props;\n    const overLimit = getMaxOrMinValidateResult({\n      value: newValue,\n      largeNumber,\n      max,\n      min,\n    });\n    return {\n      overLimit,\n      newValue,\n    };\n  };\n\n  const handleReduce = (e: KeyboardEvent | MouseEvent) => {\n    if (disabledReduce.value || props.readonly) return;\n    const r = handleStepValue('reduce');\n    if (r.overLimit && !props.allowInputOverLimit) return;\n    setTValue(r.newValue, { type: 'reduce', e });\n  };\n\n  const handleAdd = (e: KeyboardEvent | MouseEvent) => {\n    if (disabledAdd.value || props.readonly) return;\n    const r = handleStepValue('add');\n    if (r.overLimit && !props.allowInputOverLimit) return;\n    setTValue(r.newValue, { type: 'add', e });\n  };\n\n  const onInnerInputChange: TdInputProps['onChange'] = (val, { e }) => {\n    val = formatThousandths(val); // 千分位处理\n    if (!canInputNumber(val, props.largeNumber)) return;\n    if (props.largeNumber) {\n      setTValue(val, { type: 'input', e });\n      return;\n    }\n    // specialCode 新增或删除这些字符时不触发 change 事件\n    const isDelete = (e as InputEvent).inputType === 'deleteContentBackward';\n    const inputSpecialCode = specialCode.includes(val.slice(-1)) || /\\.\\d*0+$/.test(val); // 输入特殊字符不改变当前值\n    const deleteSpecialCode = isDelete && specialCode.includes(String(userInput.value).slice(-1));\n    if ((!isNaN(Number(val)) && !inputSpecialCode) || deleteSpecialCode) {\n      const newVal = val === '' ? undefined : Number(val);\n      setTValue(newVal, { type: 'input', e });\n    }\n    if (inputSpecialCode || deleteSpecialCode) {\n      userInput.value = val;\n    }\n  };\n\n  const handleBlur = (value: string, ctx: { e: FocusEvent }) => {\n    const { largeNumber, max, min, decimalPlaces } = props;\n    if (!props.allowInputOverLimit && value) {\n      const r = getMaxOrMinValidateResult({ value: tValue.value, largeNumber, max, min });\n      if (r === 'below-minimum') {\n        setTValue(min, { type: 'blur', e: ctx.e });\n        return;\n      }\n      if (r === 'exceed-maximum') {\n        setTValue(max, { type: 'blur', e: ctx.e });\n        return;\n      }\n    }\n    userInput.value = getUserInput(tValue.value);\n    const newValue = formatToNumber(value, {\n      decimalPlaces,\n      largeNumber,\n    });\n    if ((newValue !== value && String(newValue) !== value) || Number(newValue) !== Number(tValue.value)) {\n      setTValue(newValue, { type: 'blur', e: ctx.e });\n    }\n    props.onBlur?.(newValue, ctx);\n  };\n\n  const handleFocus = (value: string, ctx: { e: FocusEvent }) => {\n    userInput.value = tValue.value || tValue.value === 0 ? String(tValue.value) : '';\n    props.onFocus?.(value, ctx);\n  };\n\n  const handleKeydown = (value: string, ctx: { e: KeyboardEvent }) => {\n    if (tDisabled.value) return;\n    const { e } = ctx;\n    const keyEvent = {\n      ArrowUp: handleAdd,\n      ArrowDown: handleReduce,\n    };\n    const code = e.code || e.key;\n    if (keyEvent[code] !== undefined) {\n      keyEvent[code](e);\n    }\n    props.onKeydown?.(value, ctx);\n  };\n\n  const handleKeyup = (value: string, ctx: { e: KeyboardEvent }) => {\n    props.onKeyup?.(value, ctx);\n  };\n\n  const handleKeypress = (value: string, ctx: { e: KeyboardEvent }) => {\n    props.onKeypress?.(value, ctx);\n  };\n\n  const handleEnter = (value: string, ctx: { e: KeyboardEvent }) => {\n    userInput.value = getUserInput(value);\n    const newValue = formatToNumber(value, {\n      decimalPlaces: props.decimalPlaces,\n      largeNumber: props.largeNumber,\n    });\n    if (newValue !== value && String(newValue) !== value) {\n      setTValue(newValue, { type: 'enter', e: ctx.e });\n    }\n    props.onEnter?.(newValue, ctx);\n  };\n\n  const focus = () => {\n    (inputRef.value as any).focus();\n  };\n\n  const blur = () => {\n    (inputRef.value as any).blur();\n  };\n\n  const listeners = {\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    onKeydown: handleKeydown,\n    onKeyup: handleKeyup,\n    onKeypress: handleKeypress,\n    onEnter: handleEnter,\n    onClick: focus,\n  };\n\n  return {\n    classPrefix,\n    wrapClasses,\n    reduceClasses,\n    addClasses,\n    tDisabled,\n    isError,\n    listeners,\n    userInput,\n    tValue,\n    inputRef,\n    focus,\n    blur,\n    handleReduce,\n    handleAdd,\n    onInnerInputChange,\n  };\n}\n"],"names":["specialCode","useInputNumber","props","_useCommonClassName","useCommonClassName","classPrefix","sizeClassNames","statusClassNames","_toRefs","toRefs","value","modelValue","max","min","_useVModel","useVModel","defaultValue","onChange","_useVModel2","_slicedToArray","tValue","setTValue","inputRef","ref","userInput","tDisabled","useFormDisabled","isError","disabledReduce","computed","canReduceNumber","largeNumber","disabledAdd","canAddNumber","wrapClasses","_ref","concat","size","_defineProperty","disabled","theme","autoWidth","reduceClasses","addClasses","getUserInput","_inputRef$value","_inputRef$value$input","inputStr","String","contains","document","activeElement","num","formatToNumber","decimalPlaces","format","fixedNumber","watch","val","inputValue","includes","immediate","onMounted","_props$onValidate","error","getMaxOrMinValidateResult","onValidate","call","handleStepValue","op","newValue","getStepValue","step","lastValue","overLimit","handleReduce","e","readonly","r","allowInputOverLimit","type","handleAdd","onInnerInputChange","_ref4","formatThousandths","canInputNumber","isDelete","inputType","inputSpecialCode","slice","test","deleteSpecialCode","isNaN","Number","newVal","handleBlur","ctx","_props$onBlur","onBlur","handleFocus","_props$onFocus","onFocus","handleKeydown","_props$onKeydown","keyEvent","ArrowUp","ArrowDown","code","key","onKeydown","handleKeyup","_props$onKeyup","onKeyup","handleKeypress","_props$onKeypress","onKeypress","handleEnter","_props$onEnter","onEnter","focus","blur","listeners","onClick"],"mappings":"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"}