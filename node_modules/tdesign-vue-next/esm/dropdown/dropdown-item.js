/**
 * tdesign v1.3.1
 * (c) 2023 tdesign
 * @license MIT
 */

import _defineProperty from '@babel/runtime/helpers/defineProperty';
import { defineComponent, ref, createVNode } from 'vue';
import dropdownItemProps from './dropdown-item-props.js';
import useRipple from '../hooks/useRipple.js';
import { useTNodeJSX, useContent } from '../hooks/tnode.js';
import { usePrefixClass } from '../hooks/useConfig.js';
import { pxCompat } from '../utils/helper.js';
import '../hooks/useKeepAnimation.js';
import '../config-provider/context.js';
import 'lodash/mergeWith';
import 'lodash/merge';
import '../_common/js/global-config/default-config.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '@babel/runtime/helpers/typeof';
import '../_chunks/dep-4a432092.js';
import 'dayjs';
import '../_chunks/dep-8b43daf3.js';
import 'lodash/isArray';
import '../config-provider/useConfig.js';
import 'lodash/isFunction';
import 'lodash/cloneDeep';
import 'lodash/isString';
import '../config-provider/type.js';
import '../utils/set-style.js';
import 'lodash/camelCase';
import 'lodash/kebabCase';
import '../utils/render-tnode.js';
import 'lodash/isEmpty';
import 'lodash/isObject';
import '@babel/runtime/helpers/objectWithoutProperties';
import '@babel/runtime/helpers/slicedToArray';
import 'lodash/isUndefined';
import 'lodash/isNull';
import 'lodash/isNumber';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var _DropdownItem = defineComponent({
  name: "TDropdownItem",
  props: _objectSpread(_objectSpread({}, dropdownItemProps), {}, {
    maxColumnWidth: {
      type: [String, Number],
      "default": 100
    },
    minColumnWidth: {
      type: [String, Number],
      "default": 10
    },
    isSubmenu: Boolean
  }),
  setup: function setup(props) {
    var renderTNodeJSX = useTNodeJSX();
    var renderContent = useContent();
    var itemRef = ref();
    useRipple(props.isSubmenu ? null : itemRef);
    var prefixIcon = renderTNodeJSX("prefixIcon");
    var dropdownItemClass = usePrefixClass("dropdown__item");
    var handleItemClick = function handleItemClick(e) {
      var _props$onClick;
      (_props$onClick = props.onClick) === null || _props$onClick === void 0 ? void 0 : _props$onClick.call(props, props.value, {
        e: e
      });
    };
    return function () {
      var _ref;
      var content = renderContent("default", "content");
      var classes = [dropdownItemClass.value, "".concat(dropdownItemClass.value, "--theme-").concat(props.theme), (_ref = {}, _defineProperty(_ref, "".concat(dropdownItemClass.value, "--active"), props.active), _defineProperty(_ref, "".concat(dropdownItemClass.value, "--disabled"), props.disabled), _ref)];
      return createVNode("li", {
        "class": classes,
        "onClick": handleItemClick,
        "style": {
          maxWidth: pxCompat(props.maxColumnWidth),
          minWidth: pxCompat(props.minColumnWidth)
        },
        "ref": itemRef
      }, [props.prefixIcon ? createVNode("div", {
        "class": "".concat(dropdownItemClass.value, "-icon")
      }, [prefixIcon]) : null, content]);
    };
  }
});

export { _DropdownItem as default };
//# sourceMappingURL=dropdown-item.js.map
