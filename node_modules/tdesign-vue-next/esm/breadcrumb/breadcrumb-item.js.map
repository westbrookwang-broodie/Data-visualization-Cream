{"version":3,"file":"breadcrumb-item.js","sources":["../../src/breadcrumb/breadcrumb-item.tsx"],"sourcesContent":["import { defineComponent, VNode, inject, ref, computed, getCurrentInstance, onMounted, onBeforeUpdate } from 'vue';\nimport { ChevronRightIcon as TdChevronRightIcon } from 'tdesign-icons-vue-next';\n\nimport props from './breadcrumb-item-props';\nimport Tooltip from '../tooltip/index';\nimport { isNodeOverflow } from '../utils/dom';\nimport { usePrefixClass } from '../hooks/useConfig';\nimport { useGlobalIcon } from '../hooks/useGlobalIcon';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport isFunction from 'lodash/isFunction';\n\ninterface LocalTBreadcrumb {\n  separator: (() => void) | string;\n  theme: string;\n  slots: {\n    separator: VNode | string;\n  };\n  maxItemWidth: string;\n}\n\nconst localTBreadcrumbOrigin: LocalTBreadcrumb = {\n  separator: '',\n  theme: 'light',\n  slots: { separator: '' },\n  maxItemWidth: undefined,\n};\n\nexport default defineComponent({\n  name: 'TBreadcrumbItem',\n  inheritAttrs: false,\n  props: {\n    ...props,\n  },\n  setup(props, { slots, attrs }) {\n    const breadcrumbText = ref<HTMLElement>();\n    const localTBreadcrumb = inject('tBreadcrumb', localTBreadcrumbOrigin);\n    const themeClassName = ref(localTBreadcrumb?.theme);\n    const isCutOff = ref(false);\n    const COMPONENT_NAME = usePrefixClass('breadcrumb__item');\n    const separatorClass = usePrefixClass('breadcrumb__separator');\n    const disableClass = usePrefixClass('is-disabled');\n    const linkClass = usePrefixClass('link');\n    const maxLengthClass = usePrefixClass('breadcrumb__inner');\n    const textFlowClass = usePrefixClass('breadcrumb--text-overflow');\n\n    const { ChevronRightIcon } = useGlobalIcon({ ChevronRightIcon: TdChevronRightIcon });\n    const maxWithStyle = computed(() => {\n      const maxItemWidth = localTBreadcrumb?.maxItemWidth;\n      const maxWith: string = props.maxWidth || maxItemWidth || '120';\n      return { maxWidth: `${maxWith}px` };\n    });\n\n    onMounted(() => {\n      isCutOff.value = isNodeOverflow(breadcrumbText.value);\n    });\n    onBeforeUpdate(() => {\n      isCutOff.value = isNodeOverflow(breadcrumbText.value);\n    });\n\n    const separatorPropContent = localTBreadcrumb?.separator;\n    const separatorSlot = localTBreadcrumb?.slots?.separator;\n    const separatorContent = separatorPropContent || separatorSlot || (\n      <ChevronRightIcon {...{ color: 'rgba(0,0,0,.3)' }} />\n    );\n    const { proxy } = getCurrentInstance();\n    const bindEvent = (e: MouseEvent) => {\n      if (!props.disabled) {\n        e.preventDefault();\n        if (props.href) {\n          window.location.href = props.href;\n        }\n        const router = props.router || proxy.$root.$router;\n        if (props.to && router) {\n          props.replace ? router.replace(props.to) : router.push(props.to);\n        }\n      }\n    };\n\n    return () => {\n      const renderTNodeJSX = useTNodeJSX();\n\n      const itemClass = [COMPONENT_NAME.value, themeClassName.value];\n      const textClass = [textFlowClass.value];\n\n      if (props.disabled) {\n        textClass.push(disableClass.value);\n      }\n\n      const listeners = {\n        onClick: (e: MouseEvent) => {\n          if (props.disabled) {\n            e.stopPropagation();\n            return;\n          }\n          (props as any).onClick?.({ e });\n        },\n      };\n      const textContent = (\n        <span {...{ class: maxLengthClass.value, style: maxWithStyle.value }}>\n          {renderTNodeJSX('icon')}\n          <span ref={breadcrumbText} class={`${maxLengthClass.value}-text`}>\n            {renderTNodeJSX('default')}\n          </span>\n        </span>\n      );\n      let itemContent = <span {...{ class: textClass, ...listeners }}>{textContent}</span>;\n\n      if ((props.href || props.to) && !props.disabled) {\n        textClass.push(linkClass.value);\n        itemContent = (\n          <a class={textClass} href={props.href} target={props.target} {...listeners} onClick={bindEvent}>\n            {textContent}\n          </a>\n        );\n      }\n      return (\n        <div class={itemClass} {...attrs}>\n          {isCutOff.value ? <Tooltip content={() => slots?.default()}>{itemContent}</Tooltip> : itemContent}\n          <span class={separatorClass.value}>\n            {isFunction(separatorContent) ? separatorContent() : separatorContent}\n          </span>\n        </div>\n      );\n    };\n  },\n});\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","localTBreadcrumbOrigin","separator","theme","slots","maxItemWidth","defineComponent","name","inheritAttrs","props","_objectSpread","setup","_localTBreadcrumb$slo","_ref","attrs","breadcrumbText","ref","localTBreadcrumb","inject","themeClassName","isCutOff","COMPONENT_NAME","usePrefixClass","separatorClass","disableClass","linkClass","maxLengthClass","textFlowClass","_useGlobalIcon","useGlobalIcon","ChevronRightIcon","TdChevronRightIcon","maxWithStyle","computed","maxWith","maxWidth","concat","onMounted","value","isNodeOverflow","onBeforeUpdate","separatorPropContent","separatorSlot","separatorContent","_createVNode","color","_getCurrentInstance","getCurrentInstance","proxy","bindEvent","e","disabled","preventDefault","href","window","location","router","$root","$router","to","replace","push","renderTNodeJSX","useTNodeJSX","itemClass","textClass","listeners","onClick","_props2$onClick","stopPropagation","textContent","style","itemContent","_mergeProps","target","Tooltip","content","_default","isFunction"],"mappings":"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"}