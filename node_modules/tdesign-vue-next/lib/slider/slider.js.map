{"version":3,"file":"slider.js","sources":["../../src/slider/slider.tsx"],"sourcesContent":["import {\n  defineComponent,\n  VNode,\n  ref,\n  reactive,\n  provide,\n  computed,\n  onBeforeUnmount,\n  onMounted,\n  watch,\n  toRefs,\n} from 'vue';\nimport props from './props';\nimport TSliderButton from './slider-button';\nimport { SliderValue } from './type';\n// hooks\nimport { useFormDisabled } from '../form/hooks';\nimport isArray from 'lodash/isArray';\n\nimport { usePrefixClass, useCommonClassName } from '../hooks/useConfig';\nimport { useSliderMark } from './hooks/useSliderMark';\nimport { useSliderInput } from './hooks/useSliderInput';\nimport { formatSliderValue, getStopStyle } from './util/common';\nimport { sliderPropsInjectKey } from './util/constants';\nimport useVModel from '../hooks/useVModel';\nimport isNumber from 'lodash/isNumber';\n\ninterface SliderButtonType {\n  setPosition: (param: number) => {};\n}\nexport default defineComponent({\n  name: 'TSlider',\n  model: {\n    prop: 'value',\n    event: 'change',\n  },\n  props: { ...props },\n\n  setup(props) {\n    const disabled = useFormDisabled();\n    const COMPONENT_NAME = usePrefixClass('slider');\n    const { STATUS } = useCommonClassName();\n    const { value, modelValue } = toRefs(props) as any;\n    const [sliderValue, setSliderValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n\n    const sliderContainerRef = ref<HTMLDivElement>();\n    const sliderRef = ref<HTMLDivElement>();\n    const firstButtonRef = ref<SliderButtonType>();\n    const secondButtonRef = ref<SliderButtonType>();\n\n    const firstValue = ref(formatSliderValue(sliderValue.value, 'first'));\n    const secondValue = ref(formatSliderValue(sliderValue.value, 'second'));\n    const dragging = ref(false);\n    const sliderSize = ref(1);\n\n    const vertical = computed(() => {\n      return props.layout === 'vertical';\n    });\n\n    /** ----------------- 样式计算 start ------------- */\n    const containerClass = computed(() => [`${COMPONENT_NAME.value}__container`, { 'is-vertical': vertical.value }]);\n    const sliderClass = computed(() => {\n      return [\n        `${COMPONENT_NAME.value}`,\n        {\n          'is-vertical': vertical.value,\n          [`${COMPONENT_NAME.value}--with-input`]: props.inputNumberProps,\n          [`${COMPONENT_NAME.value}--vertical`]: vertical.value,\n          [STATUS.value.disabled]: disabled.value,\n        },\n      ];\n    });\n    const sliderRailClass = computed(() => [\n      `${COMPONENT_NAME.value}__rail`,\n      { 'show-input': props.inputNumberProps, disabled: disabled.value },\n    ]);\n    const runwayStyle = computed(() => {\n      return vertical.value ? { height: '100%' } : {};\n    });\n    const barStyle = computed(() => {\n      const barStart = props.range ? `${(100 * (minValue.value - props.min)) / rangeDiff.value}%` : '0%';\n      const currentDiff = props.range ? maxValue.value - minValue.value : firstValue.value - props.min;\n      const barSize = `${(100 * currentDiff) / rangeDiff.value}%`;\n      return vertical.value\n        ? {\n            height: barSize,\n            bottom: barStart,\n          }\n        : {\n            width: barSize,\n            left: barStart,\n          };\n    });\n    /** ----------------- 样式计算 end ------------- */\n\n    // 差值范围\n    const rangeDiff = computed(() => {\n      return props.max - props.min;\n    });\n    const minValue = computed(() => {\n      return Math.min(firstValue.value, secondValue.value);\n    });\n    const maxValue = computed(() => {\n      return Math.max(firstValue.value, secondValue.value);\n    });\n    const steps = computed(() => {\n      if (!props.showStep || props.min > props.max) return [];\n      if (props.step === 0) {\n        console.warn('[Element Warn][Slider]step should not be 0.');\n        return [];\n      }\n      const stepCount = rangeDiff.value / props.step;\n      const stepWidth = (100 * props.step) / rangeDiff.value;\n      const result = [];\n      for (let i = 1; i < stepCount; i++) {\n        result.push(i * stepWidth);\n      }\n      if (props.range) {\n        const r = result.filter(\n          (step) =>\n            step < (100 * (minValue.value - props.min)) / rangeDiff.value ||\n            props.step > (100 * (maxValue.value - props.max)) / rangeDiff.value,\n        );\n        return r;\n      }\n      return result.filter((step) => step > (100 * (firstValue.value - props.min)) / rangeDiff.value);\n    });\n    const precision = computed(() => {\n      const precisions = [props.min, props.max, props.step].map((item) => {\n        const decimalArr = `${item}`.split('.');\n        return decimalArr[1] ? decimalArr[1].length : 0;\n      });\n      return Math.max.apply(null, precisions);\n    });\n    // 防止值越级\n    const setValues = (value: SliderValue): SliderValue => {\n      const [min, max] = [props.min, props.max];\n      if (min > max) {\n        console.warn('[Slider] max should be greater than min.');\n        return;\n      }\n      // 双向滑块\n      if (props.range && isArray(value)) {\n        let [maxLimit, minLimit] = [Math.min(...value), Math.max(...value)];\n        if (maxLimit > max) {\n          maxLimit = firstValue.value;\n        }\n        if (maxLimit < min) {\n          maxLimit = min;\n        }\n        if (minLimit < min) {\n          minLimit = secondValue.value;\n        }\n        if (minLimit > max) {\n          minLimit = max;\n        }\n        [firstValue.value, secondValue.value] = [maxLimit, minLimit];\n        return [maxLimit, minLimit];\n      }\n      let preValue = value;\n      if (preValue < min) {\n        preValue = min;\n      }\n      if (preValue > max) {\n        preValue = max;\n      }\n      return preValue;\n    };\n    // 只要触发修改就要有这个方法抛出change事件\n    const emitChange = (value: SliderValue) => {\n      let changeValue = value;\n      if (changeValue === undefined) {\n        if (props.range) {\n          changeValue = [firstValue.value, secondValue.value];\n        } else {\n          changeValue = firstValue.value;\n        }\n      }\n      const fixValue: SliderValue = setValues(changeValue);\n      setSliderValue(fixValue);\n    };\n\n    const resetSize = () => {\n      if (sliderRef.value) {\n        sliderSize.value = sliderRef.value[`client${vertical.value ? 'Height' : 'Width'}`];\n      }\n    };\n\n    // 是否以完成挂载（部分组合组件如inputNumber依赖于首次init后的状态值进行渲染）\n    const isAlreadyMount = ref(false);\n    // 初始化传入的value\n    const init = () => {\n      let valuetext: string | number;\n      if (props.range) {\n        if (isArray(sliderValue.value)) {\n          firstValue.value = Math.max(props.min || 0, sliderValue.value[0]);\n          secondValue.value = Math.min(props.max || 100, sliderValue.value[1]);\n        } else {\n          firstValue.value = props.min || 0;\n          secondValue.value = props.max || 100;\n        }\n        valuetext = `${firstValue.value}-${secondValue.value}`;\n      } else {\n        if (!isNumber(sliderValue.value)) {\n          firstValue.value = props.min;\n        } else {\n          firstValue.value = Math.min(props.max, Math.max(props.min, sliderValue.value as number));\n        }\n        valuetext = String(firstValue.value);\n      }\n      if (sliderContainerRef.value) {\n        sliderContainerRef.value.setAttribute('aria-valuetext', valuetext);\n      }\n      resetSize();\n      window.addEventListener('resize', resetSize);\n    };\n    // 相应button的位置\n    const setPosition = (percent: number): void => {\n      let targetValue = (percent * rangeDiff.value) / 100;\n      targetValue = props.min + targetValue;\n      if (!props.range && firstButtonRef.value) {\n        firstButtonRef.value.setPosition(percent);\n        return;\n      }\n      let button;\n      if (Math.abs(minValue.value - targetValue) < Math.abs(maxValue.value - targetValue)) {\n        button = firstValue.value < secondValue.value ? 'button1' : 'button2';\n      } else {\n        button = firstValue.value > secondValue.value ? 'button1' : 'button2';\n      }\n      if (button === 'button1' && firstButtonRef.value) {\n        firstButtonRef.value.setPosition(percent);\n      }\n      if (button === 'button2' && secondButtonRef.value) {\n        secondButtonRef.value.setPosition(percent);\n      }\n    };\n\n    // 全局点击\n    const onSliderClick = (event: MouseEvent): void => {\n      if (disabled.value || dragging.value) {\n        return;\n      }\n      if (!sliderRef.value) return;\n      resetSize();\n      let value = 0;\n      if (vertical.value) {\n        const sliderOffsetBottom = sliderRef.value.getBoundingClientRect().bottom;\n        value = ((sliderOffsetBottom - event.clientY) / sliderSize.value) * 100;\n        setPosition(value);\n      } else {\n        const sliderOffsetLeft = sliderRef.value.getBoundingClientRect().left;\n        value = ((event.clientX - sliderOffsetLeft) / sliderSize.value) * 100;\n        setPosition(value);\n      }\n    };\n\n    // mark 点击触发修改事件\n    const changeValue = (point: number) => {\n      if (disabled.value || dragging.value) {\n        return;\n      }\n      resetSize();\n      const value = Number((point / rangeDiff.value) * 100);\n      setPosition(value);\n      emitChange(point);\n    };\n\n    /** 副作用监听 */\n    watch(\n      () => sliderValue.value,\n      (newVal) => {\n        if (dragging.value === true) return;\n        if (isArray(newVal) && props.range) {\n          [firstValue.value, secondValue.value] = newVal;\n        } else {\n          firstValue.value = newVal as number;\n        }\n      },\n    );\n\n    watch([firstValue, secondValue, dragging], (newStates, prevStates) => {\n      if (newStates[0] !== prevStates[0]) {\n        if (props.range) {\n          emitChange([minValue.value, maxValue.value]);\n        } else {\n          emitChange(firstValue.value);\n        }\n      }\n      if (newStates[1] !== prevStates[1]) {\n        if (props.range) {\n          emitChange([minValue.value, maxValue.value]);\n        }\n      }\n      if (newStates[2] !== prevStates[2] && newStates[2] === false) {\n        init();\n      }\n    });\n\n    /** 挂载&卸载 */\n    onMounted(() => {\n      init();\n      isAlreadyMount.value = true;\n    });\n    onBeforeUnmount(() => {\n      window.removeEventListener('resize', resetSize);\n    });\n\n    /** -------------------------- 渲染相关逻辑 start --------------------------  */\n    const markConfig = computed(() => ({\n      max: props.max,\n      min: props.min,\n      marks: props.marks,\n      vertical: vertical.value,\n      prefixName: COMPONENT_NAME.value,\n    }));\n    const renderMask = useSliderMark(markConfig);\n\n    const inputConfig = computed(() => ({\n      max: props.max,\n      min: props.min,\n      inputNumberProps: props.inputNumberProps,\n      step: props.step,\n      prefixName: COMPONENT_NAME.value,\n      vertical: vertical.value,\n      disabled: disabled.value,\n    }));\n    const renderInputNumber = useSliderInput(inputConfig);\n\n    const renderInputButton = (): VNode => {\n      const firstInputVal = firstValue.value;\n      const firstInputOnChange = (v: number) => {\n        firstValue.value = v;\n      };\n      const secondInputVal = secondValue.value;\n      const secondInputOnChange = (v: number) => {\n        secondValue.value = v;\n      };\n      return (\n        <div\n          class={[\n            `${COMPONENT_NAME.value}__input-container`,\n            {\n              'is-vertical': vertical.value,\n            },\n          ]}\n        >\n          {renderInputNumber(firstInputVal, firstInputOnChange)}\n          {props.range && <div class={`${COMPONENT_NAME.value}__center-line`} />}\n          {props.range && renderInputNumber(secondInputVal, secondInputOnChange)}\n        </div>\n      );\n    };\n    /** -------------------------- 渲染相关逻辑 end --------------------------  */\n\n    /** 父子共用状态&方法 */\n    const toggleDragging = (toState: boolean) => {\n      dragging.value = toState;\n    };\n\n    const { min, max, step } = toRefs(props);\n    provide(\n      sliderPropsInjectKey,\n      reactive({\n        min,\n        max,\n        step,\n        dragging,\n        toggleDragging,\n        precision,\n        disabled,\n        resetSize,\n        sliderSize,\n      }),\n    );\n\n    return () => (\n      <div class={containerClass.value} ref={sliderContainerRef}>\n        <div\n          class={sliderClass.value}\n          role=\"slider\"\n          aria-valuemin={props.min}\n          aria-valuemax={props.max}\n          aria-orientation={props.layout}\n          aria-disabled={disabled.value}\n          tooltip-props={props.tooltipProps}\n        >\n          <div class={sliderRailClass.value} style={runwayStyle.value} onClick={onSliderClick} ref={sliderRef}>\n            <div class={`${COMPONENT_NAME.value}__track`} style={barStyle.value} />\n            <TSliderButton\n              vertical={vertical.value}\n              value={firstValue.value}\n              ref={firstButtonRef}\n              disabled={disabled.value}\n              tooltip-props={props.tooltipProps}\n              label={props.label}\n              onInput={(v: number) => {\n                firstValue.value = v;\n              }}\n            />\n            {props.range && (\n              <TSliderButton\n                vertical={vertical.value}\n                value={secondValue.value}\n                ref={secondButtonRef}\n                disabled={disabled.value}\n                label={props.label}\n                tooltip-props={props.tooltipProps}\n                onInput={(v: number) => {\n                  secondValue.value = v;\n                }}\n              />\n            )}\n            {props.showStep && (\n              <div class={`${COMPONENT_NAME.value}__stops`}>\n                {steps.value.map((item: any, key) => {\n                  if (item.position === 0 || item.position === 100) return null;\n                  return (\n                    <div class={`${COMPONENT_NAME.value}__stop`} key={key} style={getStopStyle(item, vertical.value)} />\n                  );\n                })}\n              </div>\n            )}\n            {renderMask(changeValue)}\n          </div>\n        </div>\n        {isAlreadyMount.value && props.inputNumberProps && renderInputButton()}\n      </div>\n    );\n  },\n});\n"],"names":["defineComponent","name","model","prop","event","props","_objectSpread","setup","disabled","useFormDisabled","COMPONENT_NAME","usePrefixClass","_useCommonClassName","useCommonClassName","STATUS","_toRefs","toRefs","value","modelValue","_useVModel","useVModel","defaultValue","onChange","_useVModel2","_slicedToArray","sliderValue","setSliderValue","sliderContainerRef","ref","sliderRef","firstButtonRef","secondButtonRef","firstValue","formatSliderValue","secondValue","dragging","sliderSize","vertical","computed","layout","containerClass","concat","sliderClass","_ref","_defineProperty","inputNumberProps","sliderRailClass","runwayStyle","height","barStyle","barStart","range","minValue","min","rangeDiff","currentDiff","maxValue","barSize","bottom","width","left","max","Math","steps","showStep","step","console","warn","stepCount","stepWidth","result","i","push","r","filter","precision","precisions","map","item","decimalArr","split","length","apply","setValues","_ref2","isArray","_ref3","_toConsumableArray","maxLimit","minLimit","_ref4","preValue","emitChange","changeValue","fixValue","resetSize","isAlreadyMount","init","valuetext","isNumber","String","setAttribute","window","addEventListener","setPosition","percent","targetValue","button","abs","onSliderClick","sliderOffsetBottom","getBoundingClientRect","clientY","sliderOffsetLeft","clientX","point","Number","watch","newVal","_newVal","newStates","prevStates","onMounted","onBeforeUnmount","removeEventListener","markConfig","marks","prefixName","renderMask","useSliderMark","inputConfig","renderInputNumber","useSliderInput","renderInputButton","firstInputVal","firstInputOnChange","v","secondInputVal","secondInputOnChange","_createVNode","toggleDragging","toState","_toRefs2","provide","sliderPropsInjectKey","reactive","tooltipProps","TSliderButton","label","onInput","key","position","getStopStyle"],"mappings":"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"}