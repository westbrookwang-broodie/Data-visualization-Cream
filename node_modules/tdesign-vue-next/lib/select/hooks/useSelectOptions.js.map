{"version":3,"file":"useSelectOptions.js","sources":["../../../src/select/hooks/useSelectOptions.ts"],"sourcesContent":["import { computed, Slots, VNode, Ref, ref } from 'vue';\nimport isArray from 'lodash/isArray';\nimport get from 'lodash/get';\n\nimport { useChildComponentSlots } from '../../hooks/slot';\nimport { TdSelectProps, TdOptionProps, SelectOptionGroup, SelectKeysType, SelectValue, SelectOption } from '../type';\n\ntype UniOption = (TdOptionProps | SelectOptionGroup) & {\n  index?: number;\n  slots?: Slots;\n};\n\nexport const useSelectOptions = (props: TdSelectProps, keys: Ref<SelectKeysType>) => {\n  const getChildComponentSlots = useChildComponentSlots();\n  const optionsCache = ref<SelectOption[]>([]);\n\n  const options = computed(() => {\n    let dynamicIndex = 0;\n\n    // 统一处理 keys,处理通用数据\n    const innerOptions: UniOption[] =\n      props.options?.map((option) => {\n        const getFormatOption = (option: TdOptionProps) => {\n          const { value, label } = keys.value;\n          const res = {\n            ...option,\n            index: dynamicIndex,\n            label: get(option, label),\n            value: get(option, value),\n          };\n          dynamicIndex++;\n          return res;\n        };\n        if ((option as SelectOptionGroup).group && (option as SelectOptionGroup).children) {\n          return {\n            ...option,\n            children: (option as SelectOptionGroup).children.map((child) => getFormatOption(child)),\n          };\n        }\n        return getFormatOption(option);\n      }) || [];\n\n    // 处理 slots\n    const optionsSlots = getChildComponentSlots('Option');\n    const groupSlots = getChildComponentSlots('OptionGroup');\n\n    if (isArray(groupSlots)) {\n      for (const group of groupSlots) {\n        const groupOption = {\n          group: group.props?.label,\n          ...group.props,\n          children: [] as TdOptionProps[],\n        };\n        const res = (group.children as Slots).default();\n        if (!(isArray(res) && !!res[0]?.children)) continue;\n        for (const child of res?.[0]?.children as VNode[]) {\n          groupOption.children.push({\n            ...child.props,\n            slots: child.children,\n            index: dynamicIndex,\n          } as TdOptionProps);\n          dynamicIndex++;\n        }\n\n        innerOptions.push(groupOption);\n      }\n    }\n    if (isArray(optionsSlots)) {\n      for (const child of optionsSlots) {\n        innerOptions.push({\n          ...child.props,\n          slots: child.children,\n          index: dynamicIndex,\n        } as TdOptionProps);\n        dynamicIndex++;\n      }\n    }\n    return innerOptions;\n  });\n\n  const optionsList = computed(() => {\n    const res: TdOptionProps[] = [];\n    const getOptionsList = (options: TdOptionProps[]) => {\n      for (const option of options) {\n        if ((option as SelectOptionGroup).group) {\n          getOptionsList((option as SelectOptionGroup).children);\n        } else {\n          res.push(option);\n        }\n      }\n    };\n    getOptionsList(options.value);\n    return res;\n  });\n\n  const optionsMap = computed(() => {\n    const res = new Map<SelectValue, TdOptionProps>();\n    // map以最新的为主 避免存在重复value更新的场景 https://github.com/Tencent/tdesign-vue-next/issues/2646\n    optionsCache.value.concat(optionsList.value).forEach((option: TdOptionProps) => {\n      res.set(option.value, option);\n    });\n    return res;\n  });\n\n  return {\n    options,\n    optionsMap,\n    optionsList,\n    optionsCache,\n  };\n};\n"],"names":["useSelectOptions","props","keys","getChildComponentSlots","useChildComponentSlots","optionsCache","ref","options","computed","_props$options","dynamicIndex","innerOptions","map","option","getFormatOption","_keys$value","value","label","res","_objectSpread","index","get","group","children","child","optionsSlots","groupSlots","isArray","_iterator","_createForOfIteratorHelper","_step","s","n","done","_group$props","_res$","_res$2","groupOption","_iterator2","_step2","push","slots","err","e","f","_iterator3","_step3","optionsList","getOptionsList","_iterator4","_step4","optionsMap","Map","concat","forEach","set"],"mappings":"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"}