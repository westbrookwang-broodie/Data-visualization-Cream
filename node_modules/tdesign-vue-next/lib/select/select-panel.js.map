{"version":3,"file":"select-panel.js","sources":["../../src/select/select-panel.tsx"],"sourcesContent":["import { computed, defineComponent, inject, PropType, Slots, ref } from 'vue';\nimport isFunction from 'lodash/isFunction';\nimport omit from 'lodash/omit';\nimport { Styles } from '../common';\n\nimport { SelectOption, SelectOptionGroup, TdOptionProps } from './type';\nimport Option from './option';\nimport OptionGroup from './optionGroup';\nimport TdSelectProps from './props';\n\nimport { useTNodeJSX, useTNodeDefault } from '../hooks/tnode';\nimport { useConfig, usePrefixClass } from '../hooks/useConfig';\nimport { usePanelVirtualScroll } from './hooks/usePanelVirtualScroll';\nimport { selectInjectKey } from './helper';\n\nexport default defineComponent({\n  name: 'TSelectPanel',\n  props: {\n    inputValue: TdSelectProps.inputValue,\n    panelTopContent: TdSelectProps.panelTopContent,\n    panelBottomContent: TdSelectProps.panelBottomContent,\n    empty: TdSelectProps.empty,\n    creatable: TdSelectProps.creatable,\n    loading: TdSelectProps.loading,\n    loadingText: TdSelectProps.loadingText,\n    multiple: TdSelectProps.multiple,\n    filterable: TdSelectProps.filterable,\n    filter: TdSelectProps.filter,\n    options: {\n      type: Array as PropType<SelectOption[]>,\n      default: (): SelectOption[] => [],\n    },\n    scroll: TdSelectProps.scroll,\n  },\n  setup(props, { expose }) {\n    const COMPONENT_NAME = usePrefixClass('select');\n    const renderTNodeJSX = useTNodeJSX();\n    const renderDefaultTNode = useTNodeDefault();\n    const { t, globalConfig } = useConfig('select');\n    const tSelect = inject(selectInjectKey);\n    const innerRef = ref<HTMLElement>(null);\n\n    const popupContentRef = computed(() => tSelect.value.popupContentRef.value);\n    const showCreateOption = computed(() => props.creatable && props.filterable && props.inputValue);\n\n    const displayOptions = computed(() => {\n      if (!props.inputValue || !(props.filterable || isFunction(props.filter))) return props.options;\n\n      const filterMethods = (option: SelectOption) => {\n        if (isFunction(props.filter)) {\n          return props.filter(`${props.inputValue}`, option);\n        }\n\n        return option.label?.toLowerCase?.().indexOf(`${props.inputValue}`.toLowerCase()) > -1;\n      };\n\n      const res: SelectOption[] = [];\n\n      props.options.forEach((option) => {\n        if ((option as SelectOptionGroup).group && (option as SelectOptionGroup).children) {\n          res.push({\n            ...option,\n            children: (option as SelectOptionGroup).children.filter(filterMethods),\n          });\n        }\n        if (filterMethods(option)) {\n          res.push(option);\n        }\n      });\n\n      return res;\n    });\n\n    const { trs, visibleData, handleRowMounted, isVirtual, panelStyle, cursorStyle } = usePanelVirtualScroll({\n      scroll: props.scroll,\n      popupContentRef,\n      options: displayOptions,\n    });\n\n    const isEmpty = computed(() => !displayOptions.value.length);\n\n    const renderCreateOption = () => (\n      <ul class={[`${COMPONENT_NAME.value}__create-option`, `${COMPONENT_NAME.value}__list`]}>\n        <Option\n          value={props.inputValue}\n          label={`${props.inputValue}`}\n          createAble={true}\n          class={`${COMPONENT_NAME.value}__create-option--special`}\n        />\n      </ul>\n    );\n\n    // 递归render options\n    const renderOptionsContent = (options: SelectOption[]) => {\n      return (\n        <ul class={`${COMPONENT_NAME.value}__list`}>\n          {options.map((item: SelectOptionGroup & TdOptionProps & { slots: Slots } & { $index: number }, index) => {\n            if (item.group) {\n              return (\n                <OptionGroup label={item.group} divider={item.divider}>\n                  {renderOptionsContent(item.children)}\n                </OptionGroup>\n              );\n            }\n            return (\n              <Option\n                {...omit(item, '$index')}\n                {...(isVirtual.value\n                  ? {\n                      rowIndex: item.$index,\n                      trs,\n                      scrollType: props.scroll?.type,\n                      isVirtual: isVirtual.value,\n                      bufferSize: props.scroll?.bufferSize,\n                      key: `${item.$index || ''}_${index}`,\n                    }\n                  : {\n                      key: `${index}_${item.value}`,\n                    })}\n                multiple={props.multiple}\n                v-slots={item.slots}\n                onRowMounted={handleRowMounted}\n              />\n            );\n          })}\n        </ul>\n      );\n    };\n    const dropdownInnerSize = computed(() => {\n      return {\n        small: 's',\n        medium: 'm',\n        large: 'l',\n      }[tSelect.value.size];\n    });\n\n    expose({\n      innerRef,\n    });\n\n    const renderPanel = (options: SelectOption[], extraStyle?: Styles) => (\n      <div\n        ref={innerRef}\n        class={[\n          `${COMPONENT_NAME.value}__dropdown-inner`,\n          `${COMPONENT_NAME.value}__dropdown-inner--size-${dropdownInnerSize.value}`,\n        ]}\n        onClick={(e) => e.stopPropagation()}\n        style={extraStyle}\n      >\n        {renderTNodeJSX('panelTopContent')}\n        {/* create option */}\n        {showCreateOption.value && renderCreateOption()}\n        {/* loading状态 */}\n        {props.loading &&\n          renderDefaultTNode('loadingText', {\n            defaultNode: <div class={`${COMPONENT_NAME.value}__loading-tips`}>{t(globalConfig.value.loadingText)}</div>,\n          })}\n        {/* 空状态 */}\n        {!props.loading &&\n          isEmpty.value &&\n          !showCreateOption.value &&\n          renderDefaultTNode('empty', {\n            defaultNode: <div class={`${COMPONENT_NAME.value}__empty`}>{t(globalConfig.value.empty)}</div>,\n          })}\n        {!isEmpty.value && !props.loading && renderOptionsContent(options)}\n        {renderTNodeJSX('panelBottomContent')}\n      </div>\n    );\n    return {\n      renderPanel,\n      panelStyle,\n      cursorStyle,\n      isVirtual,\n      displayOptions,\n      visibleData,\n    };\n  },\n  render() {\n    return this.isVirtual ? (\n      <div>\n        <div style={this.cursorStyle}></div>\n        {this.renderPanel(this.visibleData, this.panelStyle)}\n      </div>\n    ) : (\n      this.renderPanel(this.displayOptions)\n    );\n  },\n});\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","defineComponent","name","props","inputValue","TdSelectProps","panelTopContent","panelBottomContent","empty","creatable","loading","loadingText","multiple","filterable","filter","options","type","Array","_default","scroll","setup","_ref","expose","COMPONENT_NAME","usePrefixClass","renderTNodeJSX","useTNodeJSX","renderDefaultTNode","useTNodeDefault","_useConfig","useConfig","t","globalConfig","tSelect","inject","selectInjectKey","innerRef","ref","popupContentRef","computed","value","showCreateOption","displayOptions","isFunction","filterMethods","option","_option$label","_option$label$toLower","concat","label","toLowerCase","indexOf","res","forEach","group","children","push","_objectSpread","_usePanelVirtualScrol","usePanelVirtualScroll","trs","visibleData","handleRowMounted","isVirtual","panelStyle","cursorStyle","isEmpty","length","renderCreateOption","_createVNode","Option","renderOptionsContent","map","item","index","_props$scroll","_props$scroll2","_slot","OptionGroup","divider","_mergeProps","omit","rowIndex","$index","scrollType","bufferSize","key","slots","dropdownInnerSize","small","medium","large","size","renderPanel","extraStyle","onClick","e","stopPropagation","defaultNode","render"],"mappings":"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"}