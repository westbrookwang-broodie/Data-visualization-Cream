{"version":3,"file":"image-viewer.js","sources":["../../src/image-viewer/image-viewer.tsx"],"sourcesContent":["import { computed, defineComponent, ref, toRefs, Teleport, watch, Transition } from 'vue';\nimport { ChevronLeftIcon, ChevronDownIcon, CloseIcon } from 'tdesign-icons-vue-next';\n\nimport props from './props';\nimport TImageViewerIcon from './base/ImageModalIcon';\nimport TImageViewerUtils from './base/ImageViewerUtils';\nimport TImageItem from './base/ImageItem';\nimport TImageViewerModal from './base/ImageViewerModal';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport useVModel from '../hooks/useVModel';\nimport useDefaultValue from '../hooks/useDefaultValue';\nimport { usePrefixClass } from '../hooks/useConfig';\nimport { TdImageViewerProps } from './type';\nimport { useMirror, useRotate, useScale } from './hooks';\nimport { formatImages, getOverlay } from './utils';\nimport { EVENT_CODE } from './const';\n\nexport default defineComponent({\n  name: 'TImageViewer',\n  props: { ...props },\n  setup(props) {\n    const classPrefix = usePrefixClass();\n    const COMPONENT_NAME = usePrefixClass('image-viewer');\n    const renderTNodeJSX = useTNodeJSX();\n    const isExpand = ref(true);\n    const showOverlayValue = computed(() => getOverlay(props));\n\n    const { index, visible, modelValue } = toRefs(props);\n    const [indexValue, setIndexValue] = useDefaultValue(index, props.defaultIndex ?? 0, props.onIndexChange, 'index');\n    const [visibleValue, setVisibleValue] = useVModel(visible, modelValue, props.defaultVisible, () => {}, 'visible');\n\n    const animationEnd = ref(true);\n    const animationTimer = ref();\n\n    const wrapClass = computed(() => [\n      COMPONENT_NAME.value,\n      `${COMPONENT_NAME.value}-preview-image`,\n      {\n        [`${classPrefix.value}-is-hide`]: !visibleValue.value,\n      },\n    ]);\n    const headerClass = computed(() => [\n      `${classPrefix.value}-image-viewer__modal-header`,\n      {\n        [`${classPrefix.value}-is-show`]: isExpand.value,\n      },\n    ]);\n    const zIndexValue = computed(() => props.zIndex ?? 2600);\n    const toggleExpand = () => {\n      isExpand.value = !isExpand.value;\n    };\n\n    const { mirror, onMirror, resetMirror } = useMirror();\n    const { scale, onZoomIn, onZoomOut, resetScale } = useScale(props.imageScale);\n    const { rotate, onRotate, resetRotate } = useRotate();\n    const onRest = () => {\n      resetMirror();\n      resetScale();\n      resetRotate();\n    };\n\n    const images = computed(() => formatImages(props.images));\n    const currentImage = computed(() => images.value[indexValue.value] ?? { mainImage: '' });\n\n    const prevImage = () => {\n      const newIndex = indexValue.value - 1;\n      setIndexValue(newIndex < 0 ? 0 : newIndex, { trigger: 'prev' });\n    };\n\n    const nextImage = () => {\n      const newIndex = indexValue.value + 1;\n      setIndexValue(newIndex >= images.value.length ? indexValue.value : newIndex, { trigger: 'next' });\n    };\n\n    const onImgClick = (i: number) => {\n      setIndexValue(i);\n    };\n\n    const openHandler = () => {\n      setVisibleValue(true);\n    };\n    const onClose: TdImageViewerProps['onClose'] = (ctx) => {\n      setVisibleValue(false, ctx);\n      props.onClose?.(ctx);\n    };\n    const closeBtnAction = (e: MouseEvent) => {\n      onClose({ e, trigger: 'close-btn' });\n    };\n    const clickOverlayHandler = (e: MouseEvent) => {\n      if (props.closeOnOverlay) {\n        onClose({ e, trigger: 'overlay' });\n      }\n    };\n\n    const keydownHandler = (e: KeyboardEvent) => {\n      switch (e.code) {\n        case EVENT_CODE.left:\n          prevImage();\n          break;\n        case EVENT_CODE.right:\n          nextImage();\n          break;\n        case EVENT_CODE.up:\n          onZoomIn();\n          break;\n        case EVENT_CODE.down:\n          onZoomOut();\n          break;\n        case EVENT_CODE.esc:\n          onClose({ e, trigger: 'esc' });\n          break;\n        default:\n          break;\n      }\n    };\n\n    watch(\n      () => visibleValue.value,\n      (val) => {\n        clearTimeout(animationTimer.value);\n        if (val) {\n          animationEnd.value = false;\n          window.addEventListener('keydown', keydownHandler);\n        } else {\n          animationTimer.value = setTimeout(() => {\n            animationEnd.value = true;\n          }, 200);\n          window.removeEventListener('keydown', keydownHandler);\n        }\n      },\n    );\n\n    const onWheel = (e: WheelEvent) => {\n      e.preventDefault();\n      const { deltaY, ctrlKey } = e;\n      // mac触摸板双指缩放时ctrlKey=true，deltaY>0为缩小  <0为放大\n      if (ctrlKey) {\n        return deltaY > 0 ? onZoomOut() : onZoomIn();\n      }\n      deltaY > 0 ? onZoomIn() : onZoomOut();\n    };\n\n    const transStyle = computed(() => ({\n      transform: `translateX(calc(-${indexValue.value} * (40px / 9 * 16 + 4px)))`,\n    }));\n\n    const renderHeader = () => (\n      <div class={headerClass.value}>\n        <TImageViewerIcon\n          icon={() => <ChevronDownIcon />}\n          class={`${COMPONENT_NAME.value}__header-pre-bt`}\n          onClick={toggleExpand}\n        />\n        <div class={`${COMPONENT_NAME.value}__header-prev`}>\n          <div class={`${COMPONENT_NAME.value}__header-trans`} style={transStyle.value}>\n            {images.value.map((image, index) => (\n              <div\n                key={index}\n                class={[\n                  `${COMPONENT_NAME.value}__header-box`,\n                  {\n                    [`${classPrefix.value}-is-active`]: index === indexValue.value,\n                  },\n                ]}\n              >\n                <img\n                  alt=\"\"\n                  src={image.thumbnail || image.mainImage}\n                  className={`${COMPONENT_NAME.value}__header-img`}\n                  onClick={() => onImgClick(index)}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n    const renderNavigationArrow = (type: 'prev' | 'next') => {\n      const rotateDeg = type === 'prev' ? 0 : 180;\n      const icon = renderTNodeJSX(\n        'navigationArrow',\n        <ChevronLeftIcon style={{ transform: `rotate(${rotateDeg}deg)` }} size=\"24px\" />,\n      );\n\n      return (\n        <TImageViewerIcon\n          class={`${COMPONENT_NAME.value}__modal-${type}-bt`}\n          onClick={type === 'prev' ? prevImage : nextImage}\n          icon={() => icon}\n        />\n      );\n    };\n\n    return () => {\n      if (props.mode === 'modeless') {\n        return (\n          <>\n            {renderTNodeJSX('trigger', { params: { open: openHandler } })}\n            <TImageViewerModal\n              zIndex={zIndexValue.value}\n              visible={visibleValue.value}\n              index={indexValue.value}\n              images={images.value}\n              scale={scale.value}\n              rotate={rotate.value}\n              mirror={mirror.value}\n              currentImage={currentImage.value}\n              onRotate={onRotate}\n              onZoomIn={onZoomIn}\n              onZoomOut={onZoomOut}\n              onMirror={onMirror}\n              onReset={onRest}\n              onClose={onClose}\n              draggable={props.draggable}\n              showOverlay={showOverlayValue.value}\n              title={props.title}\n            />\n          </>\n        );\n      }\n\n      return (\n        <>\n          {renderTNodeJSX('trigger', { params: { open: openHandler } })}\n          <Teleport to=\"body\">\n            <Transition>\n              {(visibleValue.value || !animationEnd.value) && (\n                <div\n                  v-show={visibleValue.value}\n                  class={wrapClass.value}\n                  style={{ zIndex: zIndexValue.value }}\n                  onWheel={onWheel}\n                >\n                  {!!showOverlayValue.value && (\n                    <div class={`${COMPONENT_NAME.value}__modal-mask`} onClick={clickOverlayHandler} />\n                  )}\n                  {images.value.length > 1 && (\n                    <>\n                      {renderHeader()}\n                      <div class={`${COMPONENT_NAME.value}__modal-index`}>\n                        {props.title && renderTNodeJSX('title')}\n                        {`${indexValue.value + 1}/${images.value.length}`}\n                      </div>\n                      {renderNavigationArrow('prev')}\n                      {renderNavigationArrow('next')}\n                    </>\n                  )}\n                  <div\n                    class={[`${COMPONENT_NAME.value}__modal-icon`, `${COMPONENT_NAME.value}__modal-close-bt`]}\n                    onClick={closeBtnAction}\n                  >\n                    {renderTNodeJSX('closeBtn', <CloseIcon size=\"24px\" />)}\n                  </div>\n                  <TImageViewerUtils\n                    onZoomIn={onZoomIn}\n                    onZoomOut={onZoomOut}\n                    onMirror={onMirror}\n                    onReset={onRest}\n                    onRotate={onRotate}\n                    scale={scale.value}\n                    currentImage={currentImage.value}\n                  />\n                  <TImageItem\n                    scale={scale.value}\n                    rotate={rotate.value}\n                    mirror={mirror.value}\n                    src={currentImage.value.mainImage}\n                    placementSrc={currentImage.value.thumbnail}\n                  />\n                </div>\n              )}\n            </Transition>\n          </Teleport>\n        </>\n      );\n    };\n  },\n});\n"],"names":["defineComponent","name","props","_objectSpread","setup","_props2$defaultIndex","classPrefix","usePrefixClass","COMPONENT_NAME","renderTNodeJSX","useTNodeJSX","isExpand","ref","showOverlayValue","computed","getOverlay","_toRefs","toRefs","index","visible","modelValue","_useDefaultValue","useDefaultValue","defaultIndex","onIndexChange","_useDefaultValue2","_slicedToArray","indexValue","setIndexValue","_useVModel","useVModel","defaultVisible","_useVModel2","visibleValue","setVisibleValue","animationEnd","animationTimer","wrapClass","value","concat","_defineProperty","headerClass","zIndexValue","_props2$zIndex","zIndex","toggleExpand","_useMirror","useMirror","mirror","onMirror","resetMirror","_useScale","useScale","imageScale","scale","onZoomIn","onZoomOut","resetScale","_useRotate","useRotate","rotate","onRotate","resetRotate","onRest","images","formatImages","currentImage","_images$value$indexVa","mainImage","prevImage","newIndex","trigger","nextImage","length","onImgClick","i","openHandler","onClose","ctx","_props2$onClose","closeBtnAction","e","clickOverlayHandler","closeOnOverlay","keydownHandler","code","EVENT_CODE","left","right","up","down","esc","watch","val","clearTimeout","window","addEventListener","setTimeout","removeEventListener","onWheel","preventDefault","deltaY","ctrlKey","transStyle","transform","renderHeader","_createVNode","TImageViewerIcon","icon","ChevronDownIcon","map","image","thumbnail","onClick","renderNavigationArrow","type","rotateDeg","ChevronLeftIcon","mode","_Fragment","params","open","TImageViewerModal","draggable","title","Teleport","_default","Transition","_withDirectives","CloseIcon","TImageViewerUtils","TImageItem","_vShow"],"mappings":"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"}