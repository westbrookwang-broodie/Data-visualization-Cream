{"version":3,"file":"image.js","sources":["../../src/image/image.tsx"],"sourcesContent":["import { defineComponent, ref, onMounted, computed, onUnmounted, watch } from 'vue';\nimport omit from 'lodash/omit';\nimport isFunction from 'lodash/isFunction';\nimport { ImageErrorIcon, ImageIcon } from 'tdesign-icons-vue-next';\nimport observe from '../_common/js/utils/observe';\nimport { useConfig } from '../config-provider/useConfig';\nimport { useTNodeDefault, useTNodeJSX } from '../hooks/tnode';\nimport { TdImageProps } from './type';\nimport props from './props';\nimport Space from '../space';\nimport { isServer } from '../utils/dom';\n\nexport default defineComponent({\n  name: 'TImage',\n\n  props,\n\n  setup(props: TdImageProps) {\n    const imageRef = ref<HTMLElement>(null);\n    let io: IntersectionObserver = null;\n\n    const renderTNodeJSX = useTNodeJSX();\n\n    onMounted(() => {\n      if (!props.lazy || !imageRef.value) return;\n\n      const ioObserver = observe(imageRef.value, null, handleLoadImage, 0);\n      io = ioObserver;\n    });\n\n    onUnmounted(() => {\n      imageRef.value && io && io.unobserve(imageRef.value);\n    });\n\n    const { classPrefix, globalConfig } = useConfig('image');\n\n    // replace image url\n    const imageSrc = computed(() =>\n      isFunction(globalConfig.value.replaceImageSrc) ? globalConfig.value.replaceImageSrc(props) : props.src,\n    );\n\n    watch(\n      () => props.src,\n      () => {\n        hasError.value = false;\n        isLoaded.value = false;\n      },\n    );\n\n    const shouldLoad = ref(!props.lazy);\n    const handleLoadImage = () => {\n      shouldLoad.value = true;\n    };\n\n    const isLoaded = ref(false);\n    const handleLoad = (e: Event) => {\n      isLoaded.value = true;\n      props.onLoad?.({ e });\n    };\n\n    const hasError = ref(false);\n    const handleError = (e: Event) => {\n      hasError.value = true;\n      props.onError?.({ e });\n    };\n\n    const hasMouseEvent = computed(() => {\n      return props.overlayTrigger === 'hover';\n    });\n\n    const imageClasses = computed(() => [\n      `${classPrefix.value}-image`,\n      `${classPrefix.value}-image--fit-${props.fit}`,\n      `${classPrefix.value}-image--position-${props.position}`,\n    ]);\n\n    const shouldShowOverlay = ref(!hasMouseEvent.value);\n    const handleToggleOverlay = () => {\n      if (hasMouseEvent.value) {\n        shouldShowOverlay.value = !shouldShowOverlay.value;\n      }\n    };\n\n    const renderPlaceholder = () => {\n      const placeholder = renderTNodeJSX('placeholder');\n      if (!placeholder) return null;\n      return <div class={`${classPrefix.value}-image__placeholder`}>{placeholder}</div>;\n    };\n\n    const renderGalleryShadow = () => {\n      if (!props.gallery) return null;\n      return <div class={`${classPrefix.value}-image__gallery-shadow`} />;\n    };\n\n    const renderOverlay = () => {\n      const overlayContent = renderTNodDefault('overlayContent');\n      if (!overlayContent) return null;\n      return (\n        <div\n          class={[\n            `${classPrefix.value}-image__overlay-content`,\n            !shouldShowOverlay.value && `${classPrefix.value}-image__overlay-content--hidden`,\n          ]}\n        >\n          {overlayContent}\n        </div>\n      );\n    };\n\n    function renderImageSrcset() {\n      return (\n        <picture>\n          {Object.entries(props.srcset).map(([type, url]) => (\n            <source type={type} srcset={url} />\n          ))}\n          {props.src && renderImage(props.src)}\n        </picture>\n      );\n    }\n\n    function renderImage(url: string) {\n      return <img src={url} onError={handleError} onLoad={handleLoad} class={imageClasses.value} alt={props.alt} />;\n    }\n\n    const renderTNodDefault = useTNodeDefault();\n\n    return () => (\n      <div\n        ref={imageRef}\n        class={[\n          `${classPrefix.value}-image__wrapper`,\n          `${classPrefix.value}-image__wrapper--shape-${props.shape}`,\n          props.gallery && `${classPrefix.value}-image__wrapper--gallery`,\n          hasMouseEvent.value && `${classPrefix.value}-image__wrapper--need-hover`,\n        ]}\n        onMouseenter={handleToggleOverlay}\n        onMouseleave={handleToggleOverlay}\n        {...omit(props, [\n          'src',\n          'alt',\n          'fit',\n          'position',\n          'shape',\n          'placeholder',\n          'loading',\n          'error',\n          'overlayTrigger',\n          'overlayContent',\n          'lazy',\n          'gallery',\n          'onLoad',\n          'onError',\n        ])}\n      >\n        {renderPlaceholder()}\n        {renderGalleryShadow()}\n\n        {(hasError.value || !shouldLoad.value) && <div class={`${classPrefix.value}-image`} />}\n        {!(hasError.value || !shouldLoad.value) &&\n          (props.srcset && Object.keys(props.srcset).length ? renderImageSrcset() : renderImage(imageSrc.value))}\n        {!(hasError.value || !shouldLoad.value || isServer) && !isLoaded.value && (\n          <div class={`${classPrefix.value}-image__loading`}>\n            {renderTNodeJSX('loading') || (\n              <Space direction=\"vertical\" size={8} align=\"center\">\n                <ImageIcon size=\"24px\" />\n                {globalConfig.value.loadingText}\n              </Space>\n            )}\n          </div>\n        )}\n\n        {hasError.value && (\n          <div class={`${classPrefix.value}-image__error`}>\n            {renderTNodDefault('error', {\n              defaultNode: (\n                <Space direction=\"vertical\" size={8} align=\"center\">\n                  <ImageErrorIcon size=\"24px\" />\n                  {globalConfig.value.errorText}\n                </Space>\n              ),\n            })}\n          </div>\n        )}\n\n        {renderOverlay()}\n      </div>\n    );\n  },\n});\n"],"names":["defineComponent","name","props","setup","imageRef","ref","io","renderTNodeJSX","useTNodeJSX","onMounted","lazy","value","ioObserver","observe","handleLoadImage","onUnmounted","unobserve","_useConfig","useConfig","classPrefix","globalConfig","imageSrc","computed","isFunction","replaceImageSrc","src","watch","hasError","isLoaded","shouldLoad","handleLoad","e","_props2$onLoad","onLoad","handleError","_props2$onError","onError","hasMouseEvent","overlayTrigger","imageClasses","concat","fit","position","shouldShowOverlay","handleToggleOverlay","renderPlaceholder","placeholder","_createVNode","renderGalleryShadow","gallery","renderOverlay","overlayContent","renderTNodDefault","renderImageSrcset","Object","entries","srcset","map","_ref","_ref2","_slicedToArray","type","url","renderImage","alt","useTNodeDefault","_mergeProps","shape","omit","keys","length","isServer","Space","_default","ImageIcon","loadingText","defaultNode","ImageErrorIcon","errorText"],"mappings":"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"}