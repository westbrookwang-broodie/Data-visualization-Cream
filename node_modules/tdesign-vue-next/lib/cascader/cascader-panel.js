/**
 * tdesign v1.3.1
 * (c) 2023 tdesign
 * @license MIT
 */

import _defineProperty from '@babel/runtime/helpers/defineProperty';
import { defineComponent, createVNode } from 'vue';
import Panel from './components/Panel.js';
import props from './props.js';
import { useCascaderContext } from './hooks.js';
import './components/Item.js';
import 'tdesign-icons-vue-next';
import './core/helper.js';
import 'lodash/isNumber';
import 'lodash/isObject';
import 'lodash/isArray';
import 'lodash/isEmpty';
import './core/className.js';
import '@babel/runtime/helpers/toConsumableArray';
import '../checkbox/index.js';
import '../checkbox/checkbox.js';
import '@babel/runtime/helpers/slicedToArray';
import '../checkbox/props.js';
import '../hooks/useVModel.js';
import 'lodash/kebabCase';
import '../form/hooks.js';
import '../hooks/useRipple.js';
import '../hooks/useKeepAnimation.js';
import '../config-provider/useConfig.js';
import 'lodash/isFunction';
import 'lodash/cloneDeep';
import 'lodash/isString';
import '../config-provider/context.js';
import 'lodash/mergeWith';
import 'lodash/merge';
import '../_common/js/global-config/default-config.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '@babel/runtime/helpers/typeof';
import '../_chunks/dep-2c4b4682.js';
import 'dayjs';
import '../hooks/useConfig.js';
import '../utils/set-style.js';
import '../hooks/tnode.js';
import 'lodash/camelCase';
import '../utils/render-tnode.js';
import '../checkbox/constants.js';
import '../checkbox/group.js';
import 'lodash/intersection';
import '../checkbox/checkbox-group-props.js';
import '../hooks/slot.js';
import 'lodash/isUndefined';
import '../utils/withInstall.js';
import '../loading/index.js';
import '../loading/directive.js';
import '../loading/plugin.js';
import '../loading/loading.js';
import '../loading/icon/gradient.js';
import '../_common/js/loading/circle-adapter.js';
import '../_common/js/utils/set-style.js';
import '../_common/js/utils/helper.js';
import '@babel/runtime/helpers/objectWithoutProperties';
import 'lodash/isNull';
import '../utils/dom.js';
import '../utils/easing.js';
import '../loading/props.js';
import '../hooks/useTeleport.js';
import '../hooks/useGlobalIcon.js';
import './core/effect.js';
import 'lodash/isEqual';
import '../_common/js/tree/tree-store.js';
import '@babel/runtime/helpers/classCallCheck';
import '@babel/runtime/helpers/createClass';
import 'lodash/difference';
import 'lodash/isPlainObject';
import 'mitt';
import '../_common/js/tree/tree-node.js';
import '@babel/runtime/helpers/asyncToGenerator';
import '@babel/runtime/regenerator';
import 'lodash/uniqueId';
import 'lodash/isNil';
import 'lodash/get';
import '../_common/js/tree/tree-node-model.js';
import 'lodash/isBoolean';
import 'lodash/pick';
import 'lodash/omit';
import '../_common/js/log/log.js';
import '../hooks/useDefaultValue.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var _CascaderPanel = defineComponent({
  name: "TCascaderPanel",
  props: _objectSpread({}, props),
  setup: function setup(props2, _ref) {
    var slots = _ref.slots;
    var _useCascaderContext = useCascaderContext(props2),
      cascaderContext = _useCascaderContext.cascaderContext;
    return function () {
      return createVNode(Panel, {
        "trigger": props2.trigger,
        "cascaderContext": cascaderContext.value,
        "empty": props2.empty
      }, {
        empty: slots.empty
      });
    };
  }
});

export { _CascaderPanel as default };
//# sourceMappingURL=cascader-panel.js.map
