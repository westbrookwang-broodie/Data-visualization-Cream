{"version":3,"file":"common.js","sources":["../../src/grid/common.ts"],"sourcesContent":["import { ref } from 'vue';\nimport isUndefined from 'lodash/isUndefined';\nimport isNumber from 'lodash/isNumber';\nimport isObject from 'lodash/isObject';\nimport isArray from 'lodash/isArray';\n\nimport { TdColProps, TdRowProps } from './type';\nimport { calcSize } from '../utils/responsive';\nimport { useListener } from '../hooks/useListener';\nimport { isServer } from '../utils/dom';\n\nexport interface RowProviderType {\n  gutter: TdRowProps['gutter'];\n}\n\n/**\n * rowSizeHook\n * @returns\n */\nexport function useRowSize() {\n  const size = ref(calcSize(isServer ? 0 : window.innerWidth));\n  const updateSize = () => {\n    size.value = calcSize(isServer ? 0 : window.innerWidth);\n  };\n\n  useListener('resize', updateSize);\n\n  return size;\n}\n\n/**\n *\n * @param name\n * @param props\n * @returns\n */\nexport function getRowClasses(name: string, props: TdRowProps) {\n  const { justify, align } = props;\n  return [\n    name,\n    {\n      [`${name}--${justify}`]: justify,\n      // 区分 justify 传值\n      [`${name}--align-${align}`]: align,\n    },\n  ];\n}\n\n/**\n *\n * @param gutter\n * @param currentSize\n * @returns\n */\nexport function calcRowStyle(gutter: TdRowProps['gutter'], currentSize: string) {\n  const rowStyle = {};\n  const getMarginStyle = (gutter: number) =>\n    Object.assign(rowStyle, {\n      marginLeft: `${gutter / -2}px`,\n      marginRight: `${gutter / -2}px`,\n    });\n\n  const getRowGapStyle = (gutter: number) =>\n    Object.assign(rowStyle, {\n      rowGap: `${gutter}px`,\n    });\n\n  const strategyMap = {\n    isNumber: (gutter: TdRowProps['gutter']) => {\n      if (isNumber(gutter)) {\n        getMarginStyle(gutter);\n      }\n    },\n    isArray: (gutter: TdRowProps['gutter']) => {\n      if (isArray(gutter) && gutter.length) {\n        strategyMap.isNumber(gutter[0]);\n\n        if (isNumber(gutter[1])) {\n          getRowGapStyle(gutter[1]);\n        }\n\n        if (isObject(gutter[0]) && !isUndefined(gutter[0][currentSize])) {\n          getMarginStyle(gutter[0][currentSize]);\n        }\n\n        if (isObject(gutter[1]) && !isUndefined(gutter[1][currentSize])) {\n          getRowGapStyle(gutter[1][currentSize]);\n        }\n      }\n    },\n    isObject: (gutter: TdRowProps['gutter']) => {\n      if (isObject(gutter) && gutter[currentSize]) {\n        if (isArray(gutter) && gutter.length) {\n          getMarginStyle(gutter[currentSize][0]);\n          getRowGapStyle(gutter[currentSize][1]);\n        } else {\n          getMarginStyle(gutter[currentSize]);\n        }\n      }\n    },\n  };\n\n  Object.keys(strategyMap).forEach((item) => {\n    strategyMap[item](gutter);\n  });\n\n  return rowStyle;\n}\n\n/**\n * 解析Flex\n * @param flex\n * @returns\n */\nexport function parseFlex(flex: TdColProps['flex']): string {\n  if (isNumber(flex)) {\n    return `${flex} ${flex} 0`;\n  }\n  // 判断是否是flex\n  if (/^\\d+(\\.\\d+)?(px|r?em|%)$/.test(flex)) {\n    return `0 0 ${flex}`;\n  }\n  return flex;\n}\n\n/**\n * 计算ColPadding\n * @param gutter\n * @param currentSize\n * @returns\n */\nexport function calcColPadding(gutter: TdRowProps['gutter'], currentSize: string) {\n  const paddingObj = {};\n  const getPaddingStyle = (gutter: number) =>\n    Object.assign(paddingObj, {\n      paddingLeft: `${gutter / 2}px`,\n      paddingRight: `${gutter / 2}px`,\n    });\n\n  const strategyMap = {\n    isNumber: (gutter: TdRowProps['gutter']) => {\n      if (isNumber(gutter)) {\n        getPaddingStyle(gutter);\n      }\n    },\n    isArray: (gutter: TdRowProps['gutter']) => {\n      if (isArray(gutter) && gutter.length) {\n        if (isNumber(gutter[0])) {\n          getPaddingStyle(gutter[0]);\n        }\n        if (isObject(gutter[0]) && gutter[0][currentSize]) {\n          getPaddingStyle(gutter[0][currentSize]);\n        }\n      }\n    },\n    isObject: (gutter: TdRowProps['gutter']) => {\n      if (isObject(gutter) && gutter[currentSize]) {\n        getPaddingStyle(gutter[currentSize]);\n      }\n    },\n  };\n\n  Object.keys(strategyMap).forEach((item) => {\n    strategyMap[item](gutter);\n  });\n\n  return paddingObj;\n}\n\n/**\n * 获取 col size\n * @param props\n * @returns\n */\nexport function getColClasses(name: string, props: TdColProps) {\n  const { span, order, offset, push, pull } = props;\n  const allSizes = ['xs', 'sm', 'md', 'lg', 'xl', 'xxl'];\n\n  const ColSizeClasses = allSizes.reduce((acc, currSize) => {\n    const sizeProp = props[currSize];\n    let sizeObject: any = {};\n    if (isNumber(sizeProp)) {\n      sizeObject.span = sizeProp;\n    } else if (isObject(sizeProp)) {\n      sizeObject = sizeProp || {};\n    }\n    return {\n      ...acc,\n      [`${name}-${currSize}-${sizeObject.span}`]: !isUndefined(sizeObject.span),\n      [`${name}-${currSize}-order-${sizeObject.order}`]: parseInt(sizeObject.order, 10) >= 0,\n      [`${name}-${currSize}-offset-${sizeObject.offset}`]: parseInt(sizeObject.offset, 10) >= 0,\n      [`${name}-${currSize}-push-${sizeObject.push}`]: parseInt(sizeObject.push, 10) >= 0,\n      [`${name}-${currSize}-pull-${sizeObject.pull}`]: parseInt(sizeObject.pull, 10) >= 0,\n    };\n  }, {});\n\n  return {\n    [`${name}`]: true,\n    [`${name}-${span}`]: !isUndefined(span),\n    [`${name}-order-${order}`]: order,\n    [`${name}-offset-${offset}`]: offset,\n    [`${name}-push-${push}`]: push,\n    [`${name}-pull-${pull}`]: pull,\n    ...ColSizeClasses,\n  };\n}\n"],"names":["useRowSize","size","ref","calcSize","isServer","window","innerWidth","updateSize","value","useListener","getRowClasses","name","props","_ref","justify","align","_defineProperty","concat","calcRowStyle","gutter","currentSize","rowStyle","getMarginStyle","Object","assign","marginLeft","marginRight","getRowGapStyle","rowGap","strategyMap","isNumber","isArray","length","isObject","isUndefined","keys","forEach","item","parseFlex","flex","test","calcColPadding","paddingObj","getPaddingStyle","paddingLeft","paddingRight","getColClasses","_objectSpread3","span","order","offset","push","pull","allSizes","ColSizeClasses","reduce","acc","currSize","_objectSpread2","sizeProp","sizeObject","_objectSpread","parseInt"],"mappings":"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"}