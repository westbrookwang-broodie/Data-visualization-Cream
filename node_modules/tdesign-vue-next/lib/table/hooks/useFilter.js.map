{"version":3,"file":"useFilter.js","sources":["../../../src/table/hooks/useFilter.tsx"],"sourcesContent":["import { toRefs, ref, watch, computed, SetupContext } from 'vue';\nimport useClassName from './useClassName';\nimport TButton from '../../button';\nimport { TdPrimaryTableProps, PrimaryTableCol, TableRowData, FilterValue } from '../type';\nimport useDefaultValue from '../../hooks/useDefaultValue';\nimport { useTNodeDefault } from '../../hooks/tnode';\nimport TableFilterController from '../filter-controller';\nimport { useConfig } from '../../hooks/useConfig';\n\nfunction isFilterValueExist(value: any) {\n  const isArrayTrue = value instanceof Array && value.length;\n  const isObject = typeof value === 'object' && !(value instanceof Array);\n  const isObjectTrue = isObject && Object.keys(value).length;\n  return isArrayTrue || isObjectTrue || !['null', '', 'undefined'].includes(String(value));\n}\n\n// 筛选条件不为空，才需要显示筛选结果行\nfunction filterEmptyData(data: FilterValue) {\n  const newFilterValue: FilterValue = {};\n  Object.keys(data).forEach((key) => {\n    const item = data[key];\n    if (isFilterValueExist(item)) {\n      newFilterValue[key] = item;\n    }\n  });\n  return newFilterValue;\n}\n\nexport default function useFilter(props: TdPrimaryTableProps, context: SetupContext) {\n  const primaryTableRef = ref(null);\n  const { t, globalConfig } = useConfig('table');\n  const renderTNode = useTNodeDefault();\n  const { filterValue } = toRefs(props);\n  const { tableFilterClasses, isFocusClass } = useClassName();\n  const isTableOverflowHidden = ref<boolean>();\n\n  // unControl and control\n  const [tFilterValue, setTFilterValue] = useDefaultValue(\n    filterValue,\n    props.defaultFilterValue,\n    props.onFilterChange,\n    'filterValue',\n  );\n\n  // 过滤内部值\n  const innerFilterValue = ref<FilterValue>(tFilterValue.value);\n\n  const hasEmptyCondition = computed(() => {\n    const filterEmpty = filterEmptyData(tFilterValue.value || {});\n    return !tFilterValue.value || !Object.keys(filterEmpty).length;\n  });\n\n  watch([tFilterValue], ([val]) => {\n    innerFilterValue.value = val;\n  });\n\n  function renderFirstFilterRow() {\n    if (hasEmptyCondition.value) return null;\n    const defaultNode = (\n      <div class={tableFilterClasses.result}>\n        <span>\n          {/* 搜索 “{getFilterResultContent()}”， */}\n          {/* 找到 {props.pagination?.total || props.data?.length} 条结果 */}\n          {t(globalConfig.value.searchResultText, {\n            result: getFilterResultContent(),\n            count: props.pagination?.total || props.data?.length,\n          })}\n        </span>\n        <TButton theme=\"primary\" variant=\"text\" onClick={onResetAll}>\n          {globalConfig.value.clearFilterResultButtonText}\n        </TButton>\n      </div>\n    );\n    const filterContent = renderTNode('filterRow');\n    if ((props.filterRow && !filterContent) || props.filterRow === null) return null;\n    return <div class={tableFilterClasses.inner}>{filterContent || defaultNode}</div>;\n  }\n\n  // 获取搜索条件内容，存在 options 需要获取其 label 显示\n  function getFilterResultContent(): string {\n    const arr: string[] = [];\n    props.columns\n      .filter((col) => col.filter)\n      .forEach((col) => {\n        let value = tFilterValue.value[col.colKey];\n        if (col.filter.list && !['null', '', 'undefined'].includes(String(value))) {\n          const formattedValue = value instanceof Array ? value : [value];\n          const label: string[] = [];\n          col.filter.list.forEach((option) => {\n            if (formattedValue.includes(option.value)) {\n              label.push(option.label);\n            }\n          });\n          value = label.join();\n        }\n        if (isFilterValueExist(value)) {\n          arr.push(`${col.title}：${value}`);\n        }\n      });\n    return arr.join('；');\n  }\n\n  function onInnerFilterChange(val: any, column: PrimaryTableCol) {\n    const filterValue = {\n      ...innerFilterValue.value,\n      [column.colKey]: val,\n    };\n    innerFilterValue.value = filterValue;\n    if (!column.filter.showConfirmAndReset) {\n      emitFilterChange(filterValue, column);\n    }\n  }\n\n  function emitFilterChange(filterValue: FilterValue, column?: PrimaryTableCol) {\n    setTFilterValue(filterValue, { col: column });\n    props.onChange?.({ filter: filterValue }, { trigger: 'filter' });\n  }\n\n  function onReset(column: PrimaryTableCol) {\n    const filterValue: FilterValue = {\n      ...tFilterValue.value,\n      [column.colKey]:\n        column.filter.resetValue ??\n        {\n          single: '',\n          multiple: [],\n          input: '',\n        }[column.filter.type] ??\n        '',\n    };\n    emitFilterChange(filterValue, column);\n  }\n\n  function onResetAll() {\n    emitFilterChange({}, undefined);\n  }\n\n  function onConfirm(column: PrimaryTableCol) {\n    emitFilterChange(innerFilterValue.value, column);\n  }\n\n  // 图标：内置图标，组件自定义图标，全局配置图标\n  function renderFilterIcon({ col, colIndex }: { col: PrimaryTableCol<TableRowData>; colIndex: number }) {\n    return (\n      <TableFilterController\n        v-slots={{ filterIcon: context.slots.filterIcon }}\n        column={col}\n        colIndex={colIndex}\n        filterIcon={props.filterIcon}\n        tFilterValue={tFilterValue.value}\n        innerFilterValue={innerFilterValue.value}\n        tableFilterClasses={tableFilterClasses}\n        isFocusClass={isFocusClass}\n        popupProps={col.filter.popupProps}\n        attach={props.attach}\n        onReset={onReset}\n        onConfirm={onConfirm}\n        onInnerFilterChange={onInnerFilterChange}\n        primaryTableElement={primaryTableRef.value?.$el}\n        onVisibleChange={onPopupVisibleChange}\n      ></TableFilterController>\n    );\n  }\n\n  function setFilterPrimaryTableRef(primaryTableElement: any) {\n    primaryTableRef.value = primaryTableElement;\n  }\n\n  function onPopupVisibleChange(visible: boolean) {\n    if (visible && !isTableOverflowHidden.value) {\n      isTableOverflowHidden.value = !visible;\n    }\n  }\n\n  return {\n    hasEmptyCondition,\n    isTableOverflowHidden,\n    renderFilterIcon,\n    renderFirstFilterRow,\n    setFilterPrimaryTableRef,\n  };\n}\n"],"names":["isFilterValueExist","value","isArrayTrue","Array","length","isObject","_typeof","isObjectTrue","Object","keys","includes","String","filterEmptyData","data","newFilterValue","forEach","key","item","useFilter","props","context","primaryTableRef","ref","_useConfig","useConfig","t","globalConfig","renderTNode","useTNodeDefault","_toRefs","toRefs","filterValue","_useClassName","useClassName","tableFilterClasses","isFocusClass","isTableOverflowHidden","_useDefaultValue","useDefaultValue","defaultFilterValue","onFilterChange","_useDefaultValue2","_slicedToArray","tFilterValue","setTFilterValue","innerFilterValue","hasEmptyCondition","computed","filterEmpty","watch","_ref","_ref2","val","renderFirstFilterRow","_props$pagination","_props$data","defaultNode","_createVNode","result","searchResultText","getFilterResultContent","count","pagination","total","onResetAll","_default","clearFilterResultButtonText","filterContent","filterRow","inner","arr","columns","filter","col","colKey","list","formattedValue","label","option","push","join","concat","title","onInnerFilterChange","column","_objectSpread","_defineProperty","showConfirmAndReset","emitFilterChange","_props$onChange","onChange","call","trigger","onReset","_ref3","_column$filter$resetV","resetValue","single","multiple","input","type","onConfirm","renderFilterIcon","_ref4","_primaryTableRef$valu","colIndex","TableFilterController","filterIcon","popupProps","attach","$el","onPopupVisibleChange","slots","setFilterPrimaryTableRef","primaryTableElement","visible"],"mappings":"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"}