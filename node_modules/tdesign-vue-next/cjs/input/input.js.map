{"version":3,"file":"input.js","sources":["../../src/input/input.tsx"],"sourcesContent":["import { defineComponent, computed } from 'vue';\nimport {\n  BrowseIcon as TdBrowseIcon,\n  BrowseOffIcon as TdBrowseOffIcon,\n  CloseCircleFilledIcon as TdCloseCircleFilledIcon,\n} from 'tdesign-icons-vue-next';\nimport props from './props';\nimport { useFormDisabled } from '../form/hooks';\nimport { useConfig, usePrefixClass, useCommonClassName } from '../hooks/useConfig';\nimport { useGlobalIcon } from '../hooks/useGlobalIcon';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport useInput from './useInput';\nimport useInputEventHandler from './useInputEventHandler';\nimport useInputWidth from './useInputWidth';\nimport isUndefined from 'lodash/isUndefined';\n\nfunction getValidAttrs(obj: Record<string, unknown>): Record<string, unknown> {\n  const newObj = {};\n  Object.keys(obj).forEach((key) => {\n    if (!isUndefined(obj[key])) {\n      newObj[key] = obj[key];\n    }\n  });\n  return newObj;\n}\n\nexport default defineComponent({\n  name: 'TInput',\n  props: {\n    ...props,\n    showInput: {\n      // 没有这个 API，请勿使用，即将删除。控制透传readonly同时是否展示input 默认保留 因为正常Input需要撑开宽度\n      type: Boolean,\n      default: true,\n    },\n    keepWrapperWidth: {\n      // 没有这个 API，请勿使用，即将删除。控制透传autoWidth之后是否容器宽度也自适应 多选等组件需要用到自适应但也需要保留宽度\n      type: Boolean,\n      default: false,\n    },\n    allowTriggerBlur: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  setup(props, { expose }) {\n    const { globalConfig } = useConfig('input');\n    const { BrowseIcon, BrowseOffIcon, CloseCircleFilledIcon } = useGlobalIcon({\n      BrowseIcon: TdBrowseIcon,\n      BrowseOffIcon: TdBrowseOffIcon,\n      CloseCircleFilledIcon: TdCloseCircleFilledIcon,\n    });\n    const disabled = useFormDisabled();\n    const COMPONENT_NAME = usePrefixClass('input');\n    const INPUT_WRAP_CLASS = usePrefixClass('input__wrap');\n    const INPUT_TIPS_CLASS = usePrefixClass('input__tips');\n    const { STATUS, SIZE } = useCommonClassName();\n    const classPrefix = usePrefixClass();\n    const renderTNodeJSX = useTNodeJSX();\n    const {\n      isHover,\n      tStatus,\n      inputRef,\n      renderType,\n      showClear,\n      focused,\n      inputValue,\n      isComposition,\n      compositionValue,\n      innerValue,\n      limitNumber,\n      ...inputHandle\n    } = useInput(props, expose);\n\n    const { inputPreRef } = useInputWidth(props, inputRef, innerValue);\n\n    const inputEventHandler = useInputEventHandler(props, isHover);\n\n    const tPlaceholder = computed(() => props.placeholder ?? globalConfig.value.placeholder);\n    const inputAttrs = computed(() =>\n      getValidAttrs({\n        autofocus: props.autofocus,\n        disabled: disabled.value,\n        readonly: props.readonly,\n        placeholder: tPlaceholder.value,\n        maxlength: (!props.allowInputOverMax && props.maxlength) || undefined,\n        name: props.name || undefined,\n        type: renderType.value,\n        autocomplete: props.autocomplete ?? (globalConfig.value.autocomplete || undefined),\n        unselectable: props.readonly ? 'on' : undefined,\n      }),\n    );\n\n    const wrapClasses = computed(() => [\n      INPUT_WRAP_CLASS.value,\n      {\n        [`${COMPONENT_NAME.value}--auto-width`]: props.autoWidth && !props.keepWrapperWidth,\n      },\n    ]);\n\n    const inputEvents = getValidAttrs({\n      onFocus: (e: FocusEvent) => inputHandle.emitFocus(e),\n      onBlur: inputHandle.formatAndEmitBlur,\n      onKeydown: inputEventHandler.handleKeydown,\n      onKeyup: inputEventHandler.handleKeyUp,\n      onKeypress: inputEventHandler.handleKeypress,\n      onPaste: inputEventHandler.onHandlePaste,\n      onCompositionend: inputHandle.onHandleCompositionend,\n      onCompositionstart: inputHandle.onHandleCompositionstart,\n    });\n\n    return () => {\n      const prefixIcon = renderTNodeJSX('prefixIcon');\n      let suffixIcon = renderTNodeJSX('suffixIcon');\n      let passwordIcon = renderTNodeJSX('passwordIcon');\n      const label = renderTNodeJSX('label', { silent: true });\n      const suffix = renderTNodeJSX('suffix');\n      const limitNode =\n        limitNumber.value && props.showLimitNumber ? (\n          <div class={`${classPrefix.value}-input__limit-number`}>{limitNumber.value}</div>\n        ) : null;\n\n      const labelContent = label ? <div class={`${COMPONENT_NAME.value}__prefix`}>{label}</div> : null;\n      const suffixContent =\n        suffix || limitNode ? (\n          <div class={`${COMPONENT_NAME.value}__suffix`}>\n            {suffix}\n            {limitNode}\n          </div>\n        ) : null;\n\n      if (props.type === 'password') {\n        if (renderType.value === 'password') {\n          suffixIcon = (\n            <BrowseOffIcon class={`${COMPONENT_NAME.value}__suffix-clear`} onClick={inputHandle.emitPassword} />\n          );\n        } else if (renderType.value === 'text') {\n          suffixIcon = (\n            <BrowseIcon class={`${COMPONENT_NAME.value}__suffix-clear`} onClick={inputHandle.emitPassword} />\n          );\n        }\n      }\n\n      if (showClear.value) {\n        // 如果类型为 password 则使用 passwordIcon 显示 clear\n        if (props.type === 'password') {\n          passwordIcon = (\n            <CloseCircleFilledIcon\n              ref={inputHandle.clearIconRef}\n              class={`${COMPONENT_NAME.value}__suffix-clear`}\n              onClick={inputHandle.emitClear}\n              onMousedown={inputHandle.onClearIconMousedown}\n            />\n          );\n        } else {\n          suffixIcon = (\n            <CloseCircleFilledIcon\n              ref={inputHandle.clearIconRef}\n              class={`${COMPONENT_NAME.value}__suffix-clear`}\n              onClick={inputHandle.emitClear}\n              onMousedown={inputHandle.onClearIconMousedown}\n            />\n          );\n        }\n      }\n\n      const classes = [\n        COMPONENT_NAME.value,\n        props.inputClass,\n        {\n          [SIZE.value[props.size]]: props.size !== 'medium',\n          [STATUS.value.disabled]: disabled.value,\n          [STATUS.value.focused]: focused.value,\n          [`${classPrefix.value}-is-${tStatus.value}`]: tStatus.value && tStatus.value !== 'default',\n          [`${classPrefix.value}-align-${props.align}`]: props.align !== 'left',\n          [`${classPrefix.value}-is-readonly`]: props.readonly,\n          [`${COMPONENT_NAME.value}--prefix`]: prefixIcon || labelContent,\n          [`${COMPONENT_NAME.value}--suffix`]: suffixIcon || suffixContent,\n          [`${COMPONENT_NAME.value}--focused`]: focused.value,\n        },\n      ];\n\n      const tips = renderTNodeJSX('tips');\n\n      return (\n        <div class={wrapClasses.value}>\n          <div\n            class={classes}\n            onClick={inputHandle.onRootClick}\n            onMouseenter={inputEventHandler.onInputMouseenter}\n            onMouseleave={inputEventHandler.onInputMouseleave}\n            onWheel={inputEventHandler.onHandleMousewheel}\n          >\n            {prefixIcon ? (\n              <span class={[`${COMPONENT_NAME.value}__prefix`, `${COMPONENT_NAME.value}__prefix-icon`]}>\n                {prefixIcon}\n              </span>\n            ) : null}\n            {labelContent}\n            {props.showInput && (\n              <input\n                class={`${COMPONENT_NAME.value}__inner`}\n                {...inputAttrs.value}\n                {...inputEvents}\n                ref={inputRef}\n                value={isComposition.value ? compositionValue.value ?? '' : inputValue.value ?? ''}\n                onInput={(e: Event) => inputHandle.handleInput(e as InputEvent)}\n              />\n            )}\n            {props.autoWidth && (\n              <span ref={inputPreRef} class={`${classPrefix.value}-input__input-pre`}>\n                {innerValue.value || tPlaceholder.value}\n              </span>\n            )}\n            {suffixContent}\n            {passwordIcon ? (\n              <span\n                class={[\n                  `${COMPONENT_NAME.value}__suffix`,\n                  `${COMPONENT_NAME.value}__suffix-icon`,\n                  `${COMPONENT_NAME.value}__clear`,\n                ]}\n              >\n                {passwordIcon}\n              </span>\n            ) : null}\n            {suffixIcon ? (\n              <span\n                class={[\n                  `${COMPONENT_NAME.value}__suffix`,\n                  `${COMPONENT_NAME.value}__suffix-icon`,\n                  { [`${COMPONENT_NAME.value}__clear`]: showClear.value },\n                ]}\n              >\n                {suffixIcon}\n              </span>\n            ) : null}\n          </div>\n          {tips && (\n            <div class={`${INPUT_TIPS_CLASS.value} ${classPrefix.value}-input__tips--${tStatus.value || 'default'}`}>\n              {tips}\n            </div>\n          )}\n        </div>\n      );\n    };\n  },\n});\n"],"names":["getValidAttrs","obj","newObj","Object","keys","forEach","key","isUndefined","defineComponent","name","props","_objectSpread","showInput","type","Boolean","keepWrapperWidth","allowTriggerBlur","setup","expose","_ref","_useConfig","useConfig","globalConfig","_useGlobalIcon","useGlobalIcon","BrowseIcon","TdBrowseIcon","BrowseOffIcon","TdBrowseOffIcon","CloseCircleFilledIcon","TdCloseCircleFilledIcon","disabled","useFormDisabled","COMPONENT_NAME","usePrefixClass","INPUT_WRAP_CLASS","INPUT_TIPS_CLASS","_useCommonClassName","useCommonClassName","STATUS","SIZE","classPrefix","renderTNodeJSX","useTNodeJSX","_useInput","useInput","isHover","tStatus","inputRef","renderType","showClear","focused","inputValue","isComposition","compositionValue","innerValue","limitNumber","inputHandle","_objectWithoutProperties","_excluded","_useInputWidth","useInputWidth","inputPreRef","inputEventHandler","useInputEventHandler","tPlaceholder","computed","_props2$placeholder","placeholder","value","inputAttrs","_props2$autocomplete","autofocus","readonly","maxlength","allowInputOverMax","autocomplete","unselectable","wrapClasses","_defineProperty","concat","autoWidth","inputEvents","onFocus","e","emitFocus","onBlur","formatAndEmitBlur","onKeydown","handleKeydown","onKeyup","handleKeyUp","onKeypress","handleKeypress","onPaste","onHandlePaste","onCompositionend","onHandleCompositionend","onCompositionstart","onHandleCompositionstart","_ref3","_compositionValue$val","_inputValue$value","prefixIcon","suffixIcon","passwordIcon","label","silent","suffix","limitNode","showLimitNumber","labelContent","_createVNode","suffixContent","emitPassword","clearIconRef","emitClear","onClearIconMousedown","classes","inputClass","size","align","tips","onRootClick","onInputMouseenter","onInputMouseleave","onHandleMousewheel","_mergeProps","onInput","handleInput"],"mappings":"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"}