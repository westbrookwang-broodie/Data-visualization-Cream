import BezierEasing from 'bezier-easing';
import { Point } from '../../type';
import { HueMetaItem } from './meta';
interface ToneMakerOption {
    range: [number, number];
    bezierMeta: [number, number, number, number];
    count: number;
}
export declare const toFix: (num: number, digits?: number) => number;
export declare function seekXInBezier({ easing, y, precision, }: {
    easing: BezierEasing.EasingFunction;
    y: number;
    precision?: number;
}): number;
export declare const getTonesByShrinkCurve: ({ range: [start, end], bezierMeta: [x1, y1, x2, y2], count, }: ToneMakerOption) => number[];
export declare const getTonesByRange: ({ range: [min, max], bezierMeta, count, }: ToneMakerOption) => number[];
export declare const makePiecewiseFunction: (points: Point[], base: number, max: number) => (n: number, value: number) => number;
export declare const getChromas: (piecewise: HueMetaItem['piecewise'], piecewiseBase: HueMetaItem['piecewiseBase'], chroma: number, count: number) => any[];
export {};
