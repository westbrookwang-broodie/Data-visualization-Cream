{
  "version": 3,
  "sources": ["../../tdesign-icons-vue-next/node_modules/@babel/runtime/helpers/esm/typeof.js", "../../tdesign-icons-vue-next/node_modules/@babel/runtime/helpers/esm/toPrimitive.js", "../../tdesign-icons-vue-next/node_modules/@babel/runtime/helpers/esm/toPropertyKey.js", "../../tdesign-icons-vue-next/node_modules/@babel/runtime/helpers/esm/defineProperty.js", "../../tdesign-icons-vue-next/src/utils/render-fn.ts", "../../tdesign-icons-vue-next/src/utils/config-context.ts", "../../tdesign-icons-vue-next/src/utils/use-common-classname.ts", "../../tdesign-icons-vue-next/src/utils/use-size-props.ts", "../../tdesign-icons-vue-next/esm/style/css.js"],
  "sourcesContent": ["export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}", "import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}", "import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}", "import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}", "import { VNode, h } from 'vue';\nimport { SVGJson } from './types';\n\nfunction camel2Kebab(camelString:string) {\n  const covertArr = ['fillOpacity', 'fillRule', 'clipRule'];\n  if (covertArr.includes(camelString)) { return camelString.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, '$1-$2').toLowerCase(); }\n  return camelString;\n}\n\nfunction renderFn(node: SVGJson, props:Record<string, any>): VNode {\n  const kebabAttrs = Object.keys(node.attrs).reduce((result, key) => {\n    // eslint-disable-next-line no-param-reassign\n    result[camel2Kebab(key)] = node.attrs[key];\n    return result;\n  }, {});\n  return h(\n    node.tag,\n    {\n      ...kebabAttrs,\n      ...props,\n    },\n    (node.children || []).map((child: SVGJson) => renderFn(child, {})),\n  );\n}\n\nexport default renderFn;\n", "export const DEFAULT_CLASS_PREFIX = 't';\nexport const DEFAULT_LOCALE = 'zh-CN';\n\nexport interface Config {\n  /**\n   * 组件类名前缀\n   *\n   * @default 't'\n   */\n  classPrefix?: string;\n\n  /**\n   * 组件语言版本\n   *\n   * @default 'zh-CN'\n   */\n  locale?: 'zh-CN';\n}\n\nconst ConfigContext = {\n  classPrefix: DEFAULT_CLASS_PREFIX,\n  locale: DEFAULT_LOCALE,\n};\n\nexport default ConfigContext;\n", "import ConfigContext from './config-context';\n\nconst keyList = ['SIZE', 'STATUS'] as const;\n\ntype CommonClassNameRecord<T extends readonly (keyof any)[]> = {\n  [K in T[number]]: Record<string, string>;\n};\n\nexport default function useCommonClassName(): CommonClassNameRecord<typeof keyList> {\n  const { classPrefix } = ConfigContext;\n\n  return {\n    SIZE: {\n      default: '',\n      xs: `${classPrefix}-size-xs`,\n      small: `${classPrefix}-size-s`,\n      medium: `${classPrefix}-size-m`,\n      large: `${classPrefix}-size-l`,\n      xl: `${classPrefix}-size-xl`,\n      block: `${classPrefix}-size-full-width`,\n    },\n    STATUS: {\n      loading: `${classPrefix}-is-loading`,\n      disabled: `${classPrefix}-is-disabled`,\n      focused: `${classPrefix}-is-focused`,\n      success: `${classPrefix}-is-success`,\n      error: `${classPrefix}-is-error`,\n      warning: `${classPrefix}-is-warning`,\n      selected: `${classPrefix}-is-selected`,\n      active: `${classPrefix}-is-active`,\n      checked: `${classPrefix}-is-checked`,\n      current: `${classPrefix}-is-current`,\n      hidden: `${classPrefix}-is-hidden`,\n      visible: `${classPrefix}-is-visible`,\n      expanded: `${classPrefix}-is-expanded`,\n      indeterminate: `${classPrefix}-is-indeterminate`,\n    },\n  };\n}\n", "import { computed, ComputedRef } from 'vue';\nimport useCommonClassName from './use-common-classname';\n\n// eslint-disable-next-line consistent-return\nexport default function useSizeProps(size?: ComputedRef<string | number>) {\n  const COMMON_SIZE_CLASS_NAMES = useCommonClassName().SIZE;\n\n  const className = computed(() => {\n    if (size.value in COMMON_SIZE_CLASS_NAMES) {\n      return COMMON_SIZE_CLASS_NAMES[size.value];\n    }\n    return '';\n  });\n\n  const style = computed(() => {\n    if (size.value === undefined || size.value in COMMON_SIZE_CLASS_NAMES) {\n      return {};\n    }\n    return {\n      fontSize: size.value,\n    };\n  });\n\n  return { style, className };\n}\n", "import \"./index.css\";\n//# sourceMappingURL=css.js.map\n"],
  "mappings": "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",
  "names": ["obj", "toPrimitive", "toPropertyKey", "camel2Kebab", "camelString", "covertArr", "includes", "replace", "toLowerCase", "renderFn", "node", "props", "kebabAttrs", "Object", "keys", "attrs", "reduce", "result", "key", "h", "tag", "_objectSpread", "children", "map", "child", "DEFAULT_CLASS_PREFIX", "DEFAULT_LOCALE", "ConfigContext", "classPrefix", "locale", "useCommonClassName", "classPrefix", "ConfigContext", "SIZE", "default", "xs", "small", "medium", "large", "xl", "block", "STATUS", "loading", "disabled", "focused", "success", "error", "warning", "selected", "active", "checked", "current", "hidden", "visible", "expanded", "indeterminate", "useSizeProps", "size", "COMMON_SIZE_CLASS_NAMES", "useCommonClassName", "SIZE", "className", "computed", "value", "style", "fontSize"]
}
